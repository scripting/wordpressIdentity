<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sat, 13 Apr 2024 00:43:47 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: wordpressIdentity</title>
		<dateCreated>Tue, 22 Aug 2023 14:20:51 GMT</dateCreated>
		<dateModified>Sat, 13 Apr 2024 00:43:46 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 9, 10, 12, 15, 17, 25, 26, 27, 35, 48</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>210</windowTop>
		<windowLeft>675</windowLeft>
		<windowBottom>1230</windowBottom>
		<windowRight>2428</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/wpidentity/">
			<outline text="worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="#### 4/12/24; 12:12:29 PM by DW" created="Thu, 11 Apr 2024 15:29:15 GMT">
					<outline text="#### Put the API into a wrapper, so it's easy to spot the WordPress calls in client code. " created="Thu, 11 Apr 2024 15:29:16 GMT">
						<outline text="Left the original not-wrapped api file in place, it's used in FeedLand and possibly other places." created="Fri, 12 Apr 2024 15:06:53 GMT"/>
						<outline text="The new api is in api2.js. Yes, I hate that too, but I don't see another way to do it. ;-)" created="Fri, 12 Apr 2024 15:07:13 GMT"/>
						</outline>
					<outline text="#### Got wpidentity.scripting.com running again. " created="Thu, 11 Apr 2024 16:19:38 GMT"/>
					<outline text="#### Wrote code for storage" created="Fri, 12 Apr 2024 16:11:05 GMT">
						<outline text="The demo app maintains a file for each user called demo/prefs.json." created="Fri, 12 Apr 2024 16:11:22 GMT"/>
						<outline text="Just three values in it, a count, a date, and a slogan. Updated every minute. " created="Fri, 12 Apr 2024 16:11:39 GMT"/>
						</outline>
					</outline>
				<outline text="#### 3/28/24; 11:36:57 AM by DW" created="Thu, 28 Mar 2024 15:36:56 GMT">
					<outline text="#### re writeUserDataFile below.." created="Thu, 28 Mar 2024 15:43:31 GMT">
						<outline text="I couldn't get anything back from the server via POST, so I'm trying GET. " created="Thu, 28 Mar 2024 15:36:58 GMT"/>
						<outline text="It worked. I've been over it on both ends, can't see any difference between it and daveappserver which is what we use in feedland and drummer. " created="Thu, 28 Mar 2024 15:42:21 GMT"/>
						<outline text="So I'm just going to continue with calling GET, and trust that the next person to pass this way will figure out what I did wrong. ;-)" created="Thu, 28 Mar 2024 15:42:46 GMT"/>
						</outline>
					</outline>
				<outline text="#### 3/25/24; 10:08:19 AM by DW" created="Mon, 25 Mar 2024 14:08:19 GMT">
					<outline text="Add a cache for usernames." created="Mon, 25 Mar 2024 14:08:19 GMT"/>
					</outline>
				<outline text="#### 3/24/24; 10:55:17 AM by DW" created="Sun, 24 Mar 2024 14:55:16 GMT">
					<outline text="Moved these notes to docs/storage.md." created="Fri, 12 Apr 2024 16:26:23 GMT"/>
					</outline>
				<outline text="#### 3/23/24; 7:30:58 PM by DW" created="Sat, 23 Mar 2024 23:30:58 GMT">
					<outline text="Export getUserInfo, which takes an accessToken and calls back with user info." created="Sat, 23 Mar 2024 23:30:58 GMT"/>
					</outline>
				<outline text="#### 10/31/23; 10:25:25 AM by DW" created="Wed, 01 Nov 2023 14:25:22 GMT">
					<outline text="Allow the caller to handle wordpress login." created="Wed, 01 Nov 2023 14:25:32 GMT"/>
					</outline>
				<outline text="#### 9/14/23; 8:28:29 AM by DW" created="Thu, 14 Sep 2023 12:28:29 GMT">
					<outline text="I wanted to set categories for posts via addPost and updatePost, but found the categories have to already exist before using them, it's not as low-tech as I imagined. So for now we'll have to punt on setting categories through these calls." created="Thu, 14 Sep 2023 12:28:30 GMT"/>
					</outline>
				<outline text="#### 9/13/23; 12:56:32 PM by DW" created="Wed, 13 Sep 2023 16:56:27 GMT">
					<outline text="We now summarize the various types: site, post, user, mediaobject, etc to a simpler package as we have done with other apps." created="Wed, 13 Sep 2023 16:56:33 GMT"/>
					<outline text="Now we have a proper foundation to build on for scripting in Drummer. " created="Wed, 13 Sep 2023 16:57:27 GMT"/>
					</outline>
				<outline text="#### 9/11/23; 12:05:47 PM by DW" created="Mon, 11 Sep 2023 16:05:47 GMT">
					<outline text="When calling back to the app, instead of calling the parameter accesstoken, call it wordpressaccesstoken, to distinguish it from other apps, such as github. " created="Mon, 11 Sep 2023 16:05:47 GMT"/>
					</outline>
				<outline text="#### 9/10/23; 1:02:07 PM by DW" created="Sun, 10 Sep 2023 17:02:05 GMT">
					<outline text="Getting ready to include this in daveappserver. " created="Sun, 10 Sep 2023 17:02:08 GMT"/>
					<outline text="The HTTP requests should all have &quot;wordpress&quot; in their names. " created="Sun, 10 Sep 2023 17:02:18 GMT"/>
					<outline text="Should be able to get by with changes only in this project, because the api.js code is here. " created="Sun, 10 Sep 2023 17:02:35 GMT"/>
					</outline>
				<outline text="#### 9/5/23; 10:26:37 AM by DW" created="Tue, 05 Sep 2023 14:26:35 GMT">
					<outline text="Turned into a package so I can include it in other apps, probably FeedLand and Drummer." created="Tue, 05 Sep 2023 14:26:37 GMT"/>
					<outline text="Rewrite the readme.md file for this repo to put the whole thing to bed and get ready for the next thing." created="Tue, 05 Sep 2023 15:29:29 GMT"/>
					</outline>
				<outline text="#### 9/5/23; 9:25:58 AM by DW" created="Tue, 05 Sep 2023 13:25:58 GMT">
					<outline text="New functions to delete a post and get the user's subscriptions. " created="Tue, 05 Sep 2023 13:25:59 GMT"/>
					</outline>
				<outline text="#### 9/4/23; 5:33:32 PM by DW" created="Mon, 04 Sep 2023 21:33:27 GMT">
					<outline text="If you pass a &lt;i&gt;urlapphomepage&lt;/i&gt; parameter to the /connect call, we'll redirect back to that url instead of the default." created="Mon, 04 Sep 2023 21:33:32 GMT"/>
					<outline text="This means that one wpidentity server can support lots of apps. " created="Mon, 04 Sep 2023 21:34:15 GMT"/>
					</outline>
				<outline text="#### 9/3/23; 10:16:21 AM by DW" created="Sun, 03 Sep 2023 14:16:20 GMT">
					<outline text="I took a detour to build a &quot;blog browser&quot; based on the client app here, which was not intended to be anything so robust, it's just meant to be example code." created="Sun, 03 Sep 2023 14:16:21 GMT"/>
					<outline text="So I split it off into its own project, and refocused the client app here to its much more humble beginnings. " created="Sun, 03 Sep 2023 14:17:04 GMT"/>
					</outline>
				<outline text="#### 8/29/23; 12:14:59 PM by DW" created="Tue, 29 Aug 2023 16:14:56 GMT">
					<outline text="More verbs" created="Tue, 29 Aug 2023 16:15:00 GMT">
						<outline text="testGetSiteInfo (9969399)" created="Tue, 29 Aug 2023 16:15:04 GMT"/>
						<outline text="testGetSiteMedialist (9969399)" created="Tue, 29 Aug 2023 16:15:04 GMT"/>
						<outline text="testAddPost (9969399) -- this is the biggie of course, and it &lt;a href=&quot;https://unberkeley.wordpress.com/2023/08/29/so-youd-like-a-test-post-2/&quot;&gt;worked&lt;/a&gt; the first time. ;-)" created="Tue, 29 Aug 2023 17:03:11 GMT"/>
						<outline text="testUpdatePost (9969399, 4594) -- and this works too, changes the content without touching the title and other properties."/>
						</outline>
					</outline>
				<outline text="#### 8/28/23; 7:45:13 PM by DW" created="Mon, 28 Aug 2023 22:49:42 GMT">
					<outline text="Let's add some verbs." created="Mon, 28 Aug 2023 22:49:44 GMT"/>
					<outline text="The docs we need are here." created="Mon, 28 Aug 2023 22:49:48 GMT">
						<outline text="https://github.com/Automattic/wp-calypso/tree/trunk/packages/wpcom.js" created="Mon, 28 Aug 2023 22:49:54 GMT"/>
						</outline>
					<outline text="This is how you get the info about a post. Type this into the client console.." created="Mon, 28 Aug 2023 23:43:51 GMT">
						<outline text="testGetPost (9969399, 4588)" created="Mon, 28 Aug 2023 23:44:00 GMT"/>
						</outline>
					<outline text="The verbs I just implemented --" created="Mon, 28 Aug 2023 23:44:07 GMT">
						<outline text="getSitePosts (token, params.idsite, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
						<outline text="getSiteUsers (token, params.idsite, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
						<outline text="getPost (token, params.idsite, params.idpost, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
						</outline>
					</outline>
				<outline text="#### 8/28/23; 10:59:21 AM by DW" created="Mon, 28 Aug 2023 14:59:20 GMT">
					<outline text="No server changes. On the client, we now &lt;a href=&quot;https://imgs.scripting.com/2023/08/28/sitelist.png&quot;&gt;display a list&lt;/a&gt; of your sites with creation and modification dates after you sign on. " created="Mon, 28 Aug 2023 16:38:00 GMT"/>
					</outline>
				<outline text="#### 8/27/23; 10:17:33 AM by DW" created="Sat, 26 Aug 2023 22:00:21 GMT">
					<outline text="Now I &lt;i&gt;really really&lt;/i&gt; have it working. :smile: " created="Sat, 26 Aug 2023 18:18:40 GMT"/>
					<outline text="After getting getUserInfo to work, I thought let's quickly test getting a list of user sites, but that didn't work because i didn't get a powerful enough token. That led me back to the authentication docs, and i don't see anything there about scopes. So now I'm back to zero, I have to find docs. I consulted ChatGPT of course. " created="Sun, 27 Aug 2023 14:15:55 GMT"/>
					<outline text="And then I found these docs, which were *exactly* what I needed. " created="Sun, 27 Aug 2023 14:15:55 GMT">
						<outline text="https://developer.wordpress.com/docs/oauth2/" created="Sun, 27 Aug 2023 14:15:56 GMT"/>
						<outline text="https://github.com/Automattic/wp-calypso/tree/trunk/packages/wpcom.js/docs" created="Sun, 27 Aug 2023 15:41:19 GMT"/>
						</outline>
					<outline text="If you're trying to figure out how the wordpress.com api works, this is the place to start. "/>
					<outline text="Added a new config value -- config.scopes, defaults to &quot;global&quot;. With that I was able to define the /getusersites endpoint. And it works. This is a big part of what I was trying to get to." created="Sun, 27 Aug 2023 14:55:24 GMT"/>
					<outline text="Run the &lt;a href=&quot;http://scripting.com/code/wpidentity/client/&quot;&gt;example client&lt;/a&gt; and if you're already signed in, sign out and in again to get the more powerful token and in the JavaScript console enter: " created="Sun, 27 Aug 2023 14:57:32 GMT">
						<outline text="&lt;code&gt;testGetUserSites ()&lt;/code&gt;"/>
						</outline>
					<outline text="You get a lot of data for that request. In the next iteration I hope to provide a way to browse it. " created="Sun, 27 Aug 2023 15:18:11 GMT"/>
					</outline>
				<outline text="#### 8/26/23; 12:14:10 PM by DW" created="Sat, 26 Aug 2023 16:14:07 GMT">
					<outline text="Now I &lt;i&gt;really&lt;/i&gt; have it working. :smile: " created="Sat, 26 Aug 2023 18:18:40 GMT"/>
					<outline text="What I didn't know about the last version is that the accessToken was getting mangled by URL-encoding it. " created="Sat, 26 Aug 2023 18:18:49 GMT"/>
					<outline text="I hadn't actually used the accessToken until today and when I did, I got an error from wordpress.com saying that it wasn't a valid token. " created="Sat, 26 Aug 2023 18:19:40 GMT"/>
					<outline text="After some thought and working it out with ChatGPT (my virtual programming partner, &lt;a href=&quot;https://chat.openai.com/share/7ecef75d-7fb4-475c-940e-7834258da3e5&quot;&gt;transcript included&lt;/a&gt;) I send the token back and forth by base64-ing, and url-safing it, and only doing it via HTTPS. And it works. I got a nice structure of information about me back from the server. " created="Sat, 26 Aug 2023 18:20:11 GMT"/>
					<outline text="Next session I'm going to try getting a list of my blogs, and then a list of posts, etc. The model here is the davetwitter package I build all my apps on. Not going to go nearly as far, at least not at first, but enough so that I can do a nice little editor for WordPress writing. " created="Sat, 26 Aug 2023 18:21:44 GMT"/>
					<outline text="To test, go to the &lt;a href=&quot;http://scripting.com/code/wpidentity/client/&quot;&gt;client test page&lt;/a&gt;. Sign in, then open the JavaScript console and type: " created="Sat, 26 Aug 2023 18:23:08 GMT">
						<outline text="&lt;code&gt;testGetUserInfo ()&lt;/code&gt;"/>
						</outline>
					<outline text="If it worked you should see some info about yourself. If it didn't please report an &lt;a href=&quot;https://github.com/scripting/wordpressIdentity/issues&quot;&gt;issue&lt;/a&gt;. " created="Sat, 26 Aug 2023 18:24:12 GMT"/>
					</outline>
				<outline text="#### 8/22/23; 10:21:35 AM by DW" created="Sat, 12 Aug 2023 22:34:42 GMT">
					<outline text="Started." created="Sat, 12 Aug 2023 22:34:44 GMT"/>
					<outline text="A8C docs are here -- " created="Sat, 26 Aug 2023 16:14:11 GMT">
						<outline text="https://developer.wordpress.com/docs/wpcc/" created="Sat, 26 Aug 2023 16:14:25 GMT"/>
						</outline>
					<outline text="A8C examples --" created="Sat, 26 Aug 2023 16:18:18 GMT">
						<outline text="https://github.com/Automattic/wpcom-connect-examples" created="Sat, 26 Aug 2023 16:18:22 GMT"/>
						</outline>
					<outline text="WPCOM docs --" created="Sun, 27 Aug 2023 14:15:30 GMT">
						<outline text="https://github.com/Automattic/wp-calypso/tree/trunk/packages/wpcom.js" created="Sun, 27 Aug 2023 14:15:36 GMT"/>
						</outline>
					<outline text="Repo is here --" created="Sat, 26 Aug 2023 16:14:28 GMT">
						<outline text="https://github.com/scripting/wordpressIdentity" created="Sat, 26 Aug 2023 16:14:31 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;wpidentity&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Implements OAuth identity and a simple verb set with wordpress.com for Node.js apps.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.17&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/wpidentity.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;main&quot;: &quot;wpidentity.js&quot;,"/>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;wpidentity.js&quot;"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;wpcom&quot;: &quot;*&quot;," created="Sat, 26 Aug 2023 16:21:40 GMT"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;," created="Tue, 22 Aug 2023 15:21:53 GMT"/>
						<outline text="&quot;davesql&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="wpidentity.js">
				<outline text="var myProductName = &quot;wpidentity&quot;, myVersion = &quot;0.4.17&quot;;"/>
				<outline text="" created="Sat, 12 Aug 2023 22:37:22 GMT"/>
				<outline text="exports.start = start; "/>
				<outline text="exports.handleHttpRequest = handleHttpRequest; "/>
				<outline text="exports.getUserInfo = getUserInfo; //3/23/24 by DW" created="Sat, 23 Mar 2024 23:31:46 GMT"/>
				<outline text="" created="Tue, 05 Sep 2023 14:34:40 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;); "/>
				<outline text="const request = require (&quot;request&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const wpcom = require (&quot;wpcom&quot;); //8/26/23 by DW"/>
				<outline text="const davesql = require (&quot;davesql&quot;); //3/24/24 by DW"/>
				<outline text="" created="Tue, 22 Aug 2023 15:11:42 GMT"/>
				<outline text="var config = { ">
					<outline text="myRandomNumber: utils.random (1, 1000000000)," created="Tue, 22 Aug 2023 21:45:33 GMT"/>
					<outline text="urlMyHomePage: &quot;http://scripting.com/code/wpidentity/client/&quot;," created="Tue, 22 Aug 2023 22:13:05 GMT"/>
					<outline text="" created="Tue, 22 Aug 2023 15:32:36 GMT"/>
					<outline text="urlRequestToken: &quot;https://public-api.wordpress.com/oauth2/token&quot;," created="Tue, 22 Aug 2023 15:32:36 GMT"/>
					<outline text="urlAuthorize: &quot;https://public-api.wordpress.com/oauth2/authorize&quot;," created="Tue, 22 Aug 2023 15:32:45 GMT"/>
					<outline text="urlAuthenticate: &quot;https://public-api.wordpress.com/oauth2/authenticate&quot;," created="Tue, 22 Aug 2023 15:33:00 GMT"/>
					<outline text="urlRedirect: &quot;http://localhost:1408/callbackFromWordpress&quot;," created="Tue, 22 Aug 2023 15:35:26 GMT"/>
					<outline text="" created="Sun, 27 Aug 2023 14:48:34 GMT"/>
					<outline text="scope: &quot;global&quot;, //default -- 8/27/23 by DW" created="Sun, 27 Aug 2023 14:48:35 GMT"/>
					<outline text="" created="Sun, 24 Mar 2024 15:48:24 GMT"/>
					<outline text="mysqlVersion: undefined, //3/24/24 by DW" created="Sat, 18 Nov 2023 17:00:00 GMT"/>
					<outline text="flStorageEnabled: false, //3/24/24 by DW" created="Sat, 18 Nov 2023 17:00:00 GMT"/>
					<outline text="" created="Mon, 25 Mar 2024 14:05:56 GMT"/>
					<outline text="ctUsernameCacheSecs: 60, //3/25/24 by DW" created="Mon, 25 Mar 2024 14:05:57 GMT"/>
					<outline text="urlServerHomePageSource: &quot;http://scripting.com/code/wordsocial/index.html&quot;, //3/25/24 by DW" created="Mon, 25 Mar 2024 15:28:22 GMT"/>
					<outline text="" created="Mon, 25 Mar 2024 16:09:09 GMT"/>
					<outline text="urlServer: &quot;https://word.social/&quot; //3/25/24 by DW" created="Mon, 25 Mar 2024 16:09:10 GMT"/>
					<outline text="};"/>
					</outline>
				<outline text="" created="Mon, 25 Mar 2024 14:08:12 GMT"/>
				<outline text="var usernameCache = new Object ();" created="Mon, 25 Mar 2024 14:03:52 GMT"/>
				<outline text="var whenLastUsernameCacheStart = new Date ();" created="Mon, 25 Mar 2024 14:04:23 GMT"/>
				<outline text="" created="Sat, 26 Aug 2023 17:45:27 GMT"/>
				<outline text="function base64UrlEncode (theData) {" created="Sat, 26 Aug 2023 17:45:27 GMT">
					<outline text="var base64 = Buffer.from (theData).toString ('base64');"/>
					<outline text="return (base64.replace ('+', '-').replace ('/', '_').replace (/=+$/, ''));"/>
					<outline text="}" created="Sat, 26 Aug 2023 17:45:41 GMT"/>
					</outline>
				<outline text="function base64UrlDecode (theData) {" created="Sat, 26 Aug 2023 17:46:35 GMT">
					<outline text="theData = theData.replace ('-', '+').replace ('_', '/');"/>
					<outline text="while (theData.length % 4) {">
						<outline text="theData += '=';"/>
						<outline text="}"/>
						</outline>
					<outline text="return (Buffer.from (theData, 'base64').toString ('utf-8'));"/>
					<outline text="}" created="Sat, 26 Aug 2023 17:46:55 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 17:45:27 GMT"/>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 16:30:01 GMT"/>
				<outline text="function connectWithWordpress (callback) {" isComment="true" created="Tue, 22 Aug 2023 15:29:45 GMT">
					<outline text="var params = {">
						<outline text="client_id: config.clientId,"/>
						<outline text="redirect_uri: config.urlRedirect," created="Tue, 22 Aug 2023 15:35:04 GMT"/>
						<outline text="response_type: &quot;code&quot;," created="Tue, 22 Aug 2023 15:33:59 GMT"/>
						<outline text="scope: &quot;global,auth,user,read,posts,follow,activity,likes&quot;," created="Sat, 26 Aug 2023 22:23:40 GMT"/>
						<outline text="state: config.myRandomNumber" created="Tue, 22 Aug 2023 15:34:15 GMT"/>
						<outline text="};"/>
						</outline>
					<outline text="var apiUrl = config.urlAuthenticate + &quot;?&quot; + utils.buildParamList (params);"/>
					<outline text="request (apiUrl, function (err, response, body) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;connectWithWordpress: err.message == &quot; + err.message);"/>
							<outline text="callback (err);" created="Mon, 08 Nov 2021 17:33:37 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;connectWithWordpress: body == &quot; + body);" isComment="true"/>
							<outline text="callback (undefined, body);" created="Mon, 08 Nov 2021 17:38:59 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Tue, 22 Aug 2023 15:29:51 GMT"/>
					</outline>
				<outline text="function requestTokenFromWordpress (theCode, callback) {" created="Tue, 22 Aug 2023 16:24:37 GMT">
					<outline text="var theRequest = {">
						<outline text="method: &quot;POST&quot;,"/>
						<outline text="url: config.urlRequestToken," created="Tue, 22 Aug 2023 16:28:05 GMT"/>
						<outline text="form: {" created="Tue, 22 Aug 2023 16:35:36 GMT">
							<outline text="client_id: config.clientId,"/>
							<outline text="client_secret: config.clientSecret,"/>
							<outline text="redirect_uri: config.urlRedirect," created="Tue, 22 Aug 2023 15:35:04 GMT"/>
							<outline text="code: theCode," created="Tue, 22 Aug 2023 16:26:34 GMT"/>
							<outline text="scope: config.scope," isComment="true" created="Sat, 26 Aug 2023 22:23:40 GMT"/>
							<outline text="grant_type: &quot;authorization_code&quot;" created="Tue, 22 Aug 2023 15:33:59 GMT"/>
							<outline text="}" created="Tue, 22 Aug 2023 16:35:47 GMT"/>
							</outline>
						<outline text="};"/>
						</outline>
					<outline text="request (theRequest, function (err, response, body) {">
						<outline text="if (err) {">
							<outline text="callback (err);" created="Mon, 08 Nov 2021 17:33:37 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="try {" created="Tue, 22 Aug 2023 16:40:37 GMT">
								<outline text="const data = JSON.parse (body);" created="Tue, 22 Aug 2023 16:40:51 GMT"/>
								<outline text="callback (undefined, data);" created="Tue, 22 Aug 2023 16:41:07 GMT"/>
								<outline text="}" created="Tue, 22 Aug 2023 16:40:40 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Tue, 22 Aug 2023 16:40:41 GMT">
								<outline text="callback (err);" created="Tue, 22 Aug 2023 16:40:45 GMT"/>
								<outline text="}" created="Tue, 22 Aug 2023 16:40:48 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Tue, 22 Aug 2023 16:25:05 GMT"/>
					</outline>
				<outline text="function convertDate (theDate) {" created="Wed, 13 Sep 2023 16:26:39 GMT">
					<outline text="if (theDate === undefined) {" created="Wed, 13 Sep 2023 16:35:24 GMT">
						<outline text="return (undefined);" created="Wed, 13 Sep 2023 16:34:19 GMT"/>
						<outline text="}" created="Wed, 13 Sep 2023 16:35:33 GMT"/>
						</outline>
					<outline text="else {" created="Wed, 13 Sep 2023 16:35:34 GMT">
						<outline text="const d = new Date (theDate);" created="Wed, 13 Sep 2023 16:26:55 GMT"/>
						<outline text="if (isNaN (d)) {" created="Wed, 13 Sep 2023 16:34:01 GMT">
							<outline text="return (undefined);" created="Wed, 13 Sep 2023 16:34:19 GMT"/>
							<outline text="}" created="Wed, 13 Sep 2023 16:34:10 GMT"/>
							</outline>
						<outline text="return (d);" created="Wed, 13 Sep 2023 16:27:35 GMT"/>
						<outline text="}" created="Wed, 13 Sep 2023 16:35:36 GMT"/>
						</outline>
					<outline text="}" created="Wed, 13 Sep 2023 16:26:48 GMT"/>
					</outline>
				<outline text="function convertString (theString) {" created="Wed, 13 Sep 2023 16:47:47 GMT">
					<outline text="if (theString === undefined) {" created="Wed, 13 Sep 2023 16:35:24 GMT">
						<outline text="return (undefined);" created="Wed, 13 Sep 2023 16:34:19 GMT"/>
						<outline text="}" created="Wed, 13 Sep 2023 16:35:33 GMT"/>
						</outline>
					<outline text="if (theString.length == 0) {" created="Wed, 13 Sep 2023 16:48:16 GMT">
						<outline text="return (undefined);" created="Wed, 13 Sep 2023 16:48:24 GMT"/>
						<outline text="}" created="Wed, 13 Sep 2023 16:48:31 GMT"/>
						</outline>
					<outline text="else {" created="Wed, 13 Sep 2023 16:48:46 GMT">
						<outline text="return (s);" created="Wed, 13 Sep 2023 16:48:40 GMT"/>
						<outline text="}" created="Wed, 13 Sep 2023 16:48:48 GMT"/>
						</outline>
					<outline text="}" created="Wed, 13 Sep 2023 16:48:01 GMT"/>
					</outline>
				<outline text="function convertPost (item) { //convert a post received from WordPress to the struct defined by our API -- 9/12/23 by DW" created="Tue, 12 Sep 2023 16:31:46 GMT">
					<outline text="function getCatArray () {" created="Tue, 12 Sep 2023 16:42:00 GMT">
						<outline text="var catarray = new Array ();" created="Tue, 12 Sep 2023 16:42:27 GMT"/>
						<outline text="for (var x in item.categories) {" created="Sat, 02 Sep 2023 15:48:12 GMT">
							<outline text="catarray.push (x);" created="Sat, 02 Sep 2023 15:48:25 GMT"/>
							<outline text="}" created="Sat, 02 Sep 2023 15:49:09 GMT"/>
							</outline>
						<outline text="return (catarray);" created="Tue, 12 Sep 2023 16:44:11 GMT"/>
						<outline text="}" created="Tue, 12 Sep 2023 16:42:14 GMT"/>
						</outline>
					<outline text="function getCatstring () {" created="Tue, 12 Sep 2023 16:42:00 GMT">
						<outline text="var catstring = &quot;&quot;;" created="Tue, 12 Sep 2023 16:42:27 GMT"/>
						<outline text="for (var x in item.categories) {" created="Sat, 02 Sep 2023 15:48:12 GMT">
							<outline text="catstring += &quot;,&quot; + x;" created="Sat, 02 Sep 2023 15:48:25 GMT"/>
							<outline text="}" created="Sat, 02 Sep 2023 15:49:09 GMT"/>
							</outline>
						<outline text="if (catstring.length &gt; 0) {" created="Tue, 12 Sep 2023 16:43:12 GMT">
							<outline text="catstring = utils.stringDelete (catstring, 1, 1);" created="Tue, 12 Sep 2023 16:43:52 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 16:43:20 GMT"/>
							</outline>
						<outline text="return (catstring);" created="Tue, 12 Sep 2023 16:44:11 GMT"/>
						<outline text="}" created="Tue, 12 Sep 2023 16:42:14 GMT"/>
						</outline>
					<outline text="return ({" created="Tue, 12 Sep 2023 15:40:49 GMT">
						<outline text="idPost: item.ID," created="Tue, 12 Sep 2023 15:41:45 GMT"/>
						<outline text="idSite: item.site_ID," created="Tue, 12 Sep 2023 15:41:50 GMT"/>
						<outline text="title: item.title," created="Tue, 12 Sep 2023 16:09:16 GMT"/>
						<outline text="guid: item.guid," created="Tue, 12 Sep 2023 16:09:16 GMT"/>
						<outline text="content: item.content," created="Tue, 12 Sep 2023 16:09:16 GMT"/>
						<outline text="type: item.type," created="Tue, 12 Sep 2023 16:09:25 GMT"/>
						<outline text="categories: getCatArray ()," created="Tue, 12 Sep 2023 16:44:56 GMT"/>
						<outline text="url: item.URL," created="Tue, 12 Sep 2023 16:10:00 GMT"/>
						<outline text="urlShort: item.short_URL," created="Tue, 12 Sep 2023 16:10:06 GMT"/>
						<outline text="whenCreated: convertDate (item.date)," created="Tue, 12 Sep 2023 15:42:07 GMT"/>
						<outline text="author: {" created="Tue, 12 Sep 2023 16:05:44 GMT">
							<outline text="id: item.author.ID," created="Tue, 12 Sep 2023 16:05:53 GMT"/>
							<outline text="username: item.author.login," created="Tue, 12 Sep 2023 16:06:04 GMT"/>
							<outline text="name: item.author.name" created="Tue, 12 Sep 2023 16:06:38 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 16:05:49 GMT"/>
							</outline>
						<outline text="});" created="Tue, 12 Sep 2023 15:41:20 GMT"/>
						</outline>
					<outline text="}" created="Tue, 12 Sep 2023 16:32:21 GMT"/>
					</outline>
				<outline text="function convertUser (theUser) {" created="Tue, 12 Sep 2023 17:18:14 GMT">
					<outline text="return ({" created="Tue, 12 Sep 2023 17:18:42 GMT">
						<outline text="idUser: theUser.ID," created="Tue, 12 Sep 2023 17:19:12 GMT"/>
						<outline text="name: theUser.display_name," created="Tue, 12 Sep 2023 17:20:15 GMT"/>
						<outline text="username: theUser.username," created="Tue, 12 Sep 2023 17:20:15 GMT"/>
						<outline text="email: theUser.email," created="Tue, 12 Sep 2023 17:20:25 GMT"/>
						<outline text="idPrimaryBlog: theUser.primary_blog," created="Tue, 12 Sep 2023 17:20:42 GMT"/>
						<outline text="urlPrimaryBlog: theUser.primary_blog_url," created="Tue, 12 Sep 2023 17:22:51 GMT"/>
						<outline text="whenStarted: convertDate (theUser.date)," created="Tue, 12 Sep 2023 17:21:11 GMT"/>
						<outline text="ctSites: theUser.site_count" created="Tue, 12 Sep 2023 17:21:11 GMT"/>
						<outline text="});" created="Tue, 12 Sep 2023 17:19:05 GMT"/>
						</outline>
					<outline text="}" created="Tue, 12 Sep 2023 17:18:23 GMT"/>
					</outline>
				<outline text="function convertSite (theSite) {" created="Tue, 12 Sep 2023 17:18:14 GMT">
					<outline text="" isComment="true" created="Tue, 12 Sep 2023 18:09:00 GMT"/>
					<outline text="console.log (&quot;convertSite: theSite == &quot; + utils.jsonStringify (theSite));" isComment="true" created="Tue, 12 Sep 2023 18:09:00 GMT"/>
					<outline text="" isComment="true" created="Tue, 12 Sep 2023 18:09:00 GMT"/>
					<outline text="return ({" created="Tue, 12 Sep 2023 17:18:42 GMT">
						<outline text="idSite: theSite.ID," created="Tue, 12 Sep 2023 17:19:12 GMT"/>
						<outline text="urlSite: theSite.URL," created="Tue, 12 Sep 2023 17:20:42 GMT"/>
						<outline text="description: theSite.description," created="Tue, 12 Sep 2023 17:59:07 GMT"/>
						<outline text="name: theSite.name," created="Tue, 12 Sep 2023 17:59:34 GMT"/>
						<outline text="whenCreated: convertDate (theSite.options.created_at)," created="Tue, 12 Sep 2023 18:01:55 GMT"/>
						<outline text="ctPosts: theSite.options.post_count" created="Tue, 12 Sep 2023 18:02:17 GMT"/>
						<outline text="});" created="Tue, 12 Sep 2023 17:19:05 GMT"/>
						</outline>
					<outline text="}" created="Tue, 12 Sep 2023 17:18:23 GMT"/>
					</outline>
				<outline text="function convertSubscription (theSubscription) {" created="Tue, 12 Sep 2023 17:18:14 GMT">
					<outline text="return ({" created="Tue, 12 Sep 2023 17:18:42 GMT">
						<outline text="id: theSubscription.ID," created="Tue, 12 Sep 2023 17:19:12 GMT"/>
						<outline text="idWpBlog: (theSubscription.blog_ID == &quot;0&quot;) ? undefined : theSubscription.blog_ID," created="Wed, 13 Sep 2023 15:58:03 GMT"/>
						<outline text="feedUrl: theSubscription.URL, " created="Tue, 12 Sep 2023 17:20:42 GMT"/>
						<outline text="whenSubscribed: convertDate (theSubscription.date_subscribed)" created="Wed, 13 Sep 2023 16:01:48 GMT"/>
						<outline text="});" created="Tue, 12 Sep 2023 17:19:05 GMT"/>
						</outline>
					<outline text="}" created="Tue, 12 Sep 2023 17:18:23 GMT"/>
					</outline>
				<outline text="function convertMediaObject (theObject) {" created="Tue, 12 Sep 2023 17:18:14 GMT">
					<outline text="return ({" created="Tue, 12 Sep 2023 17:18:42 GMT">
						<outline text="id: theObject.ID," created="Tue, 12 Sep 2023 17:19:12 GMT"/>
						<outline text="url: theObject.URL," created="Wed, 13 Sep 2023 16:44:54 GMT"/>
						<outline text="whenCreated: theObject.date," created="Wed, 13 Sep 2023 16:45:07 GMT"/>
						<outline text="idPost: theObject.post_ID," created="Wed, 13 Sep 2023 16:45:19 GMT"/>
						<outline text="idAuthor: theObject.author_ID," created="Wed, 13 Sep 2023 16:45:33 GMT"/>
						<outline text="type: theObject.mime_type," created="Wed, 13 Sep 2023 16:45:58 GMT"/>
						<outline text="title: theObject.title," created="Wed, 13 Sep 2023 16:46:07 GMT"/>
						<outline text="description: convertString (theObject.description)," created="Wed, 13 Sep 2023 16:46:23 GMT"/>
						<outline text="alt: convertString (theObject.alt)," created="Wed, 13 Sep 2023 16:46:40 GMT"/>
						<outline text="height: theObject.height," created="Wed, 13 Sep 2023 16:46:51 GMT"/>
						<outline text="width: theObject.width" created="Wed, 13 Sep 2023 16:46:57 GMT"/>
						<outline text="});" created="Tue, 12 Sep 2023 17:19:05 GMT"/>
						</outline>
					<outline text="}" created="Tue, 12 Sep 2023 17:18:23 GMT"/>
					</outline>
				<outline text="function getUserInfo (accessToken, callback) { //8/26/23 by DW" created="Sat, 26 Aug 2023 16:23:29 GMT">
					<outline text="Changes" isComment="true" created="Tue, 12 Sep 2023 15:44:12 GMT">
						<outline text="9/12/23; 1:16:00 PM by DW" created="Tue, 12 Sep 2023 15:44:14 GMT">
							<outline text="Return an abbreviated struct, not all the info that WordPress returns." created="Tue, 12 Sep 2023 15:44:15 GMT"/>
							</outline>
						</outline>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="wp.me ().get (function (err, theInfo) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="callback (undefined, convertUser (theInfo));" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 12 Sep 2023 17:16:26 GMT"/>
						</outline>
					<outline text="}" created="Sat, 26 Aug 2023 16:23:56 GMT"/>
					</outline>
				<outline text="function getUserSites (accessToken, callback) { //8/26/23 by DW" created="Sat, 26 Aug 2023 16:23:29 GMT">
					<outline text="Changes" isComment="true" created="Tue, 12 Sep 2023 15:44:12 GMT">
						<outline text="9/12/23; 1:42:40 PM by DW" created="Tue, 12 Sep 2023 15:44:14 GMT">
							<outline text="Return an abbreviated struct for a site, not all the info that WordPress returns." created="Tue, 12 Sep 2023 15:44:15 GMT"/>
							</outline>
						</outline>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="wp.me ().sites (function (err, theSiteList) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="var theList = new Array ();" created="Tue, 12 Sep 2023 15:40:55 GMT"/>
							<outline text="theSiteList.sites.forEach (function (item) {" created="Tue, 12 Sep 2023 17:56:13 GMT">
								<outline text="theList.push (convertSite (item));" created="Tue, 12 Sep 2023 15:40:49 GMT"/>
								<outline text="});" created="Tue, 12 Sep 2023 17:56:28 GMT"/>
								</outline>
							<outline text="callback (undefined, theList);" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 12 Sep 2023 17:43:03 GMT"/>
						</outline>
					<outline text="}" created="Sat, 26 Aug 2023 16:23:56 GMT"/>
					</outline>
				<outline text="function getSitePosts (accessToken, idSite, callback) { //9/12/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="Changes" isComment="true" created="Tue, 12 Sep 2023 15:44:12 GMT">
						<outline text="9/12/23; 11:44:15 AM by DW" created="Tue, 12 Sep 2023 15:44:14 GMT">
							<outline text="Return an abbreviated list of posts, not all the info that WordPress returns." created="Tue, 12 Sep 2023 15:44:15 GMT"/>
							</outline>
						</outline>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="site.postsList (function (err, thePosts) { //9/12/23 by DW" created="Tue, 12 Sep 2023 15:38:54 GMT">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="var theList = new Array ();" created="Tue, 12 Sep 2023 15:40:55 GMT"/>
							<outline text="thePosts.posts.forEach (function (item) {" created="Tue, 12 Sep 2023 15:40:05 GMT">
								<outline text="theList.push (convertPost (item));" created="Tue, 12 Sep 2023 15:40:49 GMT"/>
								<outline text="theList.push ({" isComment="true" created="Tue, 12 Sep 2023 15:40:49 GMT">
									<outline text="idPost: item.ID," created="Tue, 12 Sep 2023 15:41:45 GMT"/>
									<outline text="idSite: item.site_ID," created="Tue, 12 Sep 2023 15:41:50 GMT"/>
									<outline text="title: item.title," created="Tue, 12 Sep 2023 16:09:16 GMT"/>
									<outline text="guid: item.guid," created="Tue, 12 Sep 2023 16:09:16 GMT"/>
									<outline text="content: item.content," created="Tue, 12 Sep 2023 16:09:16 GMT"/>
									<outline text="type: item.type," created="Tue, 12 Sep 2023 16:09:25 GMT"/>
									<outline text="url: item.URL," created="Tue, 12 Sep 2023 16:10:00 GMT"/>
									<outline text="urlShort: item.short_URL," created="Tue, 12 Sep 2023 16:10:06 GMT"/>
									<outline text="whenCreated: new Date (item.date)," created="Tue, 12 Sep 2023 15:42:07 GMT"/>
									<outline text="author: {" created="Tue, 12 Sep 2023 16:05:44 GMT">
										<outline text="id: item.author.ID," created="Tue, 12 Sep 2023 16:05:53 GMT"/>
										<outline text="username: item.author.login," created="Tue, 12 Sep 2023 16:06:04 GMT"/>
										<outline text="name: item.author.name" created="Tue, 12 Sep 2023 16:06:38 GMT"/>
										<outline text="}" created="Tue, 12 Sep 2023 16:05:49 GMT"/>
										</outline>
									<outline text="});" created="Tue, 12 Sep 2023 15:41:20 GMT"/>
									</outline>
								<outline text="});" created="Tue, 12 Sep 2023 15:40:25 GMT"/>
								</outline>
							<outline text="callback (undefined, theList);" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 12 Sep 2023 15:39:10 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getSiteUsers (accessToken, idSite, callback) { //8/28/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="site.usersList (function (err, theUsers) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="var theList = new Array ();" created="Tue, 12 Sep 2023 15:40:55 GMT"/>
							<outline text="theUsers.users.forEach (function (item) {" created="Tue, 12 Sep 2023 17:56:13 GMT">
								<outline text="theList.push (convertUser (item));" created="Tue, 12 Sep 2023 15:40:49 GMT"/>
								<outline text="});" created="Tue, 12 Sep 2023 17:56:28 GMT"/>
								</outline>
							<outline text="callback (undefined, theList);" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 12 Sep 2023 16:34:55 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getSiteInfo (accessToken, idSite, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="site.get (function (err, theInfo) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="callback (undefined, convertSite (theInfo));" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Wed, 13 Sep 2023 16:38:36 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getSiteMedialist (accessToken, idSite, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="site.mediaList (function (err, theMedialist) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="var theList = new Array ();" created="Tue, 12 Sep 2023 15:40:55 GMT"/>
							<outline text="theMedialist.media.forEach (function (item) {" created="Tue, 12 Sep 2023 17:56:13 GMT">
								<outline text="theList.push (convertMediaObject (item));" created="Tue, 12 Sep 2023 15:40:49 GMT"/>
								<outline text="});" created="Tue, 12 Sep 2023 17:56:28 GMT"/>
								</outline>
							<outline text="callback (undefined, theList);" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 12 Sep 2023 16:34:55 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getPost (accessToken, idSite, idPost, callback) { //9/12/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="Changes" isComment="true" created="Tue, 12 Sep 2023 15:44:12 GMT">
						<outline text="9/12/23; 12:34:36 PM by DW" created="Tue, 12 Sep 2023 15:44:14 GMT">
							<outline text="Return an abbreviated post, not all the info that WordPress returns." created="Tue, 12 Sep 2023 15:44:15 GMT"/>
							</outline>
						</outline>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="const post = site.post (idPost);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="post.get (function (err, thePost) { //9/12/23 by DW">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="callback (undefined, convertPost (thePost));" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 12 Sep 2023 16:34:55 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getObjectFromJsontext (jsontext, callback) {" created="Tue, 29 Aug 2023 17:13:21 GMT">
					<outline text="var theObject;" created="Tue, 29 Aug 2023 16:55:10 GMT"/>
					<outline text="try {" created="Tue, 29 Aug 2023 16:55:11 GMT">
						<outline text="theObject = JSON.parse (jsontext);" created="Tue, 29 Aug 2023 16:55:31 GMT"/>
						<outline text="}" created="Tue, 29 Aug 2023 16:55:14 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Tue, 29 Aug 2023 16:55:15 GMT">
						<outline text="const message = &quot;Can't add or update the post because the JSON text is not valid.&quot;;" created="Tue, 29 Aug 2023 16:55:55 GMT"/>
						<outline text="callback ({message});" created="Tue, 29 Aug 2023 16:55:48 GMT"/>
						<outline text="return (undefined);" created="Tue, 29 Aug 2023 16:57:35 GMT"/>
						<outline text="}" created="Tue, 29 Aug 2023 16:55:18 GMT"/>
						</outline>
					<outline text="return (theObject);" created="Tue, 29 Aug 2023 17:14:56 GMT"/>
					<outline text="}" created="Tue, 29 Aug 2023 17:13:44 GMT"/>
					</outline>
				<outline text="function getCategoriesObject (jstruct) {" isComment="true" created="Wed, 13 Sep 2023 21:56:44 GMT">
					<outline text="if (jstruct.categories === undefined) {" created="Wed, 13 Sep 2023 21:56:56 GMT">
						<outline text="return (undefined);" created="Wed, 13 Sep 2023 21:57:05 GMT"/>
						<outline text="}" created="Wed, 13 Sep 2023 21:57:08 GMT"/>
						</outline>
					<outline text="else {" created="Wed, 13 Sep 2023 21:57:09 GMT">
						<outline text="var catstruct = new Object ();" created="Wed, 13 Sep 2023 21:58:03 GMT"/>
						<outline text="jstruct.categories.forEach (function (item, ix) {" created="Wed, 13 Sep 2023 21:57:19 GMT">
							<outline text="catstruct [item] = {" created="Wed, 13 Sep 2023 21:57:29 GMT">
								<outline text="ID: ix + 1" created="Wed, 13 Sep 2023 21:58:34 GMT"/>
								<outline text="};" created="Wed, 13 Sep 2023 21:58:30 GMT"/>
								</outline>
							<outline text="});" created="Wed, 13 Sep 2023 21:57:27 GMT"/>
							</outline>
						<outline text="return (catstruct);" created="Wed, 13 Sep 2023 21:58:11 GMT"/>
						<outline text="}" created="Wed, 13 Sep 2023 21:57:11 GMT"/>
						</outline>
					<outline text="}" created="Wed, 13 Sep 2023 21:56:48 GMT"/>
					</outline>
				<outline text="" created="Tue, 09 Apr 2024 17:11:25 GMT"/>
				<outline text="function getSpecialDataFile (token, fname, callback) {" created="Tue, 09 Apr 2024 17:11:25 GMT">
					<outline text="getUsername (token, function (err, username) {" created="Tue, 09 Apr 2024 17:12:13 GMT">
						<outline text="if (err) {" created="Tue, 09 Apr 2024 17:13:07 GMT">
							<outline text="callback (err);" created="Tue, 09 Apr 2024 17:13:10 GMT"/>
							<outline text="}" created="Tue, 09 Apr 2024 17:13:13 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 09 Apr 2024 17:13:13 GMT">
							<outline text="const flprivate = true;" created="Tue, 09 Apr 2024 17:13:40 GMT"/>
							<outline text="readUserFile (username, fname, flprivate, 0, 0, function (err, theFile) {" created="Tue, 09 Apr 2024 17:10:47 GMT">
								<outline text="if (err) {" created="Tue, 09 Apr 2024 17:14:13 GMT">
									<outline text="callback (err);" created="Tue, 09 Apr 2024 17:14:17 GMT"/>
									<outline text="}" created="Tue, 09 Apr 2024 17:14:20 GMT"/>
									</outline>
								<outline text="else {" created="Tue, 09 Apr 2024 17:14:21 GMT">
									<outline text="console.log (&quot;getSpecialDataFile: fname == &quot; + fname + &quot;, theFile == &quot; + utils.jsonStringify (theFile));" created="Tue, 09 Apr 2024 17:14:28 GMT"/>
									<outline text="var flerror = false;" created="Tue, 09 Apr 2024 17:51:41 GMT"/>
									<outline text="try {" created="Tue, 09 Apr 2024 17:51:41 GMT">
										<outline text="theData = JSON.parse (theFile.filecontents);" created="Tue, 09 Apr 2024 17:51:45 GMT"/>
										<outline text="}" created="Tue, 09 Apr 2024 17:52:04 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Tue, 09 Apr 2024 17:52:05 GMT">
										<outline text="callback (err);" created="Tue, 09 Apr 2024 17:52:10 GMT"/>
										<outline text="flerror = true;" created="Tue, 09 Apr 2024 17:52:47 GMT"/>
										<outline text="}" created="Tue, 09 Apr 2024 17:52:15 GMT"/>
										</outline>
									<outline text="if (!flerror) {" created="Tue, 09 Apr 2024 17:51:41 GMT">
										<outline text="console.log (&quot;getSpecialDataFile: fname == &quot; + fname + &quot;, theData == &quot; + utils.jsonStringify (theData));" created="Tue, 09 Apr 2024 17:14:28 GMT"/>
										<outline text="callback (undefined, theData);" created="Tue, 09 Apr 2024 17:15:07 GMT"/>
										<outline text="}" created="Tue, 09 Apr 2024 17:53:04 GMT"/>
										</outline>
									<outline text="}" created="Tue, 09 Apr 2024 17:14:23 GMT"/>
									</outline>
								<outline text="});" created="Tue, 09 Apr 2024 17:12:36 GMT"/>
								</outline>
							<outline text="}" created="Tue, 09 Apr 2024 17:13:15 GMT"/>
							</outline>
						<outline text="});" created="Tue, 09 Apr 2024 17:13:05 GMT"/>
						</outline>
					<outline text="}" created="Tue, 09 Apr 2024 17:56:00 GMT"/>
					</outline>
				<outline text="function processPostText (token, theText, callback) {" created="Tue, 09 Apr 2024 17:11:25 GMT">
					<outline text="getSpecialDataFile (token, &quot;glossary.json&quot;, function (err, theGlossary) {" created="Tue, 09 Apr 2024 17:57:42 GMT">
						<outline text="if (err) {" created="Tue, 09 Apr 2024 17:13:07 GMT">
							<outline text="callback (err);" created="Tue, 09 Apr 2024 17:13:10 GMT"/>
							<outline text="}" created="Tue, 09 Apr 2024 17:13:13 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 09 Apr 2024 17:13:13 GMT">
							<outline text="getSpecialDataFile (token, &quot;glossary.json&quot;, function (err, theFile) {" created="Tue, 09 Apr 2024 17:10:47 GMT">
								<outline text="if (err) {" created="Tue, 09 Apr 2024 17:14:13 GMT">
									<outline text="callback (err);" created="Tue, 09 Apr 2024 17:14:17 GMT"/>
									<outline text="}" created="Tue, 09 Apr 2024 17:14:20 GMT"/>
									</outline>
								<outline text="else {" created="Tue, 09 Apr 2024 17:14:21 GMT">
									<outline text="theText = utils.multipleReplaceAll (theText, theGlossary, false);"/>
									<outline text="callback (undefined, theText);" created="Tue, 09 Apr 2024 17:15:07 GMT"/>
									<outline text="}" created="Tue, 09 Apr 2024 17:14:23 GMT"/>
									</outline>
								<outline text="});" created="Tue, 09 Apr 2024 17:12:36 GMT"/>
								</outline>
							<outline text="}" created="Tue, 09 Apr 2024 17:13:15 GMT"/>
							</outline>
						<outline text="});" created="Tue, 09 Apr 2024 17:58:00 GMT"/>
						</outline>
					<outline text="}" created="Tue, 09 Apr 2024 17:12:11 GMT"/>
					</outline>
				<outline text="" created="Tue, 09 Apr 2024 17:11:25 GMT"/>
				<outline text="" created="Tue, 09 Apr 2024 17:11:25 GMT"/>
				<outline text="function addPost (accessToken, idSite, jsontext, callback) { //8/29/23 by DW" created="Tue, 29 Aug 2023 16:23:18 GMT">
					<outline text="Changes" isComment="true" created="Tue, 29 Aug 2023 16:44:10 GMT">
						<outline text="9/13/23; 11:13:55 AM by DW" created="Wed, 13 Sep 2023 15:13:53 GMT">
							<outline text="Convert the external format to the one required by the WordPress api. " created="Wed, 13 Sep 2023 15:13:56 GMT"/>
							<outline text="We hard-code a lot of options that maybe we'll want to allow the caller to specify later, but for now I don't know what the call those options, so we'll come back to this." created="Wed, 13 Sep 2023 15:20:12 GMT"/>
							</outline>
						<outline text="8/29/23; 12:44:12 PM by DW" created="Tue, 29 Aug 2023 16:44:11 GMT">
							<outline text="thePost should contain values like title, content, status, date, categories..." created="Tue, 29 Aug 2023 16:44:13 GMT"/>
							<outline text="I got a good list from ChatGPT but haven't yet found the place where they're defined by WordPress." created="Tue, 29 Aug 2023 16:44:50 GMT"/>
							</outline>
						</outline>
					<outline text="const jstruct = getObjectFromJsontext (jsontext, callback);" created="Tue, 29 Aug 2023 17:15:15 GMT"/>
					<outline text="if (jstruct === undefined) {" created="Tue, 29 Aug 2023 17:15:31 GMT">
						<outline text="return;" created="Tue, 29 Aug 2023 17:15:37 GMT"/>
						<outline text="}" created="Tue, 29 Aug 2023 17:15:36 GMT"/>
						</outline>
					<outline text="" created="Wed, 13 Sep 2023 15:14:46 GMT"/>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="" created="Wed, 13 Sep 2023 15:16:37 GMT"/>
					<outline text="const thePost = {" created="Wed, 13 Sep 2023 15:16:37 GMT">
						<outline text="title: jstruct.title," created="Wed, 13 Sep 2023 15:16:55 GMT"/>
						<outline text="content: jstruct.content," created="Wed, 13 Sep 2023 15:16:55 GMT"/>
						<outline text="categories: getCategoriesObject (jstruct), //9/14/23 by DW" isComment="true" created="Tue, 29 Aug 2023 16:50:37 GMT"/>
						<outline text="status: &quot;publish&quot;," created="Tue, 29 Aug 2023 16:49:42 GMT"/>
						<outline text="date: new Date ().toGMTString ()," created="Tue, 29 Aug 2023 16:49:59 GMT"/>
						<outline text="format: &quot;standard&quot;," created="Tue, 29 Aug 2023 16:50:27 GMT"/>
						<outline text="comment_status: &quot;open&quot;" created="Tue, 29 Aug 2023 16:51:09 GMT"/>
						<outline text="};" created="Wed, 13 Sep 2023 15:16:50 GMT"/>
						</outline>
					<outline text="site.addPost (thePost, function (err, theNewPost) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="callback (undefined, convertPost (theNewPost));" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Wed, 13 Sep 2023 15:26:59 GMT"/>
						</outline>
					<outline text="}" created="Tue, 29 Aug 2023 16:23:49 GMT"/>
					</outline>
				<outline text="function updatePost (accessToken, idSite, idPost, jsontext, callback) { //8/29/23 by DW" created="Tue, 29 Aug 2023 17:12:16 GMT">
					<outline text="const jstruct = getObjectFromJsontext (jsontext, callback);" created="Tue, 29 Aug 2023 17:15:15 GMT"/>
					<outline text="if (jstruct === undefined) {" created="Tue, 29 Aug 2023 17:15:31 GMT">
						<outline text="return;" created="Tue, 29 Aug 2023 17:15:37 GMT"/>
						<outline text="}" created="Tue, 29 Aug 2023 17:15:36 GMT"/>
						</outline>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="const post = site.post (idPost);" created="Tue, 29 Aug 2023 17:16:24 GMT"/>
					<outline text="" created="Wed, 13 Sep 2023 15:43:22 GMT"/>
					<outline text="processPostText (accessToken, jstruct.content, function (err, theProcessedContent) {" created="Tue, 09 Apr 2024 17:16:08 GMT">
						<outline text="if (!err) {" created="Tue, 09 Apr 2024 17:16:37 GMT">
							<outline text="}" created="Tue, 09 Apr 2024 17:16:40 GMT"/>
							</outline>
						<outline text="const thePost = {" created="Wed, 13 Sep 2023 15:43:22 GMT">
							<outline text="title: jstruct.title," created="Wed, 13 Sep 2023 15:43:35 GMT"/>
							<outline text="content: theProcessedContent," created="Wed, 13 Sep 2023 15:43:42 GMT"/>
							<outline text="categories: getCategoriesObject (jstruct), //9/14/23 by DW" isComment="true" created="Wed, 13 Sep 2023 21:54:34 GMT"/>
							<outline text="status: &quot;publish&quot;" created="Wed, 13 Sep 2023 15:43:47 GMT"/>
							<outline text="};" created="Wed, 13 Sep 2023 15:43:29 GMT"/>
							</outline>
						<outline text="post.update (thePost, function (err, theNewPost) {">
							<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
								<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
								<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
								<outline text="callback (undefined, convertPost (theNewPost));" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
								<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
								</outline>
							<outline text="});" created="Wed, 13 Sep 2023 15:33:06 GMT"/>
							</outline>
						<outline text="});" created="Tue, 09 Apr 2024 17:16:28 GMT"/>
						</outline>
					<outline text="}" created="Tue, 29 Aug 2023 17:12:51 GMT"/>
					</outline>
				<outline text="function deletePost (accessToken, idSite, idPost, callback) { //9/4/23 by DW" created="Tue, 29 Aug 2023 17:12:16 GMT">
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="const site = wp.site (idSite);" created="Mon, 28 Aug 2023 22:56:55 GMT"/>
					<outline text="const post = site.post (idPost);" created="Tue, 29 Aug 2023 17:16:24 GMT"/>
					<outline text="post.delete (function (err, theDeletedPost) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="callback (undefined, convertPost (theDeletedPost));" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Thu, 14 Sep 2023 12:47:05 GMT"/>
						</outline>
					<outline text="}" created="Tue, 29 Aug 2023 17:12:51 GMT"/>
					</outline>
				<outline text="function getSubscriptions (accessToken, callback) { //9/5/23 by DW" created="Tue, 05 Sep 2023 13:06:28 GMT">
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="wp.req.get (&quot;/read/following/mine&quot;, {}, function (err, theSubscriptionList) {">
						<outline text="if (err) {" created="Tue, 12 Sep 2023 15:39:29 GMT">
							<outline text="callback (err);" created="Tue, 12 Sep 2023 15:39:31 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:35 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Sep 2023 15:39:36 GMT">
							<outline text="var theList = new Array ();" created="Tue, 12 Sep 2023 15:40:55 GMT"/>
							<outline text="theSubscriptionList.subscriptions.forEach (function (item) {" created="Tue, 12 Sep 2023 17:56:13 GMT">
								<outline text="theList.push (convertSubscription (item));" created="Tue, 12 Sep 2023 15:40:49 GMT"/>
								<outline text="});" created="Tue, 12 Sep 2023 17:56:28 GMT"/>
								</outline>
							<outline text="callback (undefined, theList);" created="Tue, 12 Sep 2023 16:17:40 GMT"/>
							<outline text="}" created="Tue, 12 Sep 2023 15:39:38 GMT"/>
							</outline>
						<outline text="});" created="Wed, 13 Sep 2023 16:04:09 GMT"/>
						</outline>
					<outline text="}" created="Tue, 05 Sep 2023 13:06:56 GMT"/>
					</outline>
				<outline text="function getUsername (token, callback) { //3/24/24 by DW" created="Sun, 24 Mar 2024 16:01:25 GMT">
					<outline text="if (utils.secondsSince (whenLastUsernameCacheStart) &gt; config.ctUsernameCacheSecs) {" created="Mon, 25 Mar 2024 14:05:12 GMT">
						<outline text="usernameCache = new Object ();" created="Mon, 25 Mar 2024 14:05:42 GMT"/>
						<outline text="}" created="Mon, 25 Mar 2024 14:05:35 GMT"/>
						</outline>
					<outline text="if (usernameCache [token] !== undefined) {" created="Mon, 25 Mar 2024 14:06:39 GMT">
						<outline text="callback (undefined, usernameCache [token]);" created="Mon, 25 Mar 2024 14:06:59 GMT"/>
						<outline text="}" created="Mon, 25 Mar 2024 14:06:49 GMT"/>
						</outline>
					<outline text="else {" created="Mon, 25 Mar 2024 14:06:50 GMT">
						<outline text="getUserInfo (token, function (err, theUser) {" created="Sun, 24 Mar 2024 16:01:59 GMT">
							<outline text="if (err) {" created="Sun, 24 Mar 2024 16:02:57 GMT">
								<outline text="callback (err);" created="Sun, 24 Mar 2024 16:03:00 GMT"/>
								<outline text="}" created="Sun, 24 Mar 2024 16:03:03 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 24 Mar 2024 16:03:04 GMT">
								<outline text="const username = theUser.username;" created="Mon, 25 Mar 2024 14:07:45 GMT"/>
								<outline text="usernameCache [token] = username;" created="Mon, 25 Mar 2024 14:07:36 GMT"/>
								<outline text="callback (undefined, username);" created="Sun, 24 Mar 2024 16:03:08 GMT"/>
								<outline text="}" created="Sun, 24 Mar 2024 16:03:07 GMT"/>
								</outline>
							<outline text="});" created="Sun, 24 Mar 2024 16:02:18 GMT"/>
							</outline>
						<outline text="}" created="Mon, 25 Mar 2024 14:06:51 GMT"/>
						</outline>
					<outline text="}" created="Sun, 24 Mar 2024 16:01:36 GMT"/>
					</outline>
				<outline text="" created="Sun, 24 Mar 2024 16:01:26 GMT"/>
				<outline text="function startStorage (theDatabase, callback) { //3/24/24 by DW" created="Sun, 24 Mar 2024 15:02:59 GMT">
					<outline text="function getMysqlVersion (callback) {" created="Sat, 18 Nov 2023 16:56:16 GMT">
						<outline text="const sqltext = &quot;select version () as version;&quot;;" created="Sun, 05 Nov 2023 12:30:42 GMT"/>
						<outline text="davesql.runSqltext (sqltext, function (err, result) {">
							<outline text="var theVersion = undefined;" created="Sat, 18 Nov 2023 17:05:16 GMT"/>
							<outline text="if (!err) {">
								<outline text="if (result.length &gt; 0) {" created="Sun, 05 Nov 2023 12:32:52 GMT">
									<outline text="theVersion = result [0].version;" created="Sat, 18 Nov 2023 17:06:11 GMT"/>
									<outline text="console.log (&quot;getMysqlVersion: theVersion == &quot; + theVersion);" created="Sun, 24 Mar 2024 15:46:30 GMT"/>
									<outline text="}" created="Sun, 05 Nov 2023 12:33:03 GMT"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="callback (undefined, theVersion);" created="Sat, 18 Nov 2023 17:08:19 GMT"/>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Sat, 18 Nov 2023 16:56:24 GMT"/>
						</outline>
					<outline text="davesql.start (config.database, function () {">
						<outline text="getMysqlVersion (function (err, mysqlVersion) { //11/18/23 by DW, 2/1/24; 11:22:16 AM by DW" created="Sat, 18 Nov 2023 16:59:03 GMT">
							<outline text="config.flStorageEnabled = true;" created="Sun, 24 Mar 2024 15:47:41 GMT"/>
							<outline text="config.mysqlVersion = mysqlVersion;" created="Sat, 18 Nov 2023 17:00:00 GMT"/>
							<outline text="if (callback !== undefined) {" created="Sun, 24 Mar 2024 14:49:05 GMT">
								<outline text="callback (undefined, config);" created="Sun, 24 Mar 2024 14:49:21 GMT"/>
								<outline text="}" created="Sun, 24 Mar 2024 14:49:11 GMT"/>
								</outline>
							<outline text="});" created="Sat, 18 Nov 2023 16:59:27 GMT"/>
							</outline>
						<outline text="});" created="Wed, 14 Jul 2021 13:51:16 GMT"/>
						</outline>
					<outline text="}" created="Sun, 24 Mar 2024 15:03:12 GMT"/>
					</outline>
				<outline text="function readUserFile (username, relpath, flprivate, idsite, idpost, callback) {" created="Tue, 09 Apr 2024 17:09:40 GMT">
					<outline text="const privateval = (flprivate) ? 1 : 0;" created="Sun, 24 Mar 2024 17:36:51 GMT"/>
					<outline text="var sqltext = &quot;select * from wpstorage where username = &quot; + davesql.encode (username) + &quot; and relpath = &quot; + davesql.encode (relpath) + &quot; and flprivate = &quot; + davesql.encode (privateval)"/>
					<outline text="if (idsite !== undefined) { //4/5/24 by DW" created="Fri, 05 Apr 2024 16:40:58 GMT">
						<outline text="sqltext += &quot; and idsite = &quot; + davesql.encode (idsite);" created="Fri, 05 Apr 2024 16:41:32 GMT"/>
						<outline text="}" created="Fri, 05 Apr 2024 16:41:19 GMT"/>
						</outline>
					<outline text="if (idpost !== undefined) {" created="Fri, 05 Apr 2024 16:40:58 GMT">
						<outline text="sqltext += &quot; and idpost = &quot; + davesql.encode (idpost);" created="Fri, 05 Apr 2024 16:41:32 GMT"/>
						<outline text="}" created="Fri, 05 Apr 2024 16:41:19 GMT"/>
						</outline>
					<outline text="sqltext += &quot;;&quot;;" created="Fri, 05 Apr 2024 16:40:58 GMT"/>
					<outline text="" created="Fri, 05 Apr 2024 16:40:58 GMT"/>
					<outline text="console.log (&quot;readUserFile: username == &quot; + username + &quot;, relpath == &quot; + relpath); //9/21/23 by DW" isComment="true" created="Thu, 21 Sep 2023 19:49:29 GMT"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {" created="Tue, 12 Jul 2022 17:39:31 GMT">
							<outline text="callback (err);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
							<outline text="}" created="Tue, 12 Jul 2022 17:39:37 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 12 Jul 2022 17:39:38 GMT">
							<outline text="if (result.length == 0) {">
								<outline text="const message = &quot;Can't find the file &quot; + relpath + &quot; for the user &quot; + username + &quot;.&quot;;" created="Tue, 19 Sep 2023 20:59:50 GMT"/>
								<outline text="callback ({message});" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}"/>
								</outline>
							<outline text="else {" created="Fri, 22 Apr 2022 13:57:05 GMT">
								<outline text="const theFileRec = result [0];" created="Wed, 20 Sep 2023 20:48:01 GMT"/>
								<outline text="const theReturnedData = {" isComment="true" created="Wed, 20 Sep 2023 20:48:48 GMT">
									<outline text="filedata: theFileRec.filecontents.toString ()," created="Mon, 19 Apr 2021 13:40:09 GMT"/>
									<outline text="filestats: {" created="Mon, 19 Apr 2021 13:41:55 GMT">
										<outline text="relpath: theFileRec.relpath," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
										<outline text="type: theFileRec.type," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
										<outline text="username: theFileRec.username," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
										<outline text="flprivate: theFileRec.flprivate," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
										<outline text="ctSaves: theFileRec.ctSaves," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
										<outline text="whenCreated: theFileRec.whenCreated," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
										<outline text="whenUpdated: theFileRec.whenUpdated" created="Wed, 20 Sep 2023 20:49:48 GMT"/>
										<outline text="}" created="Wed, 20 Sep 2023 20:49:28 GMT"/>
										</outline>
									<outline text="};" created="Wed, 20 Sep 2023 20:48:56 GMT"/>
									</outline>
								<outline text="callback (undefined, theFileRec);" created="Sat, 07 May 2022 14:03:25 GMT"/>
								<outline text="}" created="Fri, 22 Apr 2022 13:57:08 GMT"/>
								</outline>
							<outline text="}" created="Tue, 12 Jul 2022 17:39:40 GMT"/>
							</outline>
						<outline text="});" created="Tue, 19 Sep 2023 20:53:25 GMT"/>
						</outline>
					<outline text="}" created="Tue, 09 Apr 2024 17:09:58 GMT"/>
					</outline>
				<outline text="function readWholeFile (token, relpath, flprivate, idsite, idpost, callback) { //3/24/24 by DW" created="Wed, 20 Sep 2023 14:48:33 GMT">
					<outline text="Changes" isComment="true" created="Fri, 29 Mar 2024 13:29:17 GMT">
						<outline text="4/5/24; 12:31:36 PM by DW" created="Fri, 05 Apr 2024 16:31:35 GMT">
							<outline text="New optional params, idsite and idpost." created="Fri, 05 Apr 2024 16:31:36 GMT"/>
							</outline>
						<outline text="3/29/24; 9:29:20 AM by DW" created="Fri, 29 Mar 2024 13:29:19 GMT">
							<outline text="Just returning the content of the record from the database, no funny structures." created="Fri, 29 Mar 2024 13:29:20 GMT"/>
							</outline>
						</outline>
					<outline text="getUsername (token, function (err, username) {" created="Sun, 24 Mar 2024 16:05:49 GMT">
						<outline text="if (err) {" created="Sun, 24 Mar 2024 16:05:54 GMT">
							<outline text="callback (err);" created="Sun, 24 Mar 2024 16:06:01 GMT"/>
							<outline text="}" created="Sun, 24 Mar 2024 16:06:05 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 24 Mar 2024 16:06:05 GMT">
							<outline text="readUserFile (username, relpath, flprivate, idsite, idpost, callback);" created="Tue, 09 Apr 2024 17:10:47 GMT"/>
							<outline text="const privateval = (flprivate) ? 1 : 0;" isComment="true" created="Sun, 24 Mar 2024 17:36:51 GMT"/>
							<outline text="var sqltext = &quot;select * from wpstorage where username = &quot; + davesql.encode (username) + &quot; and relpath = &quot; + davesql.encode (relpath) + &quot; and flprivate = &quot; + davesql.encode (privateval)" isComment="true"/>
							<outline text="" isComment="true" created="Fri, 05 Apr 2024 16:40:57 GMT"/>
							<outline text="if (idsite !== undefined) { //4/5/24 by DW" isComment="true" created="Fri, 05 Apr 2024 16:40:58 GMT">
								<outline text="sqltext += &quot; and idsite = &quot; + davesql.encode (idsite);" created="Fri, 05 Apr 2024 16:41:32 GMT"/>
								<outline text="}" created="Fri, 05 Apr 2024 16:41:19 GMT"/>
								</outline>
							<outline text="if (idpost !== undefined) {" isComment="true" created="Fri, 05 Apr 2024 16:40:58 GMT">
								<outline text="sqltext += &quot; and idpost = &quot; + davesql.encode (idpost);" created="Fri, 05 Apr 2024 16:41:32 GMT"/>
								<outline text="}" created="Fri, 05 Apr 2024 16:41:19 GMT"/>
								</outline>
							<outline text="sqltext += &quot;;&quot;;" isComment="true" created="Fri, 05 Apr 2024 16:40:58 GMT"/>
							<outline text="" isComment="true" created="Fri, 05 Apr 2024 16:40:58 GMT"/>
							<outline text="console.log (&quot;readWholeFile: username == &quot; + username + &quot;, relpath == &quot; + relpath); //9/21/23 by DW" isComment="true" created="Thu, 21 Sep 2023 19:49:29 GMT"/>
							<outline text="davesql.runSqltext (sqltext, function (err, result) {" isComment="true">
								<outline text="if (err) {" created="Tue, 12 Jul 2022 17:39:31 GMT">
									<outline text="callback (err);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
									<outline text="}" created="Tue, 12 Jul 2022 17:39:37 GMT"/>
									</outline>
								<outline text="else {" created="Tue, 12 Jul 2022 17:39:38 GMT">
									<outline text="if (result.length == 0) {">
										<outline text="const message = &quot;Can't find the file &quot; + relpath + &quot; for the user &quot; + username + &quot;.&quot;;" created="Tue, 19 Sep 2023 20:59:50 GMT"/>
										<outline text="callback ({message});" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Fri, 22 Apr 2022 13:57:05 GMT">
										<outline text="const theFileRec = result [0];" created="Wed, 20 Sep 2023 20:48:01 GMT"/>
										<outline text="const theReturnedData = {" isComment="true" created="Wed, 20 Sep 2023 20:48:48 GMT">
											<outline text="filedata: theFileRec.filecontents.toString ()," created="Mon, 19 Apr 2021 13:40:09 GMT"/>
											<outline text="filestats: {" created="Mon, 19 Apr 2021 13:41:55 GMT">
												<outline text="relpath: theFileRec.relpath," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
												<outline text="type: theFileRec.type," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
												<outline text="username: theFileRec.username," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
												<outline text="flprivate: theFileRec.flprivate," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
												<outline text="ctSaves: theFileRec.ctSaves," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
												<outline text="whenCreated: theFileRec.whenCreated," created="Wed, 20 Sep 2023 20:49:48 GMT"/>
												<outline text="whenUpdated: theFileRec.whenUpdated" created="Wed, 20 Sep 2023 20:49:48 GMT"/>
												<outline text="}" created="Wed, 20 Sep 2023 20:49:28 GMT"/>
												</outline>
											<outline text="};" created="Wed, 20 Sep 2023 20:48:56 GMT"/>
											</outline>
										<outline text="callback (undefined, theFileRec);" created="Sat, 07 May 2022 14:03:25 GMT"/>
										<outline text="}" created="Fri, 22 Apr 2022 13:57:08 GMT"/>
										</outline>
									<outline text="}" created="Tue, 12 Jul 2022 17:39:40 GMT"/>
									</outline>
								<outline text="});" created="Tue, 19 Sep 2023 20:53:25 GMT"/>
								</outline>
							<outline text="}" created="Sun, 24 Mar 2024 16:06:07 GMT"/>
							</outline>
						<outline text="});" created="Sun, 24 Mar 2024 16:05:51 GMT"/>
						</outline>
					<outline text="}" created="Wed, 20 Sep 2023 14:48:51 GMT"/>
					</outline>
				<outline text="function writeWholeFile (token, relpath, type, flprivate, filecontents, idsite, idpost, callback) { //3/24/24 by DW " created="Wed, 20 Sep 2023 14:48:33 GMT">
					<outline text="Changes" isComment="true" created="Fri, 05 Apr 2024 16:31:33 GMT">
						<outline text="4/5/24; 12:31:36 PM by DW" created="Fri, 05 Apr 2024 16:31:35 GMT">
							<outline text="New optional params, idsite and idpost." created="Fri, 05 Apr 2024 16:31:36 GMT"/>
							</outline>
						</outline>
					<outline text="const now = new Date ();" created="Tue, 19 Sep 2023 20:57:09 GMT"/>
					<outline text="getUsername (token, function (err, username) {" created="Sun, 24 Mar 2024 16:03:47 GMT">
						<outline text="if (err) {" created="Sun, 24 Mar 2024 16:04:32 GMT">
							<outline text="callback (err);" created="Sun, 24 Mar 2024 16:04:35 GMT"/>
							<outline text="}" created="Sun, 24 Mar 2024 16:04:39 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 24 Mar 2024 16:04:39 GMT">
							<outline text="const privateval = (flprivate) ? 1 : 0;" created="Sun, 24 Mar 2024 17:36:51 GMT"/>
							<outline text="var fileRec = {">
								<outline text="username, "/>
								<outline text="relpath, " created="Tue, 19 Sep 2023 20:52:43 GMT"/>
								<outline text="type," created="Wed, 20 Sep 2023 14:59:11 GMT"/>
								<outline text="flprivate: privateval," created="Wed, 20 Sep 2023 14:59:14 GMT"/>
								<outline text="filecontents," created="Tue, 19 Sep 2023 20:52:46 GMT"/>
								<outline text="whenCreated: now," created="Tue, 19 Sep 2023 20:56:56 GMT"/>
								<outline text="whenUpdated: now," created="Tue, 19 Sep 2023 20:57:01 GMT"/>
								<outline text="ctSaves: 1" created="Tue, 19 Sep 2023 21:35:11 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="" created="Fri, 05 Apr 2024 17:09:10 GMT"/>
							<outline text="if (idsite !== undefined) { //4/5/24 by DW" created="Fri, 05 Apr 2024 17:09:11 GMT">
								<outline text="fileRec.idsite = idsite;" created="Fri, 05 Apr 2024 17:09:29 GMT"/>
								<outline text="}" created="Fri, 05 Apr 2024 17:09:23 GMT"/>
								</outline>
							<outline text="if (idpost !== undefined) {" created="Fri, 05 Apr 2024 17:09:11 GMT">
								<outline text="fileRec.idpost = idpost;" created="Fri, 05 Apr 2024 17:09:29 GMT"/>
								<outline text="}" created="Fri, 05 Apr 2024 17:09:23 GMT"/>
								</outline>
							<outline text="" created="Fri, 05 Apr 2024 17:09:12 GMT"/>
							<outline text="console.log (&quot;writeWholeFile: username == &quot; + username + &quot;, relpath == &quot; + relpath); //9/21/23 by DW" isComment="true" created="Thu, 21 Sep 2023 19:49:29 GMT"/>
							<outline text="readWholeFile (token, relpath, flprivate, idsite, idpost, function (err, theOriginalFile) {" created="Tue, 19 Sep 2023 20:45:16 GMT">
								<outline text="if (!err) {" created="Tue, 19 Sep 2023 21:29:33 GMT">
									<outline text="fileRec.whenCreated = theOriginalFile.whenCreated;" created="Tue, 19 Sep 2023 21:29:56 GMT"/>
									<outline text="fileRec.ctSaves = theOriginalFile.ctSaves + 1;" created="Tue, 19 Sep 2023 21:29:56 GMT"/>
									<outline text="}" created="Tue, 19 Sep 2023 21:29:51 GMT"/>
									</outline>
								<outline text="const sqltext = &quot;replace into wpstorage &quot; + davesql.encodeValues (fileRec) + &quot;;&quot;;"/>
								<outline text="davesql.runSqltext (sqltext, function (err, result) {">
									<outline text="if (err) {" created="Tue, 12 Jul 2022 17:39:31 GMT">
										<outline text="callback (err);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
										<outline text="}" created="Tue, 12 Jul 2022 17:39:37 GMT"/>
										</outline>
									<outline text="else {" created="Tue, 12 Jul 2022 17:39:38 GMT">
										<outline text="callback (undefined, fileRec);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
										<outline text="}" created="Tue, 12 Jul 2022 17:39:40 GMT"/>
										</outline>
									<outline text="});" created="Tue, 19 Sep 2023 20:53:25 GMT"/>
									</outline>
								<outline text="});" created="Tue, 19 Sep 2023 20:45:52 GMT"/>
								</outline>
							<outline text="}" created="Sun, 24 Mar 2024 16:04:41 GMT"/>
							</outline>
						<outline text="});" created="Sun, 24 Mar 2024 16:03:56 GMT"/>
						</outline>
					<outline text="}" created="Wed, 20 Sep 2023 14:48:51 GMT"/>
					</outline>
				<outline text="function deleteFile (token, relpath, flprivate, callback) { //3/26/24 by DW" created="Tue, 26 Mar 2024 18:00:07 GMT">
					<outline text="const now = new Date ();" created="Tue, 19 Sep 2023 20:57:09 GMT"/>
					<outline text="getUsername (token, function (err, username) {" created="Sun, 24 Mar 2024 16:03:47 GMT">
						<outline text="if (err) {" created="Sun, 24 Mar 2024 16:04:32 GMT">
							<outline text="callback (err);" created="Sun, 24 Mar 2024 16:04:35 GMT"/>
							<outline text="}" created="Sun, 24 Mar 2024 16:04:39 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 24 Mar 2024 16:04:39 GMT">
							<outline text="const privateval = (flprivate) ? 1 : 0;" created="Sun, 24 Mar 2024 17:36:51 GMT"/>
							<outline text="const sqltext = &quot;delete from wpstorage where username = &quot; + davesql.encode (username) + &quot; and relpath = &quot; + davesql.encode (relpath) + &quot; and flprivate = &quot; + davesql.encode (privateval) + &quot;;&quot;;"/>
							<outline text="davesql.runSqltext (sqltext, function (err, result) {">
								<outline text="if (err) {" created="Tue, 12 Jul 2022 17:39:31 GMT">
									<outline text="callback (err);" created="Tue, 12 Jul 2022 17:39:34 GMT"/>
									<outline text="}" created="Tue, 12 Jul 2022 17:39:37 GMT"/>
									</outline>
								<outline text="else {" created="Tue, 12 Jul 2022 17:39:38 GMT">
									<outline text="if (result.length == 0) {">
										<outline text="const message = &quot;Can't find the file &quot; + relpath + &quot; for the user &quot; + username + &quot;.&quot;;" created="Tue, 19 Sep 2023 20:59:50 GMT"/>
										<outline text="callback ({message});" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Fri, 22 Apr 2022 13:57:05 GMT">
										<outline text="callback (undefined, true);" created="Sat, 07 May 2022 14:03:25 GMT"/>
										<outline text="}" created="Fri, 22 Apr 2022 13:57:08 GMT"/>
										</outline>
									<outline text="}" created="Tue, 12 Jul 2022 17:39:40 GMT"/>
									</outline>
								<outline text="});" created="Tue, 19 Sep 2023 20:53:25 GMT"/>
								</outline>
							<outline text="}" created="Sun, 24 Mar 2024 16:04:41 GMT"/>
							</outline>
						<outline text="});" created="Sun, 24 Mar 2024 16:03:56 GMT"/>
						</outline>
					<outline text="}" created="Tue, 26 Mar 2024 18:00:31 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 16:29:47 GMT"/>
				<outline text="function handleHttpRequest (theRequest, options = new Object ()) { //returns true if request was handled" created="Tue, 22 Aug 2023 21:49:47 GMT">
					<outline text="Changes" isComment="true" created="Tue, 31 Oct 2023 13:54:15 GMT">
						<outline text="10/31/23; 9:54:19 AM by DW" created="Tue, 31 Oct 2023 13:54:18 GMT">
							<outline text="New optional param, options. " created="Tue, 31 Oct 2023 13:54:19 GMT"/>
							</outline>
						</outline>
					<outline text="const params = theRequest.params;" created="Tue, 22 Aug 2023 16:23:04 GMT"/>
					<outline text="function returnRedirect (url, code) { //9/30/20 by DW">
						<outline text="var headers = {">
							<outline text="location: url"/>
							<outline text="};"/>
							</outline>
						<outline text="if (code === undefined) {">
							<outline text="code = 302;"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, headers);"/>
						<outline text="}"/>
						<outline text=""/>
						</outline>
					<outline text="function returnPlaintext (theText) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, theText);"/>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnNotFound () {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnError (err) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="theRequest.httpReturn (503, &quot;text/plain&quot;, err.message);"/>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnData (jstruct) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="theRequest.httpReturn (200, &quot;application/javascript&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function httpReturn (err, data) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="if (err) {" created="Thu, 27 Jan 2022 16:15:45 GMT">
							<outline text="console.log (&quot;httpReturn: err.message == &quot; + err.message);" created="Mon, 25 Mar 2024 14:53:58 GMT"/>
							<outline text="returnError (err);" created="Mon, 28 Feb 2022 14:42:42 GMT"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:48 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 27 Jan 2022 16:15:49 GMT">
							<outline text="console.log (&quot;httpReturn: data == &quot; + utils.jsonStringify (data));" isComment="true" created="Mon, 25 Mar 2024 14:53:58 GMT"/>
							<outline text="returnData (data);" created="Thu, 27 Jan 2022 16:15:54 GMT"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:51 GMT"/>
							</outline>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnHtml (err, htmltext) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="if (err) {" created="Thu, 27 Jan 2022 16:15:45 GMT">
							<outline text="returnError (err);" created="Mon, 28 Feb 2022 14:42:42 GMT"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:48 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 27 Jan 2022 16:15:49 GMT">
							<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext);"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:51 GMT"/>
							</outline>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnServerHomePage () { //3/25/24 by DW">
						<outline text="const pagetable = {">
							<outline text="urlServer: config.urlServer" created="Mon, 25 Mar 2024 16:08:52 GMT"/>
							<outline text="};"/>
							</outline>
						<outline text="function getTemplateText (callback) {" created="Mon, 25 Mar 2024 15:32:09 GMT">
							<outline text="request (config.urlServerHomePageSource, function (err, response, templatetext) {">
								<outline text="if (err) {" created="Sat, 16 Sep 2023 14:39:59 GMT">
									<outline text="callback (err);" created="Sat, 16 Sep 2023 14:40:01 GMT"/>
									<outline text="}" created="Sat, 16 Sep 2023 14:40:04 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 16 Sep 2023 14:40:05 GMT">
									<outline text="if ((response.statusCode &gt;= 200) &amp;&amp; (response.statusCode &lt;= 299)) {" created="Sat, 16 Sep 2023 14:41:09 GMT">
										<outline text="callback (undefined, templatetext.toString ());" created="Sat, 16 Sep 2023 14:42:26 GMT"/>
										<outline text="}" created="Sat, 16 Sep 2023 14:41:10 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 16 Sep 2023 14:41:11 GMT">
										<outline text="const message = &quot;HTTP error == &quot; + response.statusCode;" created="Fri, 15 Sep 2023 15:08:57 GMT"/>
										<outline text="callback ({message});" created="Fri, 15 Sep 2023 15:08:57 GMT"/>
										<outline text="}" created="Sat, 16 Sep 2023 14:41:15 GMT"/>
										</outline>
									<outline text="}" created="Sat, 16 Sep 2023 14:40:07 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Mon, 25 Mar 2024 15:32:38 GMT"/>
							</outline>
						<outline text="getTemplateText (function (err, templatetext) {" created="Sat, 16 Sep 2023 14:35:42 GMT">
							<outline text="if (err) {" created="Sat, 16 Sep 2023 14:53:18 GMT">
								<outline text="returnError (err);" created="Sat, 16 Sep 2023 14:53:20 GMT"/>
								<outline text="}" created="Sat, 16 Sep 2023 14:53:32 GMT"/>
								</outline>
							<outline text="else {" created="Sat, 16 Sep 2023 14:53:33 GMT">
								<outline text="const pagetext = utils.multipleReplaceAll (templatetext, pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
								<outline text="returnHtml (undefined, pagetext);"/>
								<outline text="}" created="Sat, 16 Sep 2023 14:53:35 GMT"/>
								</outline>
							<outline text="});" created="Sat, 16 Sep 2023 14:37:56 GMT"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function tokenRequired (callback) {" created="Sat, 26 Aug 2023 22:05:46 GMT">
						<outline text="const token = (params.token === undefined) ? undefined : base64UrlDecode (params.token);" created="Sat, 26 Aug 2023 22:04:27 GMT"/>
						<outline text="if (token === undefined) {" created="Sat, 26 Aug 2023 22:06:00 GMT">
							<outline text="const message = &quot;Can't get the info because the user must be logged in.&quot;;" created="Sat, 26 Aug 2023 22:06:28 GMT"/>
							<outline text="returnError ({message});" created="Sat, 26 Aug 2023 22:06:21 GMT"/>
							<outline text="}" created="Sat, 26 Aug 2023 22:06:06 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 26 Aug 2023 22:06:06 GMT">
							<outline text="callback (token);" created="Sat, 26 Aug 2023 22:06:09 GMT"/>
							<outline text="}" created="Sat, 26 Aug 2023 22:06:11 GMT"/>
							</outline>
						<outline text="}" created="Sat, 26 Aug 2023 22:05:55 GMT"/>
						</outline>
					<outline text="function unpackState (jsontext) { //9/4/23 by DW" created="Mon, 04 Sep 2023 20:22:27 GMT">
						<outline text="var jstruct;" created="Mon, 04 Sep 2023 20:22:50 GMT"/>
						<outline text="try {" created="Mon, 04 Sep 2023 20:22:50 GMT">
							<outline text="jstruct = JSON.parse (jsontext);" created="Mon, 04 Sep 2023 20:23:13 GMT"/>
							<outline text="return (jstruct);" created="Mon, 04 Sep 2023 20:24:52 GMT"/>
							<outline text="}" created="Mon, 04 Sep 2023 20:23:02 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Mon, 04 Sep 2023 20:23:03 GMT">
							<outline text="console.log (&quot;unpackState: Error parsing JSON text for state record. jsontext == &quot; + jsontext);" created="Mon, 04 Sep 2023 20:23:33 GMT"/>
							<outline text="return (undefined);" created="Mon, 04 Sep 2023 20:24:52 GMT"/>
							<outline text="}" created="Mon, 04 Sep 2023 20:23:08 GMT"/>
							</outline>
						<outline text="}" created="Mon, 04 Sep 2023 20:22:39 GMT"/>
						</outline>
					<outline text="function connectRedirect (urlAppHomePage=config.urlMyHomePage) {" created="Tue, 22 Aug 2023 15:29:45 GMT">
						<outline text="Changes" isComment="true" created="Mon, 04 Sep 2023 20:13:23 GMT">
							<outline text="11/14/23; 5:10:42 PM by DW" created="Tue, 14 Nov 2023 22:10:42 GMT">
								<outline text="On a multi-instance configuration we need to store pending confirmations in the database. " created="Tue, 14 Nov 2023 22:10:43 GMT"/>
								</outline>
							<outline text="9/4/23; 4:13:27 PM by DW" created="Mon, 04 Sep 2023 20:13:26 GMT">
								<outline text="New optional param, urlAppHomePage. " created="Mon, 04 Sep 2023 20:13:27 GMT"/>
								</outline>
							</outline>
						<outline text="function doRedirect (state) {" created="Tue, 14 Nov 2023 22:03:22 GMT">
							<outline text="const jsontext = JSON.stringify (state);" created="Tue, 14 Nov 2023 22:09:16 GMT"/>
							<outline text="const params = {">
								<outline text="client_id: config.clientId,"/>
								<outline text="redirect_uri: config.urlRedirect," created="Tue, 22 Aug 2023 15:35:04 GMT"/>
								<outline text="response_type: &quot;code&quot;," created="Tue, 22 Aug 2023 15:33:59 GMT"/>
								<outline text="scope: config.scope," created="Sat, 26 Aug 2023 22:23:40 GMT"/>
								<outline text="state: jsontext" created="Tue, 22 Aug 2023 15:34:15 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="const url = config.urlAuthorize + &quot;?&quot; + utils.buildParamList (params);"/>
							<outline text="returnRedirect (url);" created="Sun, 27 Aug 2023 14:32:01 GMT"/>
							<outline text="}" created="Tue, 14 Nov 2023 22:08:15 GMT"/>
							</outline>
						<outline text="if (options.createPendingConfirmation !== undefined) { //11/14/23 by DW" created="Tue, 14 Nov 2023 22:03:22 GMT">
							<outline text="options.createPendingConfirmation (function (err, obj) {" created="Tue, 14 Nov 2023 22:04:13 GMT">
								<outline text="if (err) {" created="Tue, 14 Nov 2023 22:04:30 GMT">
									<outline text="returnError (err);" created="Tue, 14 Nov 2023 22:04:33 GMT"/>
									<outline text="}" created="Tue, 14 Nov 2023 22:04:51 GMT"/>
									</outline>
								<outline text="else {" created="Tue, 14 Nov 2023 22:04:52 GMT">
									<outline text="const state = {" created="Mon, 04 Sep 2023 20:18:54 GMT">
										<outline text="url: urlAppHomePage," created="Mon, 04 Sep 2023 20:19:13 GMT"/>
										<outline text="num: obj.magicString" created="Mon, 04 Sep 2023 20:19:16 GMT"/>
										<outline text="};" created="Mon, 04 Sep 2023 20:18:59 GMT"/>
										</outline>
									<outline text="doRedirect (state);" created="Tue, 14 Nov 2023 22:07:37 GMT"/>
									<outline text="}" created="Tue, 14 Nov 2023 22:04:54 GMT"/>
									</outline>
								<outline text="});" created="Tue, 14 Nov 2023 22:04:25 GMT"/>
								</outline>
							<outline text="}" created="Tue, 14 Nov 2023 22:03:32 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 14 Nov 2023 22:03:33 GMT">
							<outline text="const state = {" created="Mon, 04 Sep 2023 20:18:54 GMT">
								<outline text="url: urlAppHomePage," created="Mon, 04 Sep 2023 20:19:13 GMT"/>
								<outline text="num: config.myRandomNumber" created="Mon, 04 Sep 2023 20:19:16 GMT"/>
								<outline text="};" created="Mon, 04 Sep 2023 20:18:59 GMT"/>
								</outline>
							<outline text="doRedirect (state);" created="Tue, 14 Nov 2023 22:07:37 GMT"/>
							<outline text="" isComment="true" created="Tue, 14 Nov 2023 22:11:34 GMT"/>
							<outline text="function getState () { //9/4/23 by DW" isComment="true" created="Mon, 04 Sep 2023 20:18:44 GMT">
								<outline text="const state = {" created="Mon, 04 Sep 2023 20:18:54 GMT">
									<outline text="url: urlAppHomePage," created="Mon, 04 Sep 2023 20:19:13 GMT"/>
									<outline text="num: config.myRandomNumber" created="Mon, 04 Sep 2023 20:19:16 GMT"/>
									<outline text="};" created="Mon, 04 Sep 2023 20:18:59 GMT"/>
									</outline>
								<outline text="const jsontext = JSON.stringify (state);" created="Mon, 04 Sep 2023 20:17:30 GMT"/>
								<outline text="return (jsontext);" created="Mon, 04 Sep 2023 20:20:12 GMT"/>
								<outline text="}" created="Mon, 04 Sep 2023 20:18:49 GMT"/>
								</outline>
							<outline text="var params = {" isComment="true">
								<outline text="client_id: config.clientId,"/>
								<outline text="redirect_uri: config.urlRedirect," created="Tue, 22 Aug 2023 15:35:04 GMT"/>
								<outline text="response_type: &quot;code&quot;," created="Tue, 22 Aug 2023 15:33:59 GMT"/>
								<outline text="scope: config.scope," created="Sat, 26 Aug 2023 22:23:40 GMT"/>
								<outline text="state: getState (), //9/4/23 by DW" created="Tue, 22 Aug 2023 15:34:15 GMT"/>
								<outline text="state: config.myRandomNumber" isComment="true" created="Tue, 22 Aug 2023 15:34:15 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="const url = config.urlAuthorize + &quot;?&quot; + utils.buildParamList (params);" isComment="true"/>
							<outline text="returnRedirect (url);" isComment="true" created="Sun, 27 Aug 2023 14:32:01 GMT"/>
							<outline text="}" created="Tue, 14 Nov 2023 22:03:35 GMT"/>
							</outline>
						<outline text="}" created="Tue, 22 Aug 2023 15:29:51 GMT"/>
						</outline>
					<outline text="" created="Sun, 24 Mar 2024 15:58:38 GMT"/>
					<outline text="switch (theRequest.lowermethod) {" created="Sun, 24 Mar 2024 15:58:39 GMT">
						<outline text="case &quot;post&quot;:" created="Sun, 24 Mar 2024 15:58:50 GMT">
							<outline text="switch (theRequest.lowerpath) {" created="Sun, 24 Mar 2024 15:59:11 GMT">
								<outline text="case &quot;/writewholefile&quot;: //3/24/24 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="writeWholeFile (token, params.relpath, params.type, params.flprivate, theRequest.postBody.toString (), params.idsite, params.idpost, httpReturn);"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="default:">
									<outline text="return (false);"/>
									</outline>
								<outline text="}" created="Sun, 24 Mar 2024 15:59:12 GMT"/>
								</outline>
							</outline>
						<outline text="case &quot;get&quot;:" created="Sun, 24 Mar 2024 15:58:57 GMT">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/&quot;:">
									<outline text="returnServerHomePage ();"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="case &quot;/now&quot;:">
									<outline text="returnPlaintext (new Date ().toUTCString ());"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="case &quot;/connect&quot;: " created="Tue, 22 Aug 2023 15:28:53 GMT">
									<outline text="connectRedirect (params.urlapphomepage);" created="Tue, 22 Aug 2023 15:29:31 GMT"/>
									<outline text="return (true);" created="Tue, 22 Aug 2023 15:29:08 GMT"/>
									</outline>
								<outline text="case &quot;/callbackfromwordpress&quot;:" created="Tue, 22 Aug 2023 16:19:15 GMT">
									<outline text="http://localhost:1408/callbackFromWordpress?code=UhRCafYhq8&amp;state=1204" isComment="true" created="Tue, 22 Aug 2023 16:23:29 GMT"/>
									<outline text="const state = unpackState (params.state);" created="Mon, 04 Sep 2023 20:21:55 GMT"/>
									<outline text="if (state === undefined) {" created="Mon, 04 Sep 2023 20:26:11 GMT">
										<outline text="const message = &quot;Can't connect the user because there was an error in the state returned from the server.&quot;;" created="Tue, 22 Aug 2023 21:47:36 GMT"/>
										<outline text="returnError ({message});" created="Tue, 22 Aug 2023 21:47:21 GMT"/>
										<outline text="}" created="Mon, 04 Sep 2023 20:26:23 GMT"/>
										</outline>
									<outline text="else {" created="Mon, 04 Sep 2023 20:26:24 GMT">
										<outline text="function finishWordpressLogin () {" created="Tue, 14 Nov 2023 22:12:26 GMT">
											<outline text="const urlAppHomePage = (state.url === undefined) ? config.urlMyHomePage : state.url; //9/4/23 by DW" created="Mon, 04 Sep 2023 20:28:17 GMT"/>
											<outline text="requestTokenFromWordpress (params.code, function (err, tokenData) {" created="Tue, 22 Aug 2023 16:29:59 GMT">
												<outline text="if (err) {" created="Tue, 22 Aug 2023 16:41:24 GMT">
													<outline text="console.log (&quot;requestTokenFromWordpress: err.message == &quot; + err.message);"/>
													<outline text="returnError (err);" created="Tue, 22 Aug 2023 16:43:45 GMT"/>
													<outline text="}" created="Tue, 22 Aug 2023 16:41:32 GMT"/>
													</outline>
												<outline text="else {" created="Tue, 22 Aug 2023 16:41:38 GMT">
													<outline text="if (options.useWordpressAccount !== undefined) { //10/31/23 by DW" created="Tue, 31 Oct 2023 13:54:55 GMT">
														<outline text="let token = tokenData.access_token;" created="Tue, 31 Oct 2023 14:12:20 GMT"/>
														<outline text="getUserInfo (token, function (err, theUserInfo) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
															<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
																<outline text="console.log (&quot;getUserInfo: err.message == &quot; + err.message);"/>
																<outline text="returnError (err);" created="Tue, 22 Aug 2023 16:43:45 GMT"/>
																<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
																</outline>
															<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
																<outline text="options.useWordpressAccount (token, theUserInfo); " created="Tue, 31 Oct 2023 13:55:45 GMT"/>
																<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
																</outline>
															<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
															</outline>
														<outline text="}" created="Tue, 31 Oct 2023 13:55:16 GMT"/>
														</outline>
													<outline text="else {" created="Tue, 31 Oct 2023 13:55:17 GMT">
														<outline text="console.log (&quot;tokenData == &quot; + utils.jsonStringify (tokenData));" isComment="true" created="Tue, 22 Aug 2023 16:42:24 GMT"/>
														<outline text="const urlRedirect = urlAppHomePage + &quot;?wordpressaccesstoken=&quot; + base64UrlEncode (tokenData.access_token); //9/11/23 by DW" created="Wed, 23 Aug 2023 12:12:04 GMT"/>
														<outline text="const urlRedirect = urlAppHomePage + &quot;?accesstoken=&quot; + base64UrlEncode (tokenData.access_token); " isComment="true" created="Wed, 23 Aug 2023 12:12:04 GMT"/>
														<outline text="const urlRedirect = config.urlMyHomePage + &quot;?accesstoken=&quot; + base64UrlEncode (tokenData.access_token);" isComment="true" created="Wed, 23 Aug 2023 12:12:04 GMT"/>
														<outline text="console.log (&quot;urlRedirect == &quot; + urlRedirect);" isComment="true" created="Wed, 23 Aug 2023 12:11:59 GMT"/>
														<outline text="returnRedirect (urlRedirect);" created="Tue, 22 Aug 2023 22:14:02 GMT"/>
														<outline text="}" created="Tue, 31 Oct 2023 13:55:19 GMT"/>
														</outline>
													<outline text="}" created="Tue, 22 Aug 2023 16:41:40 GMT"/>
													</outline>
												<outline text="});" created="Tue, 22 Aug 2023 16:30:09 GMT"/>
												</outline>
											<outline text="}" created="Tue, 14 Nov 2023 22:15:44 GMT"/>
											</outline>
										<outline text="if (options.checkPendingConfirmation !== undefined) {" created="Tue, 14 Nov 2023 22:12:26 GMT">
											<outline text="options.checkPendingConfirmation (state.num, function (err) {" created="Tue, 14 Nov 2023 22:13:54 GMT">
												<outline text="if (err) {" created="Tue, 14 Nov 2023 22:14:27 GMT">
													<outline text="returnError (err);" created="Tue, 14 Nov 2023 22:15:58 GMT"/>
													<outline text="}" created="Tue, 14 Nov 2023 22:16:03 GMT"/>
													</outline>
												<outline text="else {" created="Tue, 14 Nov 2023 22:16:06 GMT">
													<outline text="finishWordpressLogin ();" created="Tue, 14 Nov 2023 22:16:17 GMT"/>
													<outline text="}" created="Tue, 14 Nov 2023 22:16:07 GMT"/>
													</outline>
												<outline text="});" created="Tue, 14 Nov 2023 22:14:16 GMT"/>
												</outline>
											<outline text="}" created="Tue, 14 Nov 2023 22:13:01 GMT"/>
											</outline>
										<outline text="else {" created="Tue, 14 Nov 2023 22:13:02 GMT">
											<outline text="if (state.num != config.myRandomNumber) {" created="Tue, 22 Aug 2023 21:46:52 GMT">
												<outline text="const message = &quot;Can't connect the user because the secret code doesn't match the one we sent.&quot;;" created="Tue, 22 Aug 2023 21:47:36 GMT"/>
												<outline text="returnError ({message});" created="Tue, 22 Aug 2023 21:47:21 GMT"/>
												<outline text="}" created="Tue, 22 Aug 2023 21:47:06 GMT"/>
												</outline>
											<outline text="else {" created="Tue, 22 Aug 2023 21:47:07 GMT">
												<outline text="finishWordpressLogin ();" created="Tue, 14 Nov 2023 22:16:17 GMT"/>
												<outline text="const urlAppHomePage = (state.url === undefined) ? config.urlMyHomePage : state.url; //9/4/23 by DW" isComment="true" created="Mon, 04 Sep 2023 20:28:17 GMT"/>
												<outline text="requestTokenFromWordpress (params.code, function (err, tokenData) {" isComment="true" created="Tue, 22 Aug 2023 16:29:59 GMT">
													<outline text="if (err) {" created="Tue, 22 Aug 2023 16:41:24 GMT">
														<outline text="console.log (&quot;requestTokenFromWordpress: err.message == &quot; + err.message);"/>
														<outline text="returnError (err);" created="Tue, 22 Aug 2023 16:43:45 GMT"/>
														<outline text="}" created="Tue, 22 Aug 2023 16:41:32 GMT"/>
														</outline>
													<outline text="else {" created="Tue, 22 Aug 2023 16:41:38 GMT">
														<outline text="if (options.useWordpressAccount !== undefined) { //10/31/23 by DW" created="Tue, 31 Oct 2023 13:54:55 GMT">
															<outline text="let token = tokenData.access_token;" created="Tue, 31 Oct 2023 14:12:20 GMT"/>
															<outline text="getUserInfo (token, function (err, theUserInfo) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
																<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
																	<outline text="console.log (&quot;getUserInfo: err.message == &quot; + err.message);"/>
																	<outline text="returnError (err);" created="Tue, 22 Aug 2023 16:43:45 GMT"/>
																	<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
																	</outline>
																<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
																	<outline text="options.useWordpressAccount (token, theUserInfo); " created="Tue, 31 Oct 2023 13:55:45 GMT"/>
																	<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
																	</outline>
																<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
																</outline>
															<outline text="}" created="Tue, 31 Oct 2023 13:55:16 GMT"/>
															</outline>
														<outline text="else {" created="Tue, 31 Oct 2023 13:55:17 GMT">
															<outline text="console.log (&quot;tokenData == &quot; + utils.jsonStringify (tokenData));" isComment="true" created="Tue, 22 Aug 2023 16:42:24 GMT"/>
															<outline text="const urlRedirect = urlAppHomePage + &quot;?wordpressaccesstoken=&quot; + base64UrlEncode (tokenData.access_token); //9/11/23 by DW" created="Wed, 23 Aug 2023 12:12:04 GMT"/>
															<outline text="const urlRedirect = urlAppHomePage + &quot;?accesstoken=&quot; + base64UrlEncode (tokenData.access_token); " isComment="true" created="Wed, 23 Aug 2023 12:12:04 GMT"/>
															<outline text="const urlRedirect = config.urlMyHomePage + &quot;?accesstoken=&quot; + base64UrlEncode (tokenData.access_token);" isComment="true" created="Wed, 23 Aug 2023 12:12:04 GMT"/>
															<outline text="console.log (&quot;urlRedirect == &quot; + urlRedirect);" isComment="true" created="Wed, 23 Aug 2023 12:11:59 GMT"/>
															<outline text="returnRedirect (urlRedirect);" created="Tue, 22 Aug 2023 22:14:02 GMT"/>
															<outline text="}" created="Tue, 31 Oct 2023 13:55:19 GMT"/>
															</outline>
														<outline text="}" created="Tue, 22 Aug 2023 16:41:40 GMT"/>
														</outline>
													<outline text="});" created="Tue, 22 Aug 2023 16:30:09 GMT"/>
													</outline>
												<outline text="}" created="Tue, 22 Aug 2023 21:47:09 GMT"/>
												</outline>
											<outline text="}" created="Tue, 14 Nov 2023 22:13:04 GMT"/>
											</outline>
										<outline text="}" created="Mon, 04 Sep 2023 20:26:26 GMT"/>
										</outline>
									<outline text="return (true);" created="Tue, 22 Aug 2023 16:19:22 GMT"/>
									</outline>
								<outline text="case &quot;/wordpressgetuserinfo&quot;: //8/26/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getUserInfo (token, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressgetusersites&quot;: //8/26/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getUserSites (token, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressgetsiteposts&quot;: //8/28/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getSitePosts (token, params.idsite, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressgetsiteusers&quot;: //8/28/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getSiteUsers (token, params.idsite, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressgetsiteinfo&quot;: //8/29/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getSiteInfo (token, params.idsite, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressgetsitemedialist&quot;: //8/29/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getSiteMedialist (token, params.idsite, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressgetpost&quot;: //8/28/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getPost (token, params.idsite, params.idpost, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressaddpost&quot;: //8/29/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="addPost (token, params.idsite, params.jsontext, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressupdatepost&quot;: //8/29/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="updatePost (token, params.idsite, params.idpost, params.jsontext, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressdeletepost&quot;: //9/4/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="deletePost (token, params.idsite, params.idpost, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/wordpressgetsubscriptions&quot;: //9/5/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="getSubscriptions (token, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/readwholefile&quot;: //3/25/24 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="readWholeFile (token, params.relpath, params.flprivate, params.idsite, params.idpost, httpReturn);"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/deletefile&quot;: //3/26/24 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="deleteFile (token, params.relpath, params.flprivate, httpReturn);"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="case &quot;/writewholefile&quot;: //3/24/24 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
									<outline text="tokenRequired (function (token) {" created="Sat, 26 Aug 2023 22:05:23 GMT">
										<outline text="writeWholeFile (token, params.relpath, params.type, params.flprivate, params.filedata, params.idsite, params.idpost, httpReturn);"/>
										<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
										</outline>
									<outline text="return (true);" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
									</outline>
								<outline text="default:">
									<outline text="return (false);"/>
									</outline>
								<outline text="}"/>
								</outline>
							</outline>
						<outline text="case &quot;options&quot;:" isComment="true" created="Mon, 25 Mar 2024 15:05:19 GMT">
							<outline text="var headers = {">
								<outline text="&quot;Access-Control-Allow-Origin&quot;: &quot;*&quot;," created="Mon, 25 Mar 2024 15:17:38 GMT"/>
								<outline text="&quot;Access-Control-Allow-Methods&quot;: &quot;GET, POST, OPTIONS&quot;," created="Mon, 25 Mar 2024 15:08:08 GMT"/>
								<outline text="&quot;Access-Control-Allow-Headers&quot;: &quot;Content-Type, Authorization&quot;" created="Mon, 25 Mar 2024 15:08:43 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="theRequest.sysResponse.writeHead (204, headers);"/>
							<outline text="theRequest.sysResponse.end ();"/>
							<outline text="return (true);" created="Mon, 25 Mar 2024 15:05:25 GMT"/>
							</outline>
						<outline text="}" created="Sun, 24 Mar 2024 15:58:42 GMT"/>
						</outline>
					<outline text="}" created="Tue, 22 Aug 2023 21:49:55 GMT"/>
					</outline>
				<outline text="" created="Tue, 22 Aug 2023 15:29:46 GMT"/>
				<outline text="function start (options, callback) {" created="Tue, 05 Sep 2023 14:36:57 GMT">
					<outline text="if (options !== undefined) {" created="Tue, 05 Sep 2023 14:37:17 GMT">
						<outline text="console.log (&quot;wpIdentity.start: options == &quot; + utils.jsonStringify (options));" isComment="true" created="Mon, 25 Mar 2024 23:56:28 GMT"/>
						<outline text="for (var x in options) {" created="Tue, 05 Sep 2023 14:37:25 GMT">
							<outline text="if (options [x] !== undefined) {" created="Mon, 25 Mar 2024 23:57:11 GMT">
								<outline text="config [x] = options [x];" created="Tue, 05 Sep 2023 14:37:30 GMT"/>
								<outline text="}" created="Mon, 25 Mar 2024 23:57:16 GMT"/>
								</outline>
							<outline text="}" created="Tue, 05 Sep 2023 14:37:40 GMT"/>
							</outline>
						<outline text="console.log (&quot;wpIdentity.start: config == &quot; + utils.jsonStringify (config));" isComment="true" created="Mon, 25 Mar 2024 23:56:28 GMT"/>
						<outline text="if (options.database !== undefined) { //3/24/24 by DW" created="Sun, 24 Mar 2024 15:02:06 GMT">
							<outline text="startStorage (options.database, function () {" created="Sun, 24 Mar 2024 15:02:24 GMT">
								<outline text="});" created="Tue, 26 Mar 2024 00:23:47 GMT"/>
								</outline>
							<outline text="}" created="Sun, 24 Mar 2024 15:02:16 GMT"/>
							</outline>
						<outline text="if (callback !== undefined) {" created="Sun, 10 Sep 2023 20:40:36 GMT">
							<outline text="callback ();" created="Tue, 05 Sep 2023 14:37:42 GMT"/>
							<outline text="}" created="Sun, 10 Sep 2023 20:40:42 GMT"/>
							</outline>
						<outline text="}" created="Tue, 05 Sep 2023 14:37:25 GMT"/>
						</outline>
					<outline text="}" created="Tue, 05 Sep 2023 14:37:07 GMT"/>
					</outline>
				</outline>
			<outline text="client/api2.js" created="Thu, 11 Apr 2024 15:32:18 GMT">
				<outline text="function wordpress (userOptions, callback) {" created="Sat, 06 Apr 2024 19:55:04 GMT">
					<outline text="Changes" isComment="true" created="Sun, 07 Apr 2024 14:23:29 GMT">
						<outline text="4/7/24; 10:23:32 AM by DW" created="Sun, 07 Apr 2024 14:23:30 GMT">
							<outline text="Added a callback, not optional. " created="Sun, 07 Apr 2024 14:23:32 GMT"/>
							<outline text="If the user is signed in, we get the sitelist, the first time and save it in wordpressMemory." created="Sun, 07 Apr 2024 14:23:40 GMT"/>
							</outline>
						</outline>
					<outline text="var wordpressMemory = { //saved in localstorage" created="Wed, 23 Aug 2023 12:22:06 GMT">
						<outline text="accessToken: undefined," created="Wed, 23 Aug 2023 12:22:51 GMT"/>
						<outline text="sitelist: undefined" created="Thu, 04 Apr 2024 16:11:09 GMT"/>
						<outline text="};" created="Wed, 23 Aug 2023 12:22:14 GMT"/>
						</outline>
					<outline text="var options = {" created="Sat, 06 Apr 2024 19:56:52 GMT">
						<outline text="serverAddress: undefined," created="Sat, 06 Apr 2024 20:11:31 GMT"/>
						<outline text="flMarkdownProcess: true" created="Sat, 06 Apr 2024 20:34:23 GMT"/>
						<outline text="};" created="Sat, 06 Apr 2024 19:56:59 GMT"/>
						</outline>
					<outline text="if (userOptions !== undefined) { //allow caller to override defaults" created="Thu, 11 Jan 2024 14:36:52 GMT">
						<outline text="for (x in userOptions) {" created="Thu, 04 Jan 2024 14:46:54 GMT">
							<outline text="if (userOptions [x] !== undefined) {" created="Thu, 04 Jan 2024 14:47:00 GMT">
								<outline text="options [x] = userOptions [x];" created="Thu, 04 Jan 2024 14:47:12 GMT"/>
								<outline text="}" created="Thu, 04 Jan 2024 14:47:11 GMT"/>
								</outline>
							<outline text="}" created="Thu, 04 Jan 2024 14:46:59 GMT"/>
							</outline>
						<outline text="}" created="Thu, 11 Jan 2024 14:36:58 GMT"/>
						</outline>
					<outline text="" created="Sat, 06 Apr 2024 19:59:17 GMT"/>
					<outline text="function saveWordpressMemory () {" created="Mon, 28 Aug 2023 15:35:54 GMT">
						<outline text="console.log (&quot;saveWordpressMemory&quot;);" isComment="true" created="Thu, 31 Aug 2023 15:09:59 GMT"/>
						<outline text="localStorage.wordpressMemory = jsonStringify (wordpressMemory);" created="Wed, 23 Aug 2023 12:23:35 GMT"/>
						<outline text="}" created="Mon, 28 Aug 2023 15:35:58 GMT"/>
						</outline>
					<outline text="function handleAccesstoken () { //10/3/23 by DW" created="Tue, 03 Oct 2023 16:15:29 GMT">
						<outline text="function gotToken (accessToken) {" created="Tue, 03 Oct 2023 16:23:13 GMT">
							<outline text="wordpressMemory.accessToken = base64UrlDecode (accessToken);" created="Wed, 23 Aug 2023 12:20:54 GMT"/>
							<outline text="saveWordpressMemory ();" created="Mon, 28 Aug 2023 15:35:47 GMT"/>
							<outline text="var newHref = stringNthField (location.href, &quot;?&quot;, 1);" created="Wed, 23 Aug 2023 12:20:54 GMT"/>
							<outline text="newHref = stringNthField (newHref, &quot;#&quot;, 1);" created="Sun, 07 Apr 2024 13:49:43 GMT"/>
							<outline text="location.href = newHref;" created="Wed, 23 Aug 2023 12:25:44 GMT"/>
							<outline text="}" created="Tue, 03 Oct 2023 16:23:18 GMT"/>
							</outline>
						<outline text="const accessToken = getURLParameter (&quot;wordpressaccesstoken&quot;);"/>
						<outline text="if (accessToken != &quot;null&quot;) {" created="Wed, 23 Aug 2023 12:20:38 GMT">
							<outline text="gotToken (accessToken);" created="Tue, 03 Oct 2023 16:22:40 GMT"/>
							<outline text="}" created="Wed, 23 Aug 2023 12:20:49 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 03 Oct 2023 16:16:15 GMT">
							<outline text="if (location.hash.length &gt; 0) {" created="Tue, 03 Oct 2023 16:16:23 GMT">
								<outline text="let hash = location.hash;" created="Tue, 03 Oct 2023 16:17:19 GMT"/>
								<outline text="if (beginsWith (hash, &quot;#?&quot;)) {" created="Tue, 03 Oct 2023 16:16:47 GMT">
									<outline text="hash = stringDelete (hash, 1, 2);" created="Tue, 03 Oct 2023 16:17:02 GMT"/>
									<outline text="const allparams = getAllUrlParams (hash);" created="Tue, 03 Oct 2023 16:20:43 GMT"/>
									<outline text="if (allparams.wordpressaccesstoken !== undefined) {" created="Tue, 03 Oct 2023 16:21:56 GMT">
										<outline text="gotToken (allparams.wordpressaccesstoken);" created="Tue, 03 Oct 2023 16:22:40 GMT"/>
										<outline text="}" created="Tue, 03 Oct 2023 16:22:13 GMT"/>
										</outline>
									<outline text="}" created="Tue, 03 Oct 2023 16:17:14 GMT"/>
									</outline>
								<outline text="}" created="Tue, 03 Oct 2023 16:16:34 GMT"/>
								</outline>
							<outline text="}" created="Tue, 03 Oct 2023 16:16:17 GMT"/>
							</outline>
						<outline text="}" created="Tue, 03 Oct 2023 16:15:40 GMT"/>
						</outline>
					<outline text="" created="Sat, 06 Apr 2024 20:57:12 GMT"/>
					<outline text="handleAccesstoken ();" created="Sat, 06 Apr 2024 20:57:46 GMT"/>
					<outline text="" created="Sat, 06 Apr 2024 20:57:50 GMT"/>
					<outline text="if (localStorage.wordpressMemory !== undefined) {" created="Wed, 23 Aug 2023 12:26:00 GMT">
						<outline text="let jstruct = JSON.parse (localStorage.wordpressMemory);" created="Wed, 03 Jan 2024 18:11:47 GMT"/>
						<outline text="for (var x in jstruct) {" created="Wed, 03 Jan 2024 18:11:59 GMT">
							<outline text="wordpressMemory [x] = jstruct [x];" created="Wed, 03 Jan 2024 18:12:08 GMT"/>
							<outline text="}" created="Wed, 03 Jan 2024 18:12:04 GMT"/>
							</outline>
						<outline text="}" created="Wed, 23 Aug 2023 12:26:09 GMT"/>
						</outline>
					<outline text="" created="Sat, 06 Apr 2024 20:00:33 GMT"/>
					<outline text="function getServerAddress () {" created="Sat, 26 Aug 2023 16:34:33 GMT">
						<outline text="return (options.serverAddress); " created="Mon, 25 Mar 2024 19:12:13 GMT"/>
						<outline text="}" created="Sat, 26 Aug 2023 16:43:36 GMT"/>
						</outline>
					<outline text="function markdownProcess (mdtext) {">
						<outline text="const replacetable = {" created="Sun, 07 Apr 2024 16:17:33 GMT">
							<outline text="&quot;\\.&quot;: &quot;.&quot;," created="Sun, 07 Apr 2024 16:17:46 GMT"/>
							<outline text="&quot;\\_&quot;: &quot;_&quot;," created="Sun, 07 Apr 2024 16:17:46 GMT"/>
							<outline text="&quot;\\*&quot;: &quot;*&quot;" created="Sun, 07 Apr 2024 16:17:46 GMT"/>
							<outline text="};" created="Sun, 07 Apr 2024 16:17:42 GMT"/>
							</outline>
						<outline text="mdtext = multipleReplaceAll (mdtext, replacetable, false); " created="Wed, 06 Nov 2013 17:58:18 GMT" pgfnum="31057"/>
						<outline text="const md = new Markdown.Converter ();"/>
						<outline text="const htmltext = md.makeHtml (mdtext);" created="Sun, 07 Apr 2024 01:47:32 GMT"/>
						<outline text="return (htmltext);" created="Sun, 07 Apr 2024 01:47:42 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="function base64UrlEncode (data) {">
						<outline text="let base64 = btoa (unescape (encodeURIComponent (data)));"/>
						<outline text="return base64.replace ('+', '-').replace ('/', '_').replace (/=+$/, '');"/>
						<outline text="}"/>
						</outline>
					<outline text="function base64UrlDecode (theData) {" created="Sat, 26 Aug 2023 17:46:35 GMT">
						<outline text="theData = theData.replace ('-', '+').replace ('_', '/');"/>
						<outline text="while (theData.length % 4) {">
							<outline text="theData += '=';"/>
							<outline text="}"/>
							</outline>
						<outline text="return (decodeURIComponent (escape (atob (theData))));"/>
						<outline text="}" created="Sat, 26 Aug 2023 17:46:55 GMT"/>
						</outline>
					<outline text="function httpRequest (url, timeout, headers, callback) { ">
						<outline text="Changes" isComment="true">
							<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
								<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
								</outline>
							<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
								<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
								</outline>
							<outline text="7/20/20; 5:36:14 PM by DW">
								<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
									<outline text="function (err, data)"/>
									</outline>
								<outline text="No, I don't want to use promises."/>
								<outline text="for info about timeous see this page." isComment="true">
									<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
									</outline>
								</outline>
							</outline>
						<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
						<outline text="var jxhr = $.ajax ({ ">
							<outline text="url: url,"/>
							<outline text="dataType: &quot;text&quot;, "/>
							<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
							<outline text="timeout"/>
							<outline text="}) "/>
							</outline>
						<outline text=".success (function (data, status) { ">
							<outline text="callback (undefined, data);"/>
							<outline text="}) "/>
							</outline>
						<outline text=".error (function (status) { ">
							<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
							<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
								<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
								<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
								<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
								<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
								</outline>
							<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
								<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
								<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
								</outline>
							<outline text="var err = {">
								<outline text="code: status.status,"/>
								<outline text="message"/>
								<outline text="};"/>
								</outline>
							<outline text="callback (err);"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function userIsSignedIn () {" created="Wed, 23 Aug 2023 12:35:03 GMT">
						<outline text="return (wordpressMemory.accessToken !== undefined);" created="Wed, 23 Aug 2023 12:35:14 GMT"/>
						<outline text="}" created="Wed, 23 Aug 2023 12:35:12 GMT"/>
						</outline>
					<outline text="function getUserInfo (callback) { //8/26/23 by DW" created="Wed, 23 Mar 2022 14:28:05 GMT">
						<outline text="wpServerCall (&quot;wordpressgetuserinfo&quot;, undefined, true, callback);"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
						</outline>
					<outline text="function getUserSites (callback) { //8/26/23 by DW" created="Wed, 23 Mar 2022 14:28:05 GMT">
						<outline text="wpServerCall (&quot;wordpressgetusersites&quot;, undefined, true, callback);"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
						</outline>
					<outline text="function initUserInfo (callback) {" created="Mon, 08 Apr 2024 15:57:15 GMT">
						<outline text="if (wordpressMemory.userinfo === undefined) {" created="Sun, 07 Apr 2024 14:18:32 GMT">
							<outline text="getUserInfo (function (err, userinfo) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
								<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
									<outline text="callback (err);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
									<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
									<outline text="wordpressMemory.userinfo = userinfo;" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
									<outline text="saveWordpressMemory ();"/>
									<outline text="console.log (&quot;initUserInfo: wordpressMemory.userinfo == &quot; + jsonStringify (wordpressMemory.userinfo));" created="Mon, 08 Apr 2024 16:02:44 GMT"/>
									<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
									</outline>
								<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
								</outline>
							<outline text="}" created="Sun, 07 Apr 2024 14:20:32 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 08 Apr 2024 15:59:51 GMT">
							<outline text="callback ();" created="Mon, 08 Apr 2024 16:00:02 GMT"/>
							<outline text="}" created="Mon, 08 Apr 2024 16:00:04 GMT"/>
							</outline>
						<outline text="}" created="Mon, 08 Apr 2024 15:57:25 GMT"/>
						</outline>
					<outline text="function initSitelist (callback) {" created="Mon, 08 Apr 2024 15:57:15 GMT">
						<outline text="Changes" isComment="true" created="Fri, 12 Apr 2024 14:45:12 GMT">
							<outline text="4/12/24; 10:45:16 AM by DW" created="Fri, 12 Apr 2024 14:45:14 GMT">
								<outline text="No longer abbreviating sitelist, it's already being done on the server. I want more info to be available on the client side. " created="Fri, 12 Apr 2024 14:45:16 GMT"/>
								</outline>
							</outline>
						<outline text="if (wordpressMemory.sitelist === undefined) {" created="Sun, 07 Apr 2024 14:18:32 GMT">
							<outline text="function getAbbreviatedList (theSitelist) {" created="Sun, 14 Jan 2024 15:49:27 GMT">
								<outline text="const theList = new Array ();" created="Thu, 04 Jan 2024 16:12:01 GMT"/>
								<outline text="theSitelist.forEach (function (item) {" created="Thu, 04 Jan 2024 15:56:39 GMT">
									<outline text="theList.push ({" created="Thu, 04 Jan 2024 16:12:21 GMT">
										<outline text="idSite: item.idSite, " created="Thu, 04 Jan 2024 16:12:33 GMT"/>
										<outline text="urlSite: item.urlSite," created="Fri, 12 Apr 2024 14:37:06 GMT"/>
										<outline text="name: item.name," created="Thu, 04 Jan 2024 16:12:38 GMT"/>
										<outline text="description: item.description," created="Fri, 12 Apr 2024 14:36:59 GMT"/>
										<outline text="whenCreated: item.whenCreated" created="Fri, 12 Apr 2024 14:37:26 GMT"/>
										<outline text="});" created="Thu, 04 Jan 2024 16:12:25 GMT"/>
										</outline>
									<outline text="});" created="Thu, 04 Jan 2024 15:57:11 GMT"/>
									</outline>
								<outline text="return (theList);" created="Sun, 14 Jan 2024 15:50:53 GMT"/>
								<outline text="}" created="Sun, 14 Jan 2024 15:50:18 GMT"/>
								</outline>
							<outline text="getUserSites (function (err, theSitelist) {" created="Mon, 28 Aug 2023 15:34:09 GMT">
								<outline text="if (err) {" created="Mon, 28 Aug 2023 15:34:41 GMT">
									<outline text="callback (err);" created="Mon, 28 Aug 2023 15:34:43 GMT"/>
									<outline text="}" created="Mon, 28 Aug 2023 15:34:46 GMT"/>
									</outline>
								<outline text="else {" created="Mon, 28 Aug 2023 15:34:47 GMT">
									<outline text="theSitelist.forEach (function (item) { //4/12/24 by DW" created="Fri, 12 Apr 2024 14:56:32 GMT">
										<outline text="try {" created="Fri, 12 Apr 2024 14:57:06 GMT">
											<outline text="item.whenCreated = new Date (item.whenCreated);" created="Fri, 12 Apr 2024 14:56:50 GMT"/>
											<outline text="}" created="Fri, 12 Apr 2024 14:57:07 GMT"/>
											</outline>
										<outline text="catch (err) {" created="Fri, 12 Apr 2024 14:57:11 GMT">
											<outline text="}" created="Fri, 12 Apr 2024 14:57:14 GMT"/>
											</outline>
										<outline text="});" created="Fri, 12 Apr 2024 14:57:00 GMT"/>
										</outline>
									<outline text="wordpressMemory.sitelist = theSitelist;" created="Mon, 28 Aug 2023 15:35:13 GMT"/>
									<outline text="wordpressMemory.sitelist = getAbbreviatedList (theSitelist);" isComment="true" created="Mon, 28 Aug 2023 15:35:13 GMT"/>
									<outline text="saveWordpressMemory ();"/>
									<outline text="console.log (&quot;initSitelist: wordpressMemory.sitelist == &quot; + jsonStringify (wordpressMemory.sitelist));" created="Mon, 08 Apr 2024 16:02:44 GMT"/>
									<outline text="callback (undefined);" created="Thu, 04 Jan 2024 16:12:58 GMT"/>
									<outline text="}" created="Mon, 28 Aug 2023 15:34:49 GMT"/>
									</outline>
								<outline text="});" created="Mon, 28 Aug 2023 15:34:36 GMT"/>
								</outline>
							<outline text="}" created="Sun, 07 Apr 2024 14:20:32 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 08 Apr 2024 15:57:37 GMT">
							<outline text="callback ();" created="Mon, 08 Apr 2024 15:57:39 GMT"/>
							<outline text="}" created="Mon, 08 Apr 2024 15:57:42 GMT"/>
							</outline>
						<outline text="}" created="Mon, 08 Apr 2024 15:57:25 GMT"/>
						</outline>
					<outline text="" created="Thu, 28 Mar 2024 15:27:03 GMT"/>
					<outline text="function wpServerPost (path, params, flAuthenticated, filedata, callback, urlServer=getServerAddress ()) { //3/24/24 by DW">
						<outline text="Changes" isComment="true">
							<outline text="11/1/23; 9:55:40 AM by DW" created="Wed, 01 Nov 2023 13:55:40 GMT">
								<outline text="Don't add oauth params (for twitter) if they are not defined. " created="Wed, 01 Nov 2023 13:55:40 GMT"/>
								</outline>
							<outline text="4/22/23; 1:24:18 PM by DW" created="Sat, 22 Apr 2023 17:24:17 GMT">
								<outline text="Change twBuildParamList call to buildParamList." created="Sat, 22 Apr 2023 17:24:19 GMT"/>
								</outline>
							<outline text="8/2/21; 2:19:56 PM by DW" created="Mon, 02 Aug 2021 18:19:55 GMT">
								<outline text="If filedata is not a PlainObject or a string, convert it to a string." created="Mon, 02 Aug 2021 18:19:58 GMT"/>
								</outline>
							<outline text="2/25/21; 1:01:58 PM by DW">
								<outline text="A special form of servercall for posts."/>
								</outline>
							</outline>
						<outline text="console.log (&quot;wpServerPost&quot;);" isComment="true" created="Sun, 24 Mar 2024 16:23:26 GMT"/>
						<outline text="var whenstart = new Date ();"/>
						<outline text="if (!$.isPlainObject (filedata) &amp;&amp; (typeof (filedata) != &quot;string&quot;)) { //8/2/21 by DW" created="Mon, 02 Aug 2021 18:36:54 GMT">
							<outline text="filedata = filedata.toString ();" created="Mon, 02 Aug 2021 18:38:49 GMT"/>
							<outline text="}" created="Mon, 02 Aug 2021 18:38:43 GMT"/>
							</outline>
						<outline text="if (params === undefined) {">
							<outline text="params = new Object ();"/>
							<outline text="}"/>
							</outline>
						<outline text="if (flAuthenticated) {">
							<outline text="params.token = base64UrlEncode (wordpressMemory.accessToken);" created="Sat, 26 Aug 2023 18:00:08 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
						<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
							<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
								<outline text="console.log (&quot;wpServerPost: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
								</outline>
							<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
								<outline text="var err = {">
									<outline text="code: status.status,"/>
									<outline text="message: JSON.parse (status.responseText).message"/>
									<outline text="};"/>
									</outline>
								<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
									<outline text="callback (err);"/>
									<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
									</outline>
								<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
								</outline>
							<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
							</outline>
						<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {" isComment="true">
							<outline text="if (err) {">
								<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); "/>
								<outline text="callback (undefined, JSON.parse (jsontext));"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function wpServerCall (path, params, flAuthenticated, callback, urlServer=getServerAddress ()) {">
						<outline text="Changes" isComment="true">
							<outline text="4/22/23; 1:24:18 PM by DW" created="Sat, 22 Apr 2023 17:24:17 GMT">
								<outline text="Change twBuildParamList call to buildParamList." created="Sat, 22 Apr 2023 17:24:19 GMT"/>
								</outline>
							<outline text="12/23/22; 10:30:22 PM by DW" created="Sat, 24 Dec 2022 03:30:22 GMT">
								<outline text="Support email params. Don't send oauth token if it's not defined." created="Sat, 24 Dec 2022 03:30:22 GMT"/>
								</outline>
							<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
								<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
								</outline>
							<outline text="1/11/21; 12:51:47 PM by DW">
								<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
								</outline>
							</outline>
						<outline text="console.log (&quot;wpServerCall&quot;);" isComment="true" created="Sun, 24 Mar 2024 16:23:26 GMT"/>
						<outline text="const whenstart = new Date ();"/>
						<outline text="var headers = undefined;" created="Sat, 26 Aug 2023 17:28:22 GMT"/>
						<outline text="if (params === undefined) {">
							<outline text="params = new Object ();"/>
							<outline text="}"/>
							</outline>
						<outline text="if (flAuthenticated) {">
							<outline text="params.token = base64UrlEncode (wordpressMemory.accessToken);" created="Sat, 26 Aug 2023 18:00:08 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
						<outline text="console.log (&quot;wpServerCall: url == &quot; + url);" isComment="true" created="Mon, 30 Jan 2023 17:35:43 GMT"/>
						<outline text="httpRequest (url, undefined, headers, function (err, jsontext) {">
							<outline text="if (err) {">
								<outline text="console.log (&quot;wpServerCall: url == &quot; + url + &quot;, err.message == &quot; + err.message);" isComment="true"/>
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="console.log (&quot;wpServerCall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
								<outline text="callback (undefined, JSON.parse (jsontext));"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function readUserDataFile (relpath, flPrivate, callback, options) { //3/25/24 by DW" created="Mon, 25 Mar 2024 14:11:16 GMT">
						<outline text="Changes" isComment="true" created="Fri, 05 Apr 2024 16:54:27 GMT">
							<outline text="4/5/24; 12:54:30 PM by DW" created="Fri, 05 Apr 2024 16:54:29 GMT">
								<outline text="New optional param, options, comes after the callback. Sorry. It's a late addition." created="Fri, 05 Apr 2024 16:19:47 GMT"/>
								</outline>
							</outline>
						<outline text="console.log (&quot;readUserDataFile&quot;);" created="Sun, 24 Mar 2024 16:19:41 GMT"/>
						<outline text="const whenstart = new Date ();" created="Sun, 20 Aug 2023 18:32:23 GMT"/>
						<outline text="var params = {" created="Fri, 23 Dec 2022 20:01:02 GMT">
							<outline text="relpath" created="Fri, 23 Dec 2022 20:12:44 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:12:46 GMT"/>
							</outline>
						<outline text="if (flPrivate) {" created="Fri, 23 Dec 2022 20:03:13 GMT">
							<outline text="params.flprivate = true;" created="Fri, 23 Dec 2022 20:03:33 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:03:16 GMT"/>
							</outline>
						<outline text="if (options !== undefined) { //4/5/24 by DW" created="Fri, 05 Apr 2024 16:20:24 GMT">
							<outline text="for (var x in options) {" created="Fri, 05 Apr 2024 16:21:05 GMT">
								<outline text="if (options [x] !== undefined) {" created="Fri, 05 Apr 2024 16:21:29 GMT">
									<outline text="params [x] = options [x];" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
									<outline text="}" created="Fri, 05 Apr 2024 16:21:35 GMT"/>
									</outline>
								<outline text="}" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
								</outline>
							<outline text="}" created="Fri, 05 Apr 2024 16:20:31 GMT"/>
							</outline>
						<outline text="wpServerCall (&quot;readwholefile&quot;, params, true, callback);"/>
						<outline text="}" created="Mon, 25 Mar 2024 14:11:29 GMT"/>
						</outline>
					<outline text="function writeUserDataFile (relpath, filedata, type, flPrivate, callback, options) { //3/24/24 by DW" created="Sun, 24 Mar 2024 16:09:12 GMT">
						<outline text="Changes" isComment="true" created="Thu, 28 Mar 2024 15:36:55 GMT">
							<outline text="4/5/24; 12:19:47 PM by DW" created="Fri, 05 Apr 2024 16:19:47 GMT">
								<outline text="New optional param, options, comes after the callback. Sorry. It's a late addition." created="Fri, 05 Apr 2024 16:19:47 GMT"/>
								</outline>
							<outline text="3/28/24; 11:36:57 AM by DW" created="Thu, 28 Mar 2024 15:36:56 GMT">
								<outline text="I couldn't get anything back from the server via POST, so I'm trying GET. " created="Thu, 28 Mar 2024 15:36:58 GMT"/>
								<outline text="It worked. I've been over it on both ends, can't see any difference between it and daveappserver which is what we use in feedland and drummer. " created="Thu, 28 Mar 2024 15:42:21 GMT"/>
								<outline text="So I'm just going to continue with calling GET, and trust that the next person to pass this way will figure out what I did wrong. ;-)" created="Thu, 28 Mar 2024 15:42:46 GMT"/>
								</outline>
							</outline>
						<outline text="console.log (&quot;writeUserDataFile&quot;);" isComment="true" created="Sun, 24 Mar 2024 16:19:41 GMT"/>
						<outline text="const whenstart = new Date ();" created="Sun, 20 Aug 2023 18:32:23 GMT"/>
						<outline text="var params = {" created="Fri, 23 Dec 2022 20:01:02 GMT">
							<outline text="relpath, type, filedata" created="Fri, 23 Dec 2022 20:12:44 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:12:46 GMT"/>
							</outline>
						<outline text="if (flPrivate) {" created="Fri, 23 Dec 2022 20:03:13 GMT">
							<outline text="params.flprivate = true;" created="Fri, 23 Dec 2022 20:03:33 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:03:16 GMT"/>
							</outline>
						<outline text="" created="Fri, 05 Apr 2024 16:20:24 GMT"/>
						<outline text="if (options !== undefined) { //4/5/24 by DW" created="Fri, 05 Apr 2024 16:20:24 GMT">
							<outline text="for (var x in options) {" created="Fri, 05 Apr 2024 16:21:05 GMT">
								<outline text="if (options [x] !== undefined) {" created="Fri, 05 Apr 2024 16:21:29 GMT">
									<outline text="params [x] = options [x];" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
									<outline text="}" created="Fri, 05 Apr 2024 16:21:35 GMT"/>
									</outline>
								<outline text="}" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
								</outline>
							<outline text="}" created="Fri, 05 Apr 2024 16:20:31 GMT"/>
							</outline>
						<outline text="" created="Fri, 05 Apr 2024 16:20:24 GMT"/>
						<outline text="wpServerCall (&quot;writewholefile&quot;, params, true, callback);"/>
						<outline text="wpServerPost (&quot;writewholefile&quot;, params, true, filedata, function (err, data) {" isComment="true">
							<outline text="if (!err) {" created="Sun, 20 Aug 2023 18:32:07 GMT">
								<outline text="console.log (&quot;writeWholeFile: relpath == &quot; + relpath + &quot;, &quot; + secondsSince (whenstart) + &quot; secs.&quot;); //8/20/23 by DW" created="Sun, 20 Aug 2023 18:28:31 GMT"/>
								<outline text="}" created="Sun, 20 Aug 2023 18:32:14 GMT"/>
								</outline>
							<outline text="if (callback !== undefined) {" created="Sun, 20 Aug 2023 18:31:35 GMT">
								<outline text="callback (err, data);" created="Sun, 20 Aug 2023 18:31:52 GMT"/>
								<outline text="}" created="Sun, 20 Aug 2023 18:31:47 GMT"/>
								</outline>
							<outline text="});" created="Sun, 20 Aug 2023 18:31:27 GMT"/>
							</outline>
						<outline text="}" created="Sun, 24 Mar 2024 16:09:20 GMT"/>
						</outline>
					<outline text="" created="Sat, 06 Apr 2024 20:01:00 GMT"/>
					<outline text="this.getUserInfo = function (callback) {" created="Wed, 23 Mar 2022 14:28:05 GMT">
						<outline text="callback (undefined, wordpressMemory.userinfo);" created="Mon, 08 Apr 2024 16:16:19 GMT"/>
						<outline text="}" created="Mon, 08 Apr 2024 16:16:13 GMT"/>
						</outline>
					<outline text="this.getUserSites = getUserSites;" created="Wed, 23 Mar 2022 14:28:05 GMT"/>
					<outline text="this.getSitePosts = function (idsite, callback) { //8/28/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="wpServerCall (&quot;wordpressgetsiteposts&quot;, {idsite}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.getSiteUsers = function (idsite, callback) { //8/28/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="wpServerCall (&quot;wordpressgetsiteusers&quot;, {idsite}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.getSiteInfo = function (idsite, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="wpServerCall (&quot;wordpressgetsiteinfo&quot;, {idsite}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.getSiteMedialist = function (idsite, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="wpServerCall (&quot;wordpressgetsitemedialist&quot;, {idsite}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.getPost = function (idsite, idpost, callback) { //8/28/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="wpServerCall (&quot;wordpressgetpost&quot;, {idsite, idpost}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.addPost = function (idsite, thepost, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="if (options.flMarkdownProcess) {" created="Sat, 06 Apr 2024 20:34:38 GMT">
							<outline text="thepost.content = markdownProcess (thepost.content);" created="Sat, 06 Apr 2024 20:35:00 GMT"/>
							<outline text="}" created="Sat, 06 Apr 2024 20:34:46 GMT"/>
							</outline>
						<outline text="const jsontext = JSON.stringify (thepost);" created="Tue, 29 Aug 2023 16:54:12 GMT"/>
						<outline text="wpServerCall (&quot;wordpressaddpost&quot;, {idsite, jsontext}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.updatePost = function (idsite, idpost, thepost, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="if (options.flMarkdownProcess) {" created="Sat, 06 Apr 2024 20:34:38 GMT">
							<outline text="thepost.content = markdownProcess (thepost.content);" created="Sat, 06 Apr 2024 20:35:00 GMT"/>
							<outline text="}" created="Sat, 06 Apr 2024 20:34:46 GMT"/>
							</outline>
						<outline text="const jsontext = JSON.stringify (thepost);" created="Tue, 29 Aug 2023 16:54:12 GMT"/>
						<outline text="wpServerCall (&quot;wordpressupdatepost&quot;, {idsite, idpost, jsontext}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.deletePost = function (idsite, idpost, callback) { //9/4/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="wpServerCall (&quot;wordpressdeletepost&quot;, {idsite, idpost}, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="this.getSubscriptions = function (callback) { //9/5/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
						<outline text="wpServerCall (&quot;wordpressgetsubscriptions&quot;, undefined, true, callback);"/>
						<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
						</outline>
					<outline text="" created="Sun, 24 Mar 2024 16:09:11 GMT"/>
					<outline text="this.readUserDataFile = readUserDataFile;" created="Mon, 25 Mar 2024 14:11:16 GMT"/>
					<outline text="this.writeUserDataFile = writeUserDataFile;" created="Sun, 24 Mar 2024 16:09:12 GMT"/>
					<outline text="" created="Wed, 10 Apr 2024 14:45:26 GMT"/>
					<outline text="this.readUserJsonFile = function (relpath, flPrivate, callback, options) { //4/10/24 by DW" created="Wed, 10 Apr 2024 14:45:27 GMT">
						<outline text="readUserDataFile (relpath, flPrivate, function (err, theFileData) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 29 Mar 2024 13:41:43 GMT">
								<outline text="callback (err);" created="Fri, 29 Mar 2024 13:41:46 GMT"/>
								<outline text="}" created="Fri, 29 Mar 2024 13:41:56 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 21 Mar 2024 14:10:22 GMT">
								<outline text="var theJsonData = new Object (), flJsonError = false;" created="Fri, 29 Mar 2024 14:49:41 GMT"/>
								<outline text="try {" created="Fri, 29 Mar 2024 14:48:23 GMT">
									<outline text="theJsonData = JSON.parse (theFileData.filecontents);" created="Fri, 29 Mar 2024 14:47:44 GMT"/>
									<outline text="}" created="Fri, 29 Mar 2024 14:48:25 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Fri, 29 Mar 2024 14:48:25 GMT">
									<outline text="callback (err);" created="Wed, 10 Apr 2024 14:48:47 GMT"/>
									<outline text="flJsonError = true;" created="Fri, 29 Mar 2024 14:49:33 GMT"/>
									<outline text="}" created="Fri, 29 Mar 2024 14:48:29 GMT"/>
									</outline>
								<outline text="if (!flJsonError) {" created="Wed, 10 Apr 2024 14:49:09 GMT">
									<outline text="callback (undefined, theJsonData);" created="Wed, 10 Apr 2024 14:49:20 GMT"/>
									<outline text="}" created="Wed, 10 Apr 2024 14:49:15 GMT"/>
									</outline>
								<outline text="}" created="Thu, 21 Mar 2024 14:10:23 GMT"/>
								</outline>
							<outline text="}, options);" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Wed, 10 Apr 2024 14:45:56 GMT"/>
						</outline>
					<outline text="" created="Wed, 10 Apr 2024 14:45:28 GMT"/>
					<outline text="this.deleteUserDataFile = function (relpath, flPrivate, callback) { //3/26/24 by DW" created="Mon, 25 Mar 2024 14:11:16 GMT">
						<outline text="console.log (&quot;deleteUserDataFile&quot;);" created="Sun, 24 Mar 2024 16:19:41 GMT"/>
						<outline text="const whenstart = new Date ();" created="Sun, 20 Aug 2023 18:32:23 GMT"/>
						<outline text="var params = {" created="Fri, 23 Dec 2022 20:01:02 GMT">
							<outline text="relpath" created="Fri, 23 Dec 2022 20:12:44 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:12:46 GMT"/>
							</outline>
						<outline text="if (flPrivate) {" created="Fri, 23 Dec 2022 20:03:13 GMT">
							<outline text="params.flprivate = true;" created="Fri, 23 Dec 2022 20:03:33 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:03:16 GMT"/>
							</outline>
						<outline text="wpServerCall (&quot;deletefile&quot;, params, true, callback);"/>
						<outline text="}" created="Mon, 25 Mar 2024 14:11:29 GMT"/>
						</outline>
					<outline text="this.getSiteList = function () {" created="Sat, 06 Apr 2024 21:04:30 GMT">
						<outline text="return (wordpressMemory.sitelist);" created="Sat, 06 Apr 2024 21:04:42 GMT"/>
						<outline text="}" created="Sat, 06 Apr 2024 21:04:45 GMT"/>
						</outline>
					<outline text="this.markdownProcess = markdownProcess;" created="Sun, 07 Apr 2024 16:30:16 GMT"/>
					<outline text="" created="Sat, 06 Apr 2024 21:05:43 GMT"/>
					<outline text="this.testWriteUserDataFile = function  () {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="function nowString () {" created="Fri, 24 Feb 2023 14:22:58 GMT">
							<outline text="return (new Date ().toLocaleTimeString ());" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
							<outline text="}" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
							</outline>
						<outline text="const slogan = getRandomSnarkySlogan (), whenstart = new Date ();" created="Tue, 26 Mar 2024 00:28:22 GMT"/>
						<outline text="writeUserDataFile (&quot;slogan.txt&quot;, slogan, &quot;text/plain&quot;, true, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (nowString () + &quot; - testWriteUserDataFile: err.message == &quot; + err.message);" created="Thu, 28 Mar 2024 16:19:36 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (nowString () + &quot; - testWriteUserDataFile: &quot; + secondsSince (whenstart) + &quot; secs. data == &quot; + jsonStringify (data));" created="Thu, 28 Mar 2024 16:19:36 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testWriteUserDataFileEveryMinute = function () {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="runEveryMinute (testWriteUserDataFile);" created="Thu, 28 Mar 2024 16:26:06 GMT"/>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testDeleteUserDataFile = function () {" isComment="true" created="Mon, 25 Mar 2024 14:11:16 GMT">
						<outline text="deleteUserDataFile (&quot;hello.json&quot;, true, function (err, data) {" created="Mon, 25 Mar 2024 14:17:12 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (data);" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Mon, 25 Mar 2024 14:17:30 GMT"/>
							</outline>
						<outline text="}" created="Tue, 26 Mar 2024 18:10:21 GMT"/>
						</outline>
					<outline text="this.testWriteUserDataFile = function () {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="runEveryMinute (function () {" created="Tue, 26 Mar 2024 00:26:52 GMT">
							<outline text="function nowString () {" created="Fri, 24 Feb 2023 14:22:58 GMT">
								<outline text="return (new Date ().toLocaleTimeString ());" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
								<outline text="}" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
								</outline>
							<outline text="const slogan = getRandomSnarkySlogan ();" created="Tue, 26 Mar 2024 00:28:22 GMT"/>
							<outline text="console.log (nowstring () + &quot;: &quot; + slogan);" created="Sun, 11 Feb 2024 21:20:56 GMT"/>
							<outline text="writeUserDataFile (&quot;slogan.txt&quot;, slogan, &quot;text/plain&quot;, true, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
								<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
									<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
									<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
									<outline text="console.log (data);" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
									<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
									</outline>
								<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
								</outline>
							<outline text="});" created="Tue, 26 Mar 2024 00:27:01 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testReadUserDataFile = function () {" isComment="true" created="Mon, 04 Sep 2023 13:25:44 GMT">
						<outline text="readUserDataFile (&quot;draft.json&quot;, true, function (err, data) {" created="Mon, 25 Mar 2024 14:17:12 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (data);" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Mon, 25 Mar 2024 14:17:30 GMT"/>
							</outline>
						<outline text="}" created="Mon, 25 Mar 2024 14:17:08 GMT"/>
						</outline>
					<outline text="this.testGetUserInfo = function () {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="console.log (&quot;testGetUserInfo&quot;);" created="Mon, 08 Apr 2024 15:52:09 GMT"/>
						<outline text="getUserInfo (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testGetUserSites = function () {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="getUserSites (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testGetSitePosts = function (idsite) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="getSitePosts (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testGetSiteUsers = function (idsite) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="getSiteUsers (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testGetPost = function (idsite, idpost) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="getPost (idsite, idpost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testGetSiteInfo = function (idsite, idpost) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="getSiteInfo (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testGetSiteMedialist = function (idsite, idpost) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="getSiteMedialist (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testAddPost = function (idsite) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="function getRandomContent () {" created="Tue, 29 Aug 2023 16:51:28 GMT">
							<outline text="var theContent = &quot;&quot;;" created="Tue, 29 Aug 2023 16:52:43 GMT"/>
							<outline text="for (var i = 1; i &lt;= 10; i++) {" created="Tue, 29 Aug 2023 16:52:22 GMT">
								<outline text="theContent += getRandomSnarkySlogan () + &quot;\n&quot;;" created="Tue, 29 Aug 2023 16:52:54 GMT"/>
								<outline text="}" created="Tue, 29 Aug 2023 16:52:35 GMT"/>
								</outline>
							<outline text="return (theContent);" created="Tue, 29 Aug 2023 16:53:21 GMT"/>
							<outline text="}" created="Tue, 29 Aug 2023 16:51:42 GMT"/>
							</outline>
						<outline text="const thePost = {" created="Tue, 29 Aug 2023 16:48:40 GMT">
							<outline text="title: &quot;Some random snarky slogans&quot;," created="Tue, 29 Aug 2023 16:49:19 GMT"/>
							<outline text="content: getRandomContent ()," created="Tue, 29 Aug 2023 16:49:28 GMT"/>
							<outline text="status: &quot;publish&quot;," created="Tue, 29 Aug 2023 16:49:42 GMT"/>
							<outline text="date: new Date ().toGMTString ()," created="Tue, 29 Aug 2023 16:49:59 GMT"/>
							<outline text="format: &quot;standard&quot;," created="Tue, 29 Aug 2023 16:50:27 GMT"/>
							<outline text="categories: [&quot;Testing&quot;, &quot;Nonsense&quot;, &quot;Snark&quot;, &quot;Slogans&quot;]," created="Tue, 29 Aug 2023 16:50:37 GMT"/>
							<outline text="comment_status: &quot;open&quot;" created="Tue, 29 Aug 2023 16:51:09 GMT"/>
							<outline text="};" created="Tue, 29 Aug 2023 16:48:44 GMT"/>
							</outline>
						<outline text="addPost (idsite, thePost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testUpdatePost = function (idsite, idpost) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="const thePost = {" created="Tue, 29 Aug 2023 16:48:40 GMT">
							<outline text="title: &quot;So you'd like a test post?&quot;," isComment="true" created="Tue, 29 Aug 2023 16:49:19 GMT"/>
							<outline text="content: getRandomContent ()," created="Tue, 29 Aug 2023 16:49:28 GMT"/>
							<outline text="status: &quot;publish&quot;," created="Tue, 29 Aug 2023 16:49:42 GMT"/>
							<outline text="date: new Date ().toGMTString ()," isComment="true" created="Tue, 29 Aug 2023 16:49:59 GMT"/>
							<outline text="format: &quot;standard&quot;," isComment="true" created="Tue, 29 Aug 2023 16:50:27 GMT"/>
							<outline text="categories: [&quot;Testing&quot;, &quot;Nonsense&quot;]," isComment="true" created="Tue, 29 Aug 2023 16:50:37 GMT"/>
							<outline text="comment_status: &quot;open&quot;" isComment="true" created="Tue, 29 Aug 2023 16:51:09 GMT"/>
							<outline text="};" created="Tue, 29 Aug 2023 16:48:44 GMT"/>
							</outline>
						<outline text="updatePost (idsite, idpost, thePost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testDeletePost = function (idsite, idpost) {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="deletePost (idsite, idpost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="this.testGetSubscriptions = function () {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
						<outline text="getSubscriptions (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
						</outline>
					<outline text="" created="Sat, 06 Apr 2024 20:07:43 GMT"/>
					<outline text="this.userIsSignedIn = userIsSignedIn;" created="Wed, 23 Aug 2023 12:35:03 GMT"/>
					<outline text="this.connectWithWordpress = function () {" created="Tue, 22 Aug 2023 22:07:54 GMT">
						<outline text="const url = getServerAddress () + &quot;connect?urlapphomepage=&quot; + encodeURIComponent (location.href); //9/4/23 by DW" created="Mon, 04 Sep 2023 20:35:03 GMT"/>
						<outline text="console.log (&quot;connectWithWordpress: url == &quot; + url);" created="Mon, 04 Sep 2023 20:35:36 GMT"/>
						<outline text="location.href = url;" created="Sat, 26 Aug 2023 16:44:18 GMT"/>
						<outline text="" isComment="true" created="Mon, 04 Sep 2023 20:35:03 GMT"/>
						<outline text="location.href = &quot;https://wpidentity.scripting.com/connect&quot;;" isComment="true" created="Tue, 22 Aug 2023 22:08:27 GMT"/>
						<outline text="location.href = &quot;http://localhost:1408/connect&quot;;" isComment="true" created="Tue, 22 Aug 2023 22:08:27 GMT"/>
						<outline text="}" created="Tue, 22 Aug 2023 22:07:57 GMT"/>
						</outline>
					<outline text="this.logOffWordpress = function () {" created="Wed, 23 Aug 2023 12:41:35 GMT">
						<outline text="delete localStorage.wordpressMemory;" created="Sat, 02 Sep 2023 16:40:25 GMT"/>
						<outline text="location.reload ();" created="Mon, 04 Sep 2023 15:11:31 GMT"/>
						<outline text="}" created="Wed, 23 Aug 2023 12:41:39 GMT"/>
						</outline>
					<outline text="this.startup = function (callback) {" created="Sun, 07 Apr 2024 14:39:08 GMT">
						<outline text="if (userIsSignedIn ()) {" created="Sun, 07 Apr 2024 14:16:59 GMT">
							<outline text="initSitelist (function (err) {" created="Mon, 08 Apr 2024 15:56:18 GMT">
								<outline text="initUserInfo (function (err) {" created="Mon, 08 Apr 2024 15:58:08 GMT">
									<outline text="callback ();" created="Mon, 08 Apr 2024 16:01:11 GMT"/>
									<outline text="});" created="Mon, 08 Apr 2024 15:58:18 GMT"/>
									</outline>
								<outline text="});" created="Mon, 08 Apr 2024 15:57:07 GMT"/>
								</outline>
							<outline text="}" created="Sun, 07 Apr 2024 14:17:12 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 07 Apr 2024 14:22:43 GMT">
							<outline text="callback (undefined);" created="Sun, 07 Apr 2024 14:22:45 GMT"/>
							<outline text="}" created="Sun, 07 Apr 2024 14:22:50 GMT"/>
							</outline>
						<outline text="}" created="Sun, 07 Apr 2024 14:39:15 GMT"/>
						</outline>
					<outline text="}" created="Sat, 06 Apr 2024 19:55:14 GMT"/>
					</outline>
				</outline>
			<outline text="client/styles.css" created="Wed, 23 Aug 2023 12:30:33 GMT">
				<outline text="@import url('https://fonts.googleapis.com/css?family=Oswald:400,700');"/>
				<outline text="" created="Fri, 01 Sep 2023 21:24:01 GMT"/>
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 60%;"/>
					<outline text="margin-top: 90px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;" created="Fri, 11 Jun 2021 12:29:37 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=" #idMenuProductName {" created="Sat, 02 Sep 2023 16:12:12 GMT">
					<outline text="font-family: Oswald;"/>
					<outline text="font-style: italic;"/>
					<outline text="font-size: 28px;"/>
					<outline text="}" created="Sat, 02 Sep 2023 16:12:14 GMT"/>
					</outline>
				<outline text="" created="Sat, 02 Sep 2023 16:33:57 GMT"/>
				<outline text=".divSignedOff {" created="Sat, 02 Sep 2023 16:33:32 GMT">
					<outline text="margin-top: 200px;" created="Mon, 28 Aug 2023 15:41:43 GMT"/>
					<outline text="line-height: 200%;" created="Sat, 02 Sep 2023 16:36:10 GMT"/>
					<outline text="text-align: center;" created="Sat, 02 Sep 2023 16:34:23 GMT"/>
					<outline text="}" created="Sat, 02 Sep 2023 16:33:40 GMT"/>
					</outline>
				<outline text=".divLogonButton {" created="Wed, 23 Aug 2023 12:38:42 GMT">
					<outline text="display: none;" created="Wed, 23 Aug 2023 12:38:55 GMT"/>
					<outline text="}" created="Wed, 23 Aug 2023 12:38:44 GMT"/>
					</outline>
				<outline text=".divLoggedInMessage {" created="Wed, 23 Aug 2023 12:38:42 GMT">
					<outline text="margin-top: 50px;" created="Mon, 28 Aug 2023 15:41:43 GMT"/>
					<outline text="border-top: 1px solid silver;" created="Mon, 28 Aug 2023 15:41:48 GMT"/>
					<outline text="font-size: 14px;" created="Mon, 28 Aug 2023 15:41:59 GMT"/>
					<outline text="padding-top: 10px;" created="Mon, 28 Aug 2023 15:42:24 GMT"/>
					<outline text="}" created="Wed, 23 Aug 2023 12:38:44 GMT"/>
					</outline>
				<outline text="" created="Mon, 28 Aug 2023 15:40:36 GMT"/>
				<outline text=".divSitelistContainer {" created="Sun, 03 Sep 2023 14:27:49 GMT">
					<outline text="min-height: 400px;" created="Sun, 03 Sep 2023 14:52:03 GMT"/>
					<outline text="}" created="Sun, 03 Sep 2023 14:27:58 GMT"/>
					</outline>
				<outline text=".divSitelist {" created="Mon, 28 Aug 2023 15:40:37 GMT">
					<outline text="font-size: 15px;" created="Mon, 28 Aug 2023 15:40:40 GMT"/>
					<outline text="width: 300px;" created="Sun, 03 Sep 2023 14:26:47 GMT"/>
					<outline text="margin-left: auto;" created="Sun, 03 Sep 2023 14:28:29 GMT"/>
					<outline text="margin-right: auto;" created="Sun, 03 Sep 2023 14:28:34 GMT"/>
					<outline text="border: 1px solid silver;" created="Sun, 03 Sep 2023 14:28:39 GMT"/>
					<outline text="background-color: white;" created="Sun, 03 Sep 2023 14:28:49 GMT"/>
					<outline text="padding: 3px;" created="Sun, 03 Sep 2023 14:29:08 GMT"/>
					<outline text="}" created="Mon, 28 Aug 2023 15:40:39 GMT"/>
					</outline>
				<outline text=".divSitelist td {" created="Mon, 28 Aug 2023 15:40:37 GMT">
					<outline text="min-width: 100px;" created="Sun, 03 Sep 2023 14:26:47 GMT"/>
					<outline text="}" created="Mon, 28 Aug 2023 15:40:39 GMT"/>
					</outline>
				<outline text=".spSitename {" created="Mon, 28 Aug 2023 16:16:20 GMT">
					<outline text="cursor: pointer;" created="Mon, 28 Aug 2023 16:16:22 GMT"/>
					<outline text="margin-right: 1em;" created="Mon, 28 Aug 2023 16:34:55 GMT"/>
					<outline text="}" created="Mon, 28 Aug 2023 16:16:27 GMT"/>
					</outline>
				<outline text=".spSitedate {" created="Mon, 28 Aug 2023 16:36:08 GMT">
					<outline text="margin-right: 1em;" created="Mon, 28 Aug 2023 16:34:55 GMT"/>
					<outline text="}" created="Mon, 28 Aug 2023 16:36:10 GMT"/>
					</outline>
				</outline>
			<outline text="client/code.js" created="Wed, 23 Aug 2023 12:21:15 GMT">
				<outline text="const flUseLocalServer = false;" created="Sat, 26 Aug 2023 22:13:03 GMT"/>
				<outline text="" created="Tue, 29 Aug 2023 17:40:05 GMT"/>
				<outline text="const myServerAddress = (flUseLocalServer) ? &quot;http://localhost:1408/&quot; : &quot;https://wpidentity.scripting.com/&quot;;" created="Fri, 12 Apr 2024 16:13:13 GMT"/>
				<outline text="" created="Fri, 12 Apr 2024 15:42:47 GMT"/>
				<outline text="var myWordpress;" created="Thu, 11 Apr 2024 15:45:19 GMT"/>
				<outline text="" created="Fri, 12 Apr 2024 15:43:54 GMT"/>
				<outline text="var appPrefs = {" created="Fri, 12 Apr 2024 15:43:54 GMT">
					<outline text="ctMinutesRunning: 0," created="Fri, 12 Apr 2024 15:44:11 GMT"/>
					<outline text="whenLastMinute: new Date (0), " created="Fri, 12 Apr 2024 15:44:28 GMT"/>
					<outline text="currentSlogan: &quot;&quot;" created="Fri, 12 Apr 2024 16:02:19 GMT"/>
					<outline text="};" created="Fri, 12 Apr 2024 15:43:58 GMT"/>
					</outline>
				<outline text="const fnamePrefs = &quot;demo/prefs.json&quot;;" created="Fri, 12 Apr 2024 15:47:56 GMT"/>
				<outline text="var flPrefsChanged = false;" created="Fri, 12 Apr 2024 15:42:48 GMT"/>
				<outline text="" created="Thu, 31 Aug 2023 12:57:42 GMT"/>
				<outline text="" created="Thu, 11 Apr 2024 15:45:18 GMT"/>
				<outline text="function addToolTip (theObject, tipText, placement=&quot;right&quot;) { //8/24/22 by DW" created="Wed, 24 Aug 2022 12:58:59 GMT">
					<outline text="Changes" isComment="true" created="Sun, 23 Oct 2022 16:41:23 GMT">
						<outline text="11/1/22; 9:55:02 AM by DW" created="Tue, 01 Nov 2022 13:55:01 GMT">
							<outline text="In some circumstances, when you click on an item with a tooltip, the tooltip lingers around after the click. I added code that looks for the click and hides the tooltip." created="Tue, 01 Nov 2022 13:55:02 GMT"/>
							</outline>
						<outline text="10/23/22; 12:41:25 PM by DW" created="Sun, 23 Oct 2022 16:41:24 GMT">
							<outline text="Some tooltips I link to menu items are cut off at the boundary of something related to menus. The recommended way to deal with it is to add a data-container value of body." created="Sun, 23 Oct 2022 16:41:26 GMT">
								<outline text="https://getbootstrap.com/docs/4.0/components/popovers/#example-using-the-container-option"/>
								</outline>
							</outline>
						</outline>
					<outline text="$(theObject).attr (&quot;data-container&quot;, &quot;body&quot;); //10/23/22 by DW" created="Sat, 07 May 2022 15:24:22 GMT"/>
					<outline text="$(theObject).attr (&quot;data-toggle&quot;, &quot;tooltip&quot;);" created="Sat, 07 May 2022 15:24:22 GMT"/>
					<outline text="$(theObject).attr (&quot;data-placement&quot;, placement);" created="Sat, 07 May 2022 15:24:22 GMT"/>
					<outline text="$(theObject).attr (&quot;title&quot;, tipText);" created="Sat, 07 May 2022 15:24:22 GMT"/>
					<outline text="$(theObject).click (function () { //11/1/22 by DW" created="Sat, 07 May 2022 15:24:22 GMT">
						<outline text="$(theObject).tooltip (&quot;hide&quot;);"/>
						<outline text="});" created="Tue, 01 Nov 2022 13:52:12 GMT"/>
						</outline>
					<outline text="return (theObject);" created="Wed, 24 Aug 2022 13:14:21 GMT"/>
					<outline text="}" created="Wed, 24 Aug 2022 12:59:36 GMT"/>
					</outline>
				<outline text="function activateToolTips () { //8/28/22 by DW" created="Sun, 28 Aug 2022 17:36:16 GMT">
					<outline text="$(&quot;[data-toggle=\&quot;tooltip\&quot;]&quot;).tooltip ();"/>
					<outline text="}" created="Sun, 28 Aug 2022 17:36:20 GMT"/>
					</outline>
				<outline text="function getFeedlandTimeString (when, flLongStrings=false) {" created="Fri, 08 Jul 2022 15:26:21 GMT">
					<outline text="const options = {" created="Fri, 17 Mar 2023 15:10:46 GMT">
						<outline text="flBriefYearDates: true," created="Fri, 17 Mar 2023 14:28:31 GMT"/>
						<outline text="nowString: &quot;now&quot;" created="Fri, 17 Mar 2023 14:28:52 GMT"/>
						<outline text="};" created="Fri, 17 Mar 2023 15:10:51 GMT"/>
						</outline>
					<outline text="var s = getFacebookTimeString (when, flLongStrings, options);" created="Fri, 08 Jul 2022 15:26:35 GMT"/>
					<outline text="s = replaceAll (s, &quot;Just now&quot;, &quot;now&quot;);" isComment="true" created="Fri, 08 Jul 2022 15:26:38 GMT"/>
					<outline text="return (s);" created="Fri, 08 Jul 2022 15:27:05 GMT"/>
					<outline text="}" created="Fri, 08 Jul 2022 15:26:28 GMT"/>
					</outline>
				<outline text="function userInteracted () { //5/17/21 by DW" created="Mon, 17 May 2021 14:01:12 GMT">
					<outline text="console.log (&quot;userInteracted&quot;);" isComment="true" created="Mon, 17 May 2021 14:15:39 GMT"/>
					<outline text="whenLastUserAction = new Date ();" isComment="true" created="Mon, 17 May 2021 14:01:35 GMT"/>
					<outline text="}" created="Mon, 17 May 2021 14:01:22 GMT"/>
					</outline>
				<outline text="function decodeHtmlEntities (htmltext) {" isComment="true">
					<outline text="var textarea = document.createElement (&quot;textarea&quot;);"/>
					<outline text="textarea.innerHTML = htmltext;"/>
					<outline text="return (textarea.value);"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Fri, 12 Apr 2024 15:41:30 GMT"/>
				<outline text="function prefsChanged () {" created="Fri, 29 Mar 2024 13:37:39 GMT">
					<outline text="flPrefsChanged = true;" created="Fri, 29 Mar 2024 13:37:45 GMT"/>
					<outline text="}" created="Fri, 29 Mar 2024 13:37:48 GMT"/>
					</outline>
				<outline text="function readPrefs (callback) {" created="Fri, 29 Mar 2024 13:40:08 GMT">
					<outline text="const whenstart = new Date ();" created="Thu, 28 Mar 2024 14:41:12 GMT"/>
					<outline text="myWordpress.readUserDataFile (fnamePrefs, true, function (err, theSavedPrefs) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 29 Mar 2024 13:41:43 GMT">
							<outline text="console.log (&quot;readPrefs: err.message == &quot; + err.message);" isComment="true" created="Fri, 29 Mar 2024 13:41:46 GMT"/>
							<outline text="}" created="Fri, 29 Mar 2024 13:41:56 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 21 Mar 2024 14:10:22 GMT">
							<outline text="var thePrefs = new Object (), flJsonError = false;" created="Fri, 29 Mar 2024 14:49:41 GMT"/>
							<outline text="try {" created="Fri, 29 Mar 2024 14:48:23 GMT">
								<outline text="thePrefs = JSON.parse (theSavedPrefs.filecontents);" created="Fri, 29 Mar 2024 14:47:44 GMT"/>
								<outline text="}" created="Fri, 29 Mar 2024 14:48:25 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Fri, 29 Mar 2024 14:48:25 GMT">
								<outline text="console.log (&quot;readPrefs: err.message == &quot; + err.message);" created="Fri, 29 Mar 2024 14:48:40 GMT"/>
								<outline text="flJsonError = true;" created="Fri, 29 Mar 2024 14:49:33 GMT"/>
								<outline text="}" created="Fri, 29 Mar 2024 14:48:29 GMT"/>
								</outline>
							<outline text="if (!flJsonError) {" created="Fri, 29 Mar 2024 14:47:45 GMT">
								<outline text="for (var x in thePrefs) {" created="Fri, 29 Mar 2024 13:42:32 GMT">
									<outline text="appPrefs [x] = thePrefs [x];" created="Fri, 29 Mar 2024 13:42:38 GMT"/>
									<outline text="}" created="Fri, 29 Mar 2024 13:42:36 GMT"/>
									</outline>
								<outline text="}" created="Fri, 29 Mar 2024 14:49:52 GMT"/>
								</outline>
							<outline text="cleanAppPrefs ();" isComment="true"/>
							<outline text="console.log (&quot;readPrefs: &quot; + secondsSince (whenstart) + &quot; secs&quot;);" created="Thu, 28 Mar 2024 14:39:01 GMT"/>
							<outline text="}" created="Thu, 21 Mar 2024 14:10:23 GMT"/>
							</outline>
						<outline text="if (callback !== undefined) {" created="Fri, 29 Mar 2024 13:46:31 GMT">
							<outline text="callback (err, theSavedPrefs);" created="Fri, 29 Mar 2024 13:46:37 GMT"/>
							<outline text="}" created="Fri, 29 Mar 2024 13:46:40 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 29 Mar 2024 13:40:19 GMT"/>
					</outline>
				<outline text="function savePrefs (callback) {" created="Fri, 29 Mar 2024 13:38:27 GMT">
					<outline text="const jsontext = jsonStringify (appPrefs), whenstart = new Date ();" created="Thu, 28 Mar 2024 14:41:12 GMT"/>
					<outline text="myWordpress.writeUserDataFile (fnamePrefs, jsontext, &quot;application/json&quot;, true, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (&quot;savePrefs: err.message == &quot; +  err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (&quot;savePrefs: &quot; + secondsSince (whenstart) + &quot; secs&quot;);" isComment="true" created="Thu, 28 Mar 2024 14:39:01 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="if (callback !== undefined) {" created="Fri, 29 Mar 2024 13:40:27 GMT">
							<outline text="callback (err, data);" created="Fri, 29 Mar 2024 13:40:34 GMT"/>
							<outline text="}" created="Fri, 29 Mar 2024 13:40:38 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 29 Mar 2024 13:38:32 GMT"/>
					</outline>
				<outline text="" created="Mon, 28 Aug 2023 15:03:10 GMT"/>
				<outline text="function sortSiteList (theSites, sortBy=&quot;name&quot;, flReverseSort=false) {" created="Mon, 04 Jul 2022 16:47:46 GMT">
					<outline text="theSites.sort (function (a, b) {">
						<outline text="cribsheet" isComment="true">
							<outline text="if a &gt; b return 1"/>
							<outline text="if a &lt; b return -1"/>
							</outline>
						<outline text="switch (sortBy) {" created="Mon, 04 Jul 2022 16:32:05 GMT">
							<outline text="case &quot;name&quot;:" created="Mon, 04 Jul 2022 16:32:21 GMT">
								<outline text="var alower = a.name.toLowerCase (), val;"/>
								<outline text="var blower = b.name.toLowerCase ();"/>
								<outline text="if (flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:22:55 GMT">
									<outline text="let tmp = alower;" created="Mon, 11 Jul 2022 13:23:16 GMT"/>
									<outline text="alower = blower;" created="Mon, 11 Jul 2022 13:23:19 GMT"/>
									<outline text="blower = tmp;" created="Mon, 11 Jul 2022 13:23:23 GMT"/>
									<outline text="}" created="Mon, 11 Jul 2022 13:23:08 GMT"/>
									</outline>
								<outline text="if (alower.length == 0) {">
									<outline text="return (1);"/>
									<outline text="}"/>
									</outline>
								<outline text="if (blower.length == 0) {">
									<outline text="return (-1);"/>
									<outline text="}"/>
									</outline>
								<outline text="if (alower == blower) {">
									<outline text="val = 0;"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="if (blower &gt; alower) {">
										<outline text="val = -1;"/>
										<outline text="}"/>
										</outline>
									<outline text="else {">
										<outline text="val = 1;"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="return (val);"/>
								</outline>
							<outline text="case &quot;whenUpdated&quot;:" isComment="true" created="Mon, 04 Jul 2022 16:32:32 GMT">
								<outline text="var adate = getDateForSorting (a.whenUpdated), bdate = getDateForSorting (b.whenUpdated);"/>
								<outline text="if (flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:22:55 GMT">
									<outline text="let tmp = adate;" created="Mon, 11 Jul 2022 13:23:16 GMT"/>
									<outline text="adate = bdate;" created="Mon, 11 Jul 2022 13:23:19 GMT"/>
									<outline text="bdate = tmp;" created="Mon, 11 Jul 2022 13:23:23 GMT"/>
									<outline text="}" created="Mon, 11 Jul 2022 13:23:08 GMT"/>
									</outline>
								<outline text="return (bdate - adate);"/>
								</outline>
							<outline text="case &quot;ctSubs&quot;:" isComment="true" created="Mon, 04 Jul 2022 16:32:48 GMT">
								<outline text="const acount = getCountForSorting (a.ctSubs), bcount = getCountForSorting (b.ctSubs);" created="Sat, 03 Jun 2023 14:26:15 GMT"/>
								<outline text="if (flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:24:36 GMT">
									<outline text="return (acount - bcount);"/>
									<outline text="}" created="Mon, 11 Jul 2022 13:24:40 GMT"/>
									</outline>
								<outline text="else {" created="Mon, 11 Jul 2022 13:24:45 GMT">
									<outline text="return (bcount - acount);"/>
									<outline text="}" created="Mon, 11 Jul 2022 13:24:47 GMT"/>
									</outline>
								</outline>
							<outline text="}" created="Mon, 04 Jul 2022 16:32:19 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 04 Jul 2022 16:47:54 GMT"/>
					</outline>
				<outline text="function viewSitelist (whereToAppend) {" created="Mon, 28 Aug 2023 15:03:11 GMT">
					<outline text="var options = {" created="Mon, 28 Aug 2023 16:00:23 GMT">
						<outline text="sortBy: &quot;name&quot;," created="Mon, 28 Aug 2023 16:00:29 GMT"/>
						<outline text="flReverseSort: false" created="Mon, 28 Aug 2023 16:01:37 GMT"/>
						<outline text="}" created="Mon, 28 Aug 2023 16:00:36 GMT"/>
						</outline>
					<outline text="function getRow (item) {" created="Mon, 28 Aug 2023 16:08:30 GMT">
						<outline text="console.log (&quot;getRow: item == &quot; + jsonStringify (item));" isComment="true" created="Mon, 28 Aug 2023 16:25:27 GMT"/>
						<outline text="const theRow = $(&quot;&lt;tr&gt;&lt;/tr&gt;&quot;);" created="Mon, 28 Aug 2023 15:24:08 GMT"/>
						<outline text="function getSiteName () {" created="Mon, 28 Aug 2023 16:09:32 GMT">
							<outline text="const theCell = $(&quot;&lt;td&gt;&lt;/td&gt;&quot;);" created="Mon, 28 Aug 2023 16:09:56 GMT"/>
							<outline text="const shortenedname = maxStringLength (item.name, 25, true, true);" created="Mon, 28 Aug 2023 16:33:39 GMT"/>
							<outline text="const theName = $(&quot;&lt;span class=\&quot;spSitename\&quot;&gt;&quot; + shortenedname + &quot;&lt;/span&gt;&quot;);" created="Mon, 28 Aug 2023 16:10:30 GMT"/>
							<outline text="addToolTip (theName, item.description);" created="Mon, 28 Aug 2023 16:11:29 GMT"/>
							<outline text="theCell.append (theName);" created="Mon, 28 Aug 2023 16:11:55 GMT"/>
							<outline text="return (theCell);" created="Mon, 28 Aug 2023 16:10:15 GMT"/>
							<outline text="}" created="Mon, 28 Aug 2023 16:09:48 GMT"/>
							</outline>
						<outline text="function getDateValue (when, meaning) {" created="Mon, 28 Aug 2023 16:09:32 GMT">
							<outline text="const theCell = $(&quot;&lt;td&gt;&lt;/td&gt;&quot;);" created="Mon, 28 Aug 2023 16:09:56 GMT"/>
							<outline text="const whenstring = getFeedlandTimeString (when);" created="Mon, 28 Aug 2023 16:28:37 GMT"/>
							<outline text="const whenstring = new Date (when).toLocaleString ();" isComment="true" created="Mon, 28 Aug 2023 16:28:37 GMT"/>
							<outline text="const theDate = $(&quot;&lt;span class=\&quot;spSitedate\&quot;&gt;&quot; + whenstring + &quot;&lt;/span&gt;&quot;);" created="Mon, 28 Aug 2023 16:10:30 GMT"/>
							<outline text="addToolTip (theDate, &quot;When the site was &quot; + meaning + &quot;.&quot;);" created="Mon, 28 Aug 2023 16:11:29 GMT"/>
							<outline text="theCell.append (theDate);" created="Mon, 28 Aug 2023 16:11:55 GMT"/>
							<outline text="return (theCell);" created="Mon, 28 Aug 2023 16:10:15 GMT"/>
							<outline text="}" created="Mon, 28 Aug 2023 16:09:48 GMT"/>
							</outline>
						<outline text="theRow.append (getSiteName ());" created="Mon, 28 Aug 2023 15:24:29 GMT"/>
						<outline text="theRow.append (getDateValue (item.whenCreated, &quot;created&quot;));" created="Mon, 28 Aug 2023 15:24:29 GMT"/>
						<outline text="theRow.append (getDateValue (item.options.updated_at, &quot;last updated&quot;));" isComment="true" created="Mon, 28 Aug 2023 15:24:29 GMT"/>
						<outline text="return (theRow);" created="Mon, 28 Aug 2023 16:14:07 GMT"/>
						<outline text="}" created="Mon, 28 Aug 2023 16:08:56 GMT"/>
						</outline>
					<outline text="console.log (&quot;viewSitelist&quot;);" created="Mon, 28 Aug 2023 16:05:53 GMT"/>
					<outline text="if (whereToAppend === undefined) {" created="Mon, 28 Aug 2023 15:28:53 GMT">
						<outline text="whereToAppend = $(&quot;.divSitelistContainer&quot;);" created="Mon, 28 Aug 2023 15:28:59 GMT"/>
						<outline text="}" created="Mon, 28 Aug 2023 15:29:37 GMT"/>
						</outline>
					<outline text="" created="Thu, 11 Apr 2024 16:14:43 GMT"/>
					<outline text="const theList = myWordpress.getSiteList ();" created="Thu, 11 Apr 2024 16:14:43 GMT"/>
					<outline text="" created="Thu, 11 Apr 2024 16:14:43 GMT"/>
					<outline text="function sortTheList () {" created="Mon, 04 Jul 2022 16:47:46 GMT">
						<outline text="theList.sites.sort (function (a, b) {">
							<outline text="cribsheet" isComment="true">
								<outline text="if a &gt; b return 1"/>
								<outline text="if a &lt; b return -1"/>
								</outline>
							<outline text="switch (options.sortBy) {" created="Mon, 04 Jul 2022 16:32:05 GMT">
								<outline text="case &quot;name&quot;:" created="Mon, 04 Jul 2022 16:32:21 GMT">
									<outline text="var alower = a.name.toLowerCase (), val;"/>
									<outline text="var blower = b.name.toLowerCase ();"/>
									<outline text="if (options.flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:22:55 GMT">
										<outline text="let tmp = alower;" created="Mon, 11 Jul 2022 13:23:16 GMT"/>
										<outline text="alower = blower;" created="Mon, 11 Jul 2022 13:23:19 GMT"/>
										<outline text="blower = tmp;" created="Mon, 11 Jul 2022 13:23:23 GMT"/>
										<outline text="}" created="Mon, 11 Jul 2022 13:23:08 GMT"/>
										</outline>
									<outline text="if (alower.length == 0) {">
										<outline text="return (1);"/>
										<outline text="}"/>
										</outline>
									<outline text="if (blower.length == 0) {">
										<outline text="return (-1);"/>
										<outline text="}"/>
										</outline>
									<outline text="if (alower == blower) {">
										<outline text="val = 0;"/>
										<outline text="}"/>
										</outline>
									<outline text="else {">
										<outline text="if (blower &gt; alower) {">
											<outline text="val = -1;"/>
											<outline text="}"/>
											</outline>
										<outline text="else {">
											<outline text="val = 1;"/>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="return (val);"/>
									</outline>
								<outline text="case &quot;whenUpdated&quot;:" isComment="true" created="Mon, 04 Jul 2022 16:32:32 GMT">
									<outline text="var adate = getDateForSorting (a.whenUpdated), bdate = getDateForSorting (b.whenUpdated);"/>
									<outline text="if (options.flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:22:55 GMT">
										<outline text="let tmp = adate;" created="Mon, 11 Jul 2022 13:23:16 GMT"/>
										<outline text="adate = bdate;" created="Mon, 11 Jul 2022 13:23:19 GMT"/>
										<outline text="bdate = tmp;" created="Mon, 11 Jul 2022 13:23:23 GMT"/>
										<outline text="}" created="Mon, 11 Jul 2022 13:23:08 GMT"/>
										</outline>
									<outline text="return (bdate - adate);"/>
									</outline>
								<outline text="case &quot;ctSubs&quot;:" isComment="true" created="Mon, 04 Jul 2022 16:32:48 GMT">
									<outline text="const acount = getCountForSorting (a.ctSubs), bcount = getCountForSorting (b.ctSubs);" created="Sat, 03 Jun 2023 14:26:15 GMT"/>
									<outline text="if (options.flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:24:36 GMT">
										<outline text="return (acount - bcount);"/>
										<outline text="}" created="Mon, 11 Jul 2022 13:24:40 GMT"/>
										</outline>
									<outline text="else {" created="Mon, 11 Jul 2022 13:24:45 GMT">
										<outline text="return (bcount - acount);"/>
										<outline text="}" created="Mon, 11 Jul 2022 13:24:47 GMT"/>
										</outline>
									</outline>
								<outline text="}" created="Mon, 04 Jul 2022 16:32:19 GMT"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Mon, 04 Jul 2022 16:47:54 GMT"/>
						</outline>
					<outline text="const divSitelist = $(&quot;&lt;div class=\&quot;divSitelist\&quot;&gt;&lt;/div&gt;&quot;);" created="Fri, 20 May 2022 14:38:24 GMT"/>
					<outline text="sortSiteList (theList, options.sortBy, options.flReverseSort);" created="Mon, 28 Aug 2023 16:02:11 GMT"/>
					<outline text="theList.forEach (function (item) {" created="Mon, 28 Aug 2023 15:05:25 GMT">
						<outline text="divSitelist.append (getRow (item));" created="Mon, 28 Aug 2023 15:28:35 GMT"/>
						<outline text="});" created="Mon, 28 Aug 2023 15:23:55 GMT"/>
						</outline>
					<outline text="whereToAppend.append (divSitelist);" created="Mon, 28 Aug 2023 15:27:40 GMT"/>
					<outline text="" created="Thu, 11 Apr 2024 16:14:44 GMT"/>
					<outline text="myWordpress.getSiteList (function (err, theList) {" isComment="true" created="Mon, 28 Aug 2023 15:04:53 GMT">
						<outline text="function sortTheList () {" created="Mon, 04 Jul 2022 16:47:46 GMT">
							<outline text="theList.sites.sort (function (a, b) {">
								<outline text="cribsheet" isComment="true">
									<outline text="if a &gt; b return 1"/>
									<outline text="if a &lt; b return -1"/>
									</outline>
								<outline text="switch (options.sortBy) {" created="Mon, 04 Jul 2022 16:32:05 GMT">
									<outline text="case &quot;name&quot;:" created="Mon, 04 Jul 2022 16:32:21 GMT">
										<outline text="var alower = a.name.toLowerCase (), val;"/>
										<outline text="var blower = b.name.toLowerCase ();"/>
										<outline text="if (options.flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:22:55 GMT">
											<outline text="let tmp = alower;" created="Mon, 11 Jul 2022 13:23:16 GMT"/>
											<outline text="alower = blower;" created="Mon, 11 Jul 2022 13:23:19 GMT"/>
											<outline text="blower = tmp;" created="Mon, 11 Jul 2022 13:23:23 GMT"/>
											<outline text="}" created="Mon, 11 Jul 2022 13:23:08 GMT"/>
											</outline>
										<outline text="if (alower.length == 0) {">
											<outline text="return (1);"/>
											<outline text="}"/>
											</outline>
										<outline text="if (blower.length == 0) {">
											<outline text="return (-1);"/>
											<outline text="}"/>
											</outline>
										<outline text="if (alower == blower) {">
											<outline text="val = 0;"/>
											<outline text="}"/>
											</outline>
										<outline text="else {">
											<outline text="if (blower &gt; alower) {">
												<outline text="val = -1;"/>
												<outline text="}"/>
												</outline>
											<outline text="else {">
												<outline text="val = 1;"/>
												<outline text="}"/>
												</outline>
											<outline text="}"/>
											</outline>
										<outline text="return (val);"/>
										</outline>
									<outline text="case &quot;whenUpdated&quot;:" isComment="true" created="Mon, 04 Jul 2022 16:32:32 GMT">
										<outline text="var adate = getDateForSorting (a.whenUpdated), bdate = getDateForSorting (b.whenUpdated);"/>
										<outline text="if (options.flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:22:55 GMT">
											<outline text="let tmp = adate;" created="Mon, 11 Jul 2022 13:23:16 GMT"/>
											<outline text="adate = bdate;" created="Mon, 11 Jul 2022 13:23:19 GMT"/>
											<outline text="bdate = tmp;" created="Mon, 11 Jul 2022 13:23:23 GMT"/>
											<outline text="}" created="Mon, 11 Jul 2022 13:23:08 GMT"/>
											</outline>
										<outline text="return (bdate - adate);"/>
										</outline>
									<outline text="case &quot;ctSubs&quot;:" isComment="true" created="Mon, 04 Jul 2022 16:32:48 GMT">
										<outline text="const acount = getCountForSorting (a.ctSubs), bcount = getCountForSorting (b.ctSubs);" created="Sat, 03 Jun 2023 14:26:15 GMT"/>
										<outline text="if (options.flReverseSort) { //7/11/22 by DW" created="Mon, 11 Jul 2022 13:24:36 GMT">
											<outline text="return (acount - bcount);"/>
											<outline text="}" created="Mon, 11 Jul 2022 13:24:40 GMT"/>
											</outline>
										<outline text="else {" created="Mon, 11 Jul 2022 13:24:45 GMT">
											<outline text="return (bcount - acount);"/>
											<outline text="}" created="Mon, 11 Jul 2022 13:24:47 GMT"/>
											</outline>
										</outline>
									<outline text="}" created="Mon, 04 Jul 2022 16:32:19 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Mon, 04 Jul 2022 16:47:54 GMT"/>
							</outline>
						<outline text="if (err) {" created="Mon, 28 Aug 2023 15:05:01 GMT">
							<outline text="alertDialog (err.message);" created="Mon, 28 Aug 2023 15:05:04 GMT"/>
							<outline text="}" created="Mon, 28 Aug 2023 15:05:11 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 28 Aug 2023 15:05:12 GMT">
							<outline text="const divSitelist = $(&quot;&lt;div class=\&quot;divSitelist\&quot;&gt;&lt;/div&gt;&quot;);" created="Fri, 20 May 2022 14:38:24 GMT"/>
							<outline text="sortSiteList (theList, options.sortBy, options.flReverseSort);" created="Mon, 28 Aug 2023 16:02:11 GMT"/>
							<outline text="theList.forEach (function (item) {" created="Mon, 28 Aug 2023 15:05:25 GMT">
								<outline text="divSitelist.append (getRow (item));" created="Mon, 28 Aug 2023 15:28:35 GMT"/>
								<outline text="});" created="Mon, 28 Aug 2023 15:23:55 GMT"/>
								</outline>
							<outline text="whereToAppend.append (divSitelist);" created="Mon, 28 Aug 2023 15:27:40 GMT"/>
							<outline text="}" created="Mon, 28 Aug 2023 15:05:13 GMT"/>
							</outline>
						<outline text="});" created="Mon, 28 Aug 2023 15:04:59 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Aug 2023 15:03:19 GMT"/>
					</outline>
				<outline text="function reloadSitelist (callback) { //9/3/23 by DW" created="Sun, 03 Sep 2023 14:49:04 GMT">
					<outline text="$(&quot;.divSitelistContainer&quot;).empty ();" created="Sun, 03 Sep 2023 14:50:44 GMT"/>
					<outline text="wordpressMemory.sitelist = undefined;" isComment="true" created="Sun, 03 Sep 2023 14:51:00 GMT"/>
					<outline text="viewSitelist ();" created="Sun, 03 Sep 2023 14:49:57 GMT"/>
					<outline text="}" created="Sun, 03 Sep 2023 14:49:11 GMT"/>
					</outline>
				<outline text="" created="Sun, 03 Sep 2023 14:49:02 GMT"/>
				<outline text="function viewUserInfo (callback) { //9/3/23 by DW" created="Sun, 03 Sep 2023 14:37:30 GMT">
					<outline text="myWordpress.getUserInfo (function (err, theUserInfo) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="alertDialog (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (&quot;viewUserInfo: theUserInfo == &quot; + jsonStringify (theUserInfo));" created="Wed, 04 Oct 2023 02:15:26 GMT"/>
							<outline text="var htmltext = &quot;&quot;;" created="Sun, 03 Sep 2023 14:38:21 GMT"/>
							<outline text="function addLine (label, value) {" created="Sun, 03 Sep 2023 14:38:08 GMT">
								<outline text="htmltext += &quot;&lt;p&gt;&quot; + label + &quot; = &quot; + value + &quot;.&lt;/p&gt;&quot;;" created="Sun, 03 Sep 2023 14:38:33 GMT"/>
								<outline text="}" created="Sun, 03 Sep 2023 14:38:20 GMT"/>
								</outline>
							<outline text="addLine (&quot;Username&quot;, theUserInfo.username);" created="Fri, 01 Sep 2023 18:41:05 GMT"/>
							<outline text="addLine (&quot;Human name&quot;, theUserInfo.name);" created="Fri, 01 Sep 2023 18:41:05 GMT"/>
							<outline text="addLine (&quot;User since&quot;, new Date (theUserInfo.whenStarted).toLocaleString ());" created="Fri, 01 Sep 2023 18:41:05 GMT"/>
							<outline text="alertDialog (htmltext);" created="Sun, 03 Sep 2023 14:40:30 GMT"/>
							<outline text="if (callback !== undefined) {" created="Fri, 01 Sep 2023 18:36:23 GMT">
								<outline text="callback ();" created="Fri, 01 Sep 2023 18:36:33 GMT"/>
								<outline text="}" created="Fri, 01 Sep 2023 18:36:30 GMT"/>
								</outline>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Sun, 03 Sep 2023 14:37:39 GMT"/>
					</outline>
				<outline text="function userIsSignedIn () {" created="Wed, 23 Aug 2023 12:35:03 GMT">
					<outline text="return (myWordpress.userIsSignedIn ());" created="Sat, 06 Apr 2024 21:00:52 GMT"/>
					<outline text="" isComment="true" created="Sat, 06 Apr 2024 21:00:52 GMT"/>
					<outline text="" isComment="true" created="Sat, 06 Apr 2024 21:00:52 GMT"/>
					<outline text="return (wordpressMemory.accessToken !== undefined);" isComment="true" created="Wed, 23 Aug 2023 12:35:14 GMT"/>
					<outline text="}" created="Wed, 23 Aug 2023 12:35:12 GMT"/>
					</outline>
				<outline text="function updateForLogin (flConnected=userIsSignedIn ()) {">
					<outline text="var idActive, idOther;" created="Mon, 16 May 2022 14:54:58 GMT"/>
					<outline text="if (flConnected) {" created="Mon, 16 May 2022 14:50:50 GMT">
						<outline text="idActive = &quot;#idSignedOn&quot;;" created="Mon, 16 May 2022 14:54:04 GMT"/>
						<outline text="idOther = &quot;#idSignedOff&quot;;" created="Mon, 16 May 2022 14:54:04 GMT"/>
						<outline text="}" created="Mon, 16 May 2022 14:50:55 GMT"/>
						</outline>
					<outline text="else {" created="Mon, 16 May 2022 14:50:55 GMT">
						<outline text="idActive = &quot;#idSignedOff&quot;;" created="Mon, 16 May 2022 14:54:04 GMT"/>
						<outline text="idOther = &quot;#idSignedOn&quot;;" created="Mon, 16 May 2022 14:54:04 GMT"/>
						<outline text="}" created="Mon, 16 May 2022 14:50:57 GMT"/>
						</outline>
					<outline text="if ($(idActive).css (&quot;display&quot;) != &quot;block&quot;) {" created="Mon, 16 May 2022 14:56:00 GMT">
						<outline text="$(idActive).css (&quot;display&quot;, &quot;block&quot;)" created="Mon, 16 May 2022 14:50:50 GMT"/>
						<outline text="}" created="Mon, 16 May 2022 14:56:14 GMT"/>
						</outline>
					<outline text="if ($(idOther).css (&quot;display&quot;) != &quot;none&quot;) {" created="Mon, 16 May 2022 14:56:00 GMT">
						<outline text="$(idOther).css (&quot;display&quot;, &quot;none&quot;)" created="Mon, 16 May 2022 14:50:50 GMT"/>
						<outline text="}" created="Mon, 16 May 2022 14:56:14 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everyMinute () {" created="Fri, 12 Apr 2024 15:44:50 GMT">
					<outline text="appPrefs.ctMinutesRunning++;" created="Fri, 12 Apr 2024 15:45:05 GMT"/>
					<outline text="appPrefs.whenLastMinute = new Date ();" created="Fri, 12 Apr 2024 15:45:05 GMT"/>
					<outline text="appPrefs.currentSlogan = getRandomSnarkySlogan ();" created="Fri, 12 Apr 2024 16:02:30 GMT"/>
					<outline text="prefsChanged ();" created="Fri, 12 Apr 2024 15:45:32 GMT"/>
					<outline text="console.log (&quot;everyMinute: &quot; + appPrefs.ctMinutesRunning);" created="Fri, 12 Apr 2024 15:53:02 GMT"/>
					<outline text="}" created="Fri, 12 Apr 2024 15:44:55 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Mon, 28 Aug 2023 15:18:03 GMT">
					<outline text="updateForLogin ();" created="Mon, 28 Aug 2023 15:18:10 GMT"/>
					<outline text="if (flPrefsChanged) { //4/12/24 by DW" created="Sat, 30 Mar 2024 18:04:32 GMT">
						<outline text="flPrefsChanged = false;" created="Fri, 29 Mar 2024 13:38:14 GMT"/>
						<outline text="savePrefs ();" created="Fri, 29 Mar 2024 13:38:07 GMT"/>
						<outline text="}" created="Sat, 30 Mar 2024 18:04:36 GMT"/>
						</outline>
					<outline text="}" created="Thu, 31 Aug 2023 15:09:11 GMT"/>
					</outline>
				<outline text="function startup () {" created="Tue, 22 Aug 2023 22:21:34 GMT">
					<outline text="console.log (&quot;startup&quot;);" created="Tue, 22 Aug 2023 22:22:11 GMT"/>
					<outline text="const wpOptions = {" created="Sun, 07 Apr 2024 14:25:01 GMT">
						<outline text="serverAddress: myServerAddress" created="Sat, 06 Apr 2024 20:55:09 GMT"/>
						<outline text="}" created="Sun, 07 Apr 2024 14:25:07 GMT"/>
						</outline>
					<outline text="myWordpress = new wordpress (wpOptions);" created="Sun, 07 Apr 2024 14:37:55 GMT"/>
					<outline text="myWordpress.startup (function (err) {" created="Sat, 06 Apr 2024 20:54:37 GMT">
						<outline text="if (err) {" created="Sun, 07 Apr 2024 14:26:23 GMT">
							<outline text="alertDialog (&quot;Can't run the app because there was an error starting up.&quot;);" created="Sun, 07 Apr 2024 14:26:27 GMT"/>
							<outline text="}" created="Sun, 07 Apr 2024 14:26:42 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 07 Apr 2024 14:26:43 GMT">
							<outline text="updateForLogin (); "/>
							<outline text="if (userIsSignedIn ()) {" created="Wed, 03 Jan 2024 16:04:21 GMT">
								<outline text="readPrefs (function () { //4/12/24 by DW" created="Fri, 12 Apr 2024 15:42:02 GMT">
									<outline text="viewSitelist ();" created="Mon, 28 Aug 2023 15:22:58 GMT"/>
									<outline text="activateToolTips ();"/>
									<outline text="self.setInterval (everySecond, 1000); "/>
									<outline text="runEveryMinute (everyMinute);" created="Wed, 05 May 2021 02:42:28 GMT"/>
									<outline text="});" created="Fri, 12 Apr 2024 15:42:03 GMT"/>
									</outline>
								<outline text="}" created="Wed, 03 Jan 2024 16:04:25 GMT"/>
								</outline>
							<outline text="}" created="Sun, 07 Apr 2024 14:26:45 GMT"/>
							</outline>
						<outline text="});" created="Sun, 07 Apr 2024 14:25:24 GMT"/>
						</outline>
					<outline text="" created="Mon, 28 Aug 2023 15:18:37 GMT"/>
					<outline text="}" created="Tue, 22 Aug 2023 22:21:40 GMT"/>
					</outline>
				</outline>
			<outline text="client/index.html" created="Tue, 22 Aug 2023 22:01:38 GMT">
				<outline text="&lt;html&gt;" created="Tue, 22 Aug 2023 22:01:47 GMT">
					<outline text="&lt;head&gt;" created="Tue, 22 Aug 2023 22:05:38 GMT">
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;%basicoutliner%&gt;" isComment="true" created="Wed, 30 Aug 2023 16:34:27 GMT"/>
						<outline text="&lt;%basicMediumEditor%&gt;" isComment="true" created="Wed, 30 Aug 2023 16:34:27 GMT"/>
						<outline text="&lt;script src=&quot;api2.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot;&gt;"/>
						<outline text="&lt;/head&gt;" created="Tue, 22 Aug 2023 22:05:45 GMT"/>
						</outline>
					<outline text="&lt;body&gt;" created="Tue, 22 Aug 2023 22:01:56 GMT">
						<outline text="&lt;div class=&quot;divMenubar&quot; id=&quot;idMenubar&quot;&gt;" created="Thu, 28 Mar 2013 21:39:05 GMT" pgfnum="21615">
							<outline text="&lt;div class=&quot;topbar-wrapper&quot; style=&quot;z-index: 5;&quot;&gt;">
								<outline text="&lt;div class=&quot;navbar navbar-fixed-top&quot; data-dropdown=&quot;dropdown&quot;&gt;">
									<outline text="&lt;div class=&quot;navbar-inner&quot;&gt;">
										<outline text="&lt;div class=&quot;container&quot;&gt;">
											<outline text="&lt;a class=&quot;brand&quot; href=&quot;/&quot; title=&quot;This is a list of your WordPress.com sites.&quot;&gt;&lt;span id=&quot;idMenuProductName&quot;&gt;Your site list&lt;/span&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;nav&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idMainMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Menu&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;viewUserInfo ();&quot;&gt;View user info&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;reloadSitelist ();&quot;&gt;Reload site list&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;logOffWordpress ();&quot;&gt;Log off WordPress.com&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 28 Mar 2013 21:39:17 GMT" pgfnum="21616"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;" created="Tue, 22 Aug 2023 22:04:59 GMT">
							<outline text="&lt;div class=&quot;divSignedOn&quot; id=&quot;idSignedOn&quot; style=&quot;display: none;&quot;&gt;" created="Mon, 16 May 2022 14:35:36 GMT">
								<outline text="&lt;div class=&quot;divSitelistContainer&quot;&gt;" created="Mon, 14 Mar 2022 16:22:35 GMT">
									<outline text="&lt;/div&gt;" created="Mon, 14 Mar 2022 16:22:41 GMT"/>
									</outline>
								<outline text="&lt;div class=&quot;divLoggedInMessage&quot;&gt;" created="Wed, 23 Aug 2023 12:36:50 GMT">
									<outline text="&lt;center&gt;" created="Tue, 22 Aug 2023 22:06:48 GMT">
										<outline text="&lt;p&gt;You are now logged on to wordpress.com.&lt;/p&gt;" created="Wed, 23 Aug 2023 12:42:39 GMT"/>
										<outline text="&lt;p&gt;Click &lt;a onclick=&quot;logOffWordpress ()&quot; style=&quot;cursor: pointer&quot;&gt;here&lt;/a&gt; to log off wordpress.com.&lt;/p&gt;" created="Wed, 23 Aug 2023 12:37:06 GMT"/>
										<outline text="&lt;/center&gt;" created="Tue, 22 Aug 2023 22:06:50 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Wed, 23 Aug 2023 12:37:10 GMT"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Mon, 16 May 2022 14:36:01 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divSignedOff&quot; id=&quot;idSignedOff&quot; style=&quot;display: none;&quot;&gt;" created="Mon, 16 May 2022 14:35:36 GMT">
								<outline text="" created="Sat, 02 Sep 2023 16:30:51 GMT"/>
								<outline text="&lt;p&gt;Click the button to log on to WordPress.com.&lt;/p&gt;" created="Sat, 02 Sep 2023 16:30:52 GMT"/>
								<outline text="&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;//s0.wp.com/i/wpcc-button.png&quot; width=&quot;231&quot; onclick=&quot;myWordpress.connectWithWordpress ()&quot;&gt;&lt;/p&gt;"/>
								<outline text="" created="Sat, 02 Sep 2023 16:30:52 GMT"/>
								<outline text="&lt;div class=&quot;divLogonButton&quot;&gt;" created="Wed, 23 Aug 2023 12:29:57 GMT">
									<outline text="&lt;center&gt;" created="Tue, 22 Aug 2023 22:06:48 GMT">
										<outline text="&lt;img alt=&quot;&quot; src=&quot;//s0.wp.com/i/wpcc-button.png&quot; width=&quot;231&quot; scale=&quot;0&quot; onclick=&quot;connectWithWordpress ()&quot;&gt;"/>
										<outline text="&lt;/center&gt;" created="Tue, 22 Aug 2023 22:06:50 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Wed, 23 Aug 2023 12:30:05 GMT"/>
									</outline>
								<outline text="&lt;div class=&quot;divSignonDialog&quot;&gt;" isComment="true" created="Fri, 21 Jan 2022 22:28:21 GMT">
									<outline text="&lt;div class=&quot;divSignonDialogPrompt&quot;&gt;" created="Fri, 21 Jan 2022 22:28:21 GMT">
										<outline text="&lt;span class=&quot;spSignonDialogPromptText&quot;&gt;" created="Fri, 21 Jan 2022 22:51:46 GMT">
											<outline text="&lt;span class=&quot;spMembershipClosed&quot;&gt;Sorry! Membership is closed.&lt;/span&gt;" created="Fri, 21 Jan 2022 22:28:34 GMT"/>
											<outline text="&lt;span class=&quot;spMembershipOpen&quot;&gt;Welcome to FeedLand!&lt;/span&gt;" created="Fri, 21 Jan 2022 22:28:34 GMT"/>
											<outline text="&lt;span class=&quot;spMembershipOpen&quot;&gt;Please sign on to enter FeedLand.&lt;/span&gt;" isComment="true" created="Fri, 21 Jan 2022 22:28:34 GMT"/>
											<outline text="&lt;/span&gt;" created="Fri, 21 Jan 2022 22:51:52 GMT"/>
											</outline>
										<outline text="&lt;/div&gt;" created="Fri, 21 Jan 2022 22:28:32 GMT"/>
										</outline>
									<outline text="&lt;div class=&quot;divSignonExplanation&quot;&gt;" created="Fri, 21 Jan 2022 22:29:16 GMT">
										<outline text="&lt;span class=&quot;spSignonExplanationText&quot;&gt;" created="Sat, 22 Jan 2022 15:14:53 GMT">
											<outline text="&lt;span class=&quot;spMembershipClosed&quot;&gt;In order to provide good service to current users we can't accept new members at this time. Hopefully this is just a temporary situation. &lt;/span&gt;" created="Mon, 12 Dec 2022 15:08:04 GMT"/>
											<outline text="&lt;span class=&quot;spMembershipOpen&quot;&gt;FeedLand is a place to share and discover feeds. &lt;i&gt;Sign up&lt;/i&gt; to create a new account, or &lt;i&gt;Sign on&lt;/i&gt; to access a previously created account.&lt;/span&gt;" created="Mon, 12 Dec 2022 15:10:37 GMT"/>
											<outline text="" isComment="true" created="Mon, 12 Dec 2022 15:08:05 GMT"/>
											<outline text="FeedLand is a place to share and discover feeds. " isComment="true" created="Thu, 21 Jul 2022 15:16:39 GMT"/>
											<outline text="We use Twitter to &lt;a href=&quot;http://scripting.com/2022/06/08/144243.html?title=whatIsIdentity&quot; target=&quot;_blank&quot;&gt;identify&lt;/a&gt; each user. " isComment="true" created="Sat, 09 Jul 2022 14:26:10 GMT"/>
											<outline text="Sign on here to access the community of feeds and readers. " isComment="true" created="Sat, 09 Jul 2022 14:24:13 GMT"/>
											<outline text="" isComment="true" created="Sat, 09 Jul 2022 14:25:12 GMT"/>
											<outline text="It's a magic place where everyone is happy all day. We all pitch in and report bugs carefully with exactly the right information. We add feeds that make everyone smarter. We are happy, fun-loving, smart and generous people! :-)" isComment="true" created="Mon, 16 May 2022 15:05:12 GMT"/>
											<outline text="" isComment="true" created="Sat, 09 Jul 2022 14:25:02 GMT"/>
											<outline text="Sign on to record your tweets in OPML, in a public place where all kinds of apps can access them, including outliners, readers, renderers and databases. " isComment="true"/>
											<outline text="We will periodically update your public outline, that can be shared, with items you post on Twitter. You can use your tweets in your writing, to manage your work, or update others. Twitter becomes your mobile &quot;Tools For Thought&quot; notepad. " isComment="true" created="Fri, 21 Jan 2022 22:29:52 GMT"/>
											<outline text="&lt;/span&gt;" created="Sat, 22 Jan 2022 15:15:02 GMT"/>
											</outline>
										<outline text="&lt;/div&gt;" created="Fri, 21 Jan 2022 22:29:26 GMT"/>
										</outline>
									<outline text="&lt;div class=&quot;divSignonButtons&quot;&gt;" created="Fri, 21 Jan 2022 22:29:38 GMT">
										<outline text="&lt;div class=&quot;divSignonButton&quot;&gt;" created="Sat, 22 Jan 2022 15:28:05 GMT">
											<outline text="&lt;span class=&quot;spMembershipOpen&quot;&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161">
												<outline text="&lt;span class=&quot;spTwitterForIdentity&quot;&gt;" created="Tue, 10 Jan 2023 17:08:49 GMT">
													<outline text="&lt;button id=&quot;idNotLoggedOnTwitterButton&quot;  class=&quot;btn&quot; type=&quot;button&quot; onclick=&quot;signOnButtonClick ();&quot;&gt;" created="Tue, 10 Jan 2023 16:55:03 GMT">
														<outline text="&lt;i class=&quot;fab fa-twitter&quot; style=&quot;color: #4099FF; font-weight: bold;&quot;&gt;&lt;/i&gt;&amp;nbsp;Sign on Twitter" created="Sat, 22 Jan 2022 15:39:28 GMT"/>
														<outline text="&lt;/button&gt;" created="Sat, 22 Jan 2022 15:39:45 GMT"/>
														</outline>
													<outline text="&lt;/span&gt;" created="Tue, 10 Jan 2023 17:09:04 GMT"/>
													</outline>
												<outline text="&lt;span class=&quot;spNotTwitterForIdentity&quot;&gt;" created="Tue, 10 Jan 2023 17:08:49 GMT">
													<outline text="&lt;table&gt;" created="Tue, 10 Jan 2023 17:22:34 GMT">
														<outline text="&lt;tr&gt;" created="Tue, 10 Jan 2023 17:22:37 GMT">
															<outline text="&lt;td style=&quot;padding-left: 5px; padding-right: 5px;&quot;&gt;" created="Tue, 10 Jan 2023 17:22:39 GMT">
																<outline text="&lt;span class=&quot;spMembershipOpen&quot;&gt;&lt;button  class=&quot;btn&quot; onclick=&quot;signUpCommand ();&quot;&gt;Sign up&lt;/button&gt;&lt;/span&gt;" created="Tue, 10 Jan 2023 17:09:30 GMT"/>
																<outline text="&lt;/td&gt;" created="Tue, 10 Jan 2023 17:22:41 GMT"/>
																</outline>
															<outline text="&lt;td style=&quot;padding-left: 5px; padding-right: 5px;&quot;&gt;" created="Tue, 10 Jan 2023 17:22:39 GMT">
																<outline text="&lt;button  class=&quot;btn btn-primary&quot; onclick=&quot;signOnCommand ();&quot;&gt;Sign on&lt;/button&gt;" created="Tue, 10 Jan 2023 17:09:30 GMT"/>
																<outline text="&lt;/td&gt;" created="Tue, 10 Jan 2023 17:22:41 GMT"/>
																</outline>
															<outline text="&lt;/tr&gt;" created="Tue, 10 Jan 2023 17:22:44 GMT"/>
															</outline>
														<outline text="&lt;/table&gt;" created="Tue, 10 Jan 2023 17:22:48 GMT"/>
														</outline>
													<outline text="&lt;/span&gt;" created="Tue, 10 Jan 2023 17:09:27 GMT"/>
													</outline>
												<outline text="&lt;/span&gt;" created="Tue, 10 Jan 2023 16:55:14 GMT"/>
												</outline>
											<outline text="&lt;/div&gt;" created="Sat, 22 Jan 2022 15:28:20 GMT"/>
											</outline>
										<outline text="&lt;/div&gt;" created="Fri, 21 Jan 2022 22:29:50 GMT"/>
										</outline>
									<outline text="&lt;div class=&quot;divSignonButtons&quot;&gt;" isComment="true" created="Fri, 21 Jan 2022 22:29:38 GMT">
										<outline text="&lt;div class=&quot;divSignonButton&quot;&gt;" created="Sat, 22 Jan 2022 15:28:05 GMT">
											<outline text="&lt;span class=&quot;spMembershipOpen&quot;&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161">
												<outline text="&lt;button id=&quot;idNotLoggedOnTwitterButton&quot;  class=&quot;btn&quot; type=&quot;button&quot; onclick=&quot;signOnButtonClick ();&quot;&gt;" created="Tue, 10 Jan 2023 16:55:03 GMT">
													<outline text="&lt;i class=&quot;fab fa-twitter&quot; style=&quot;color: #4099FF; font-weight: bold;&quot;&gt;&lt;/i&gt;&amp;nbsp;Sign on Twitter" created="Sat, 22 Jan 2022 15:39:28 GMT"/>
													<outline text="&lt;/button&gt;" created="Sat, 22 Jan 2022 15:39:45 GMT"/>
													</outline>
												<outline text="&lt;/span&gt;" created="Tue, 10 Jan 2023 16:55:14 GMT"/>
												</outline>
											<outline text="&lt;/div&gt;" created="Sat, 22 Jan 2022 15:28:20 GMT"/>
											</outline>
										<outline text="&lt;/div&gt;" created="Fri, 21 Jan 2022 22:29:50 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Fri, 21 Jan 2022 22:28:32 GMT"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Mon, 16 May 2022 14:36:01 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Tue, 22 Aug 2023 22:06:06 GMT"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;" created="Tue, 22 Aug 2023 22:01:59 GMT"/>
						</outline>
					<outline text="&lt;/html&gt;" created="Tue, 22 Aug 2023 22:01:51 GMT"/>
					</outline>
				</outline>
			<outline text="docs/storage.md" created="Fri, 12 Apr 2024 16:23:19 GMT">
				<outline text="# Storage" created="Fri, 12 Apr 2024 16:23:50 GMT">
					<outline text="Every wpidentity installation has the option of providing user-level storage." created="Sun, 24 Mar 2024 14:55:17 GMT"/>
					</outline>
				<outline text="#### How to" created="Sun, 24 Mar 2024 14:56:06 GMT">
					<outline text="1. Provide an object named &lt;i&gt;database&lt;/i&gt; in config.json. There's an example in &lt;a href=&quot;https://github.com/scripting/wpIdentity/blob/main/config.json&quot;&gt;config.json&lt;/a&gt; in this repo." created="Sun, 24 Mar 2024 14:56:11 GMT"/>
					<outline text="2. In your MySQL database, create a table called wpstorage with this command. " created="Sun, 24 Mar 2024 14:56:42 GMT">
						<outline text="```SQL" created="Sun, 24 Mar 2024 14:57:44 GMT"/>
						<outline text="&lt;%includeExample (&quot;createTable&quot;)%&gt;"/>
						<outline text="```" created="Sun, 24 Mar 2024 14:58:16 GMT"/>
						</outline>
					<outline text="3. If you put this table in its own database you should create the database with:" created="Sun, 24 Mar 2024 14:29:16 GMT">
						<outline text="`create database wpidentity character set utf8mb4 collate utf8mb4_unicode_ci;`"/>
						</outline>
					</outline>
				<outline text="#### How it works" created="Fri, 12 Apr 2024 16:35:52 GMT">
					<outline text="We use WordPress for identity." created="Fri, 12 Apr 2024 16:36:22 GMT"/>
					<outline text="Each user has their own set of files. For example, you could keep a prefs.json file for each user, or a bookmarks.opml file. " created="Fri, 12 Apr 2024 16:35:58 GMT"/>
					<outline text="A file can be attached to a specific WP post, identified by site and post id's. This can be used for per-post prefs, or using a different kind of editor to write a post. It basically allows you to store data alongside a post. It could also be that the post is sort of a home page for a data set that's attached to the page. It's basically viewing WordPress as a database that has publishing built-in. " created="Fri, 12 Apr 2024 16:36:23 GMT"/>
					<outline text="Files can be public or private. At this point there's no functionality for public files." created="Fri, 12 Apr 2024 16:37:47 GMT"/>
					<outline text="The relpath field is meant to be a relative path to the &quot;home&quot; of the user's storage, but it's really just a string. You can use slashes to create structure, so for example there could be prefs files for different apps, with the first part of the path being the name of the app. The demo app stores its prefs file in demo/prefs.json. " created="Fri, 12 Apr 2024 16:42:11 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Tue, 22 Aug 2023 21:40:09 GMT">
				<outline text="# wpIdentity">
					<outline text="A &lt;a href=&quot;https://www.npmjs.com/package/wpidentity&quot;&gt;package&lt;/a&gt; that implements &lt;a href=&quot;https://developer.wordpress.com/docs/wpcc/&quot;&gt;OAuth identity&lt;/a&gt; and a simple verb set with wordpress.com for Node.js apps."/>
					</outline>
				<outline text="### It works" created="Wed, 23 Aug 2023 12:53:46 GMT">
					<outline text="You can try it out &lt;a href=&quot;http://scripting.com/code/wpidentity/client/&quot;&gt;here&lt;/a&gt;." created="Wed, 23 Aug 2023 12:53:51 GMT"/>
					<outline text="You can log on, and see a list of your sites, when each was created and modified. " created="Wed, 23 Aug 2023 12:53:55 GMT"/>
					<outline text="Here's a &lt;a href=&quot;https://imgs.scripting.com/2023/09/05/wpsitelist.png&quot;&gt;screen shot&lt;/a&gt;. " created="Tue, 05 Sep 2023 15:31:36 GMT"/>
					</outline>
				<outline text="### How to set up a server" created="Tue, 05 Sep 2023 15:34:03 GMT">
					<outline text="1. Download the folder." created="Tue, 05 Sep 2023 15:34:12 GMT"/>
					<outline text="2. Throw away everything but the shell folder. In the shell folder you can throw away source.opml." created="Tue, 05 Sep 2023 15:34:20 GMT"/>
					<outline text="3. Move the shell folder to your server." created="Tue, 05 Sep 2023 15:34:28 GMT"/>
					<outline text="4. Edit the &lt;a href=&quot;https://github.com/scripting/wpIdentity/blob/main/shell/config.json&quot;&gt;config.json&lt;/a&gt; file with the credentials you got from WordPress.com. " created="Tue, 05 Sep 2023 15:38:36 GMT"/>
					<outline text="4. npm install" created="Tue, 05 Sep 2023 15:34:35 GMT"/>
					<outline text="5. node wpidentity.js" created="Tue, 05 Sep 2023 15:34:40 GMT"/>
					</outline>
				<outline text="### Check out worknotes" created="Tue, 29 Aug 2023 17:45:48 GMT">
					<outline text="I've been narrating my work in the &lt;a href=&quot;https://github.com/scripting/wordpressIdentity/blob/main/worknotes.md&quot;&gt;worknotes&lt;/a&gt;. " created="Tue, 29 Aug 2023 17:45:53 GMT"/>
					</outline>
				<outline text="### Automattic docs" created="Wed, 30 Aug 2023 13:53:31 GMT">
					<outline text="These docs proved useful at different points in this project." created="Wed, 30 Aug 2023 13:53:36 GMT">
						<outline text="* https://developer.wordpress.com/apps/" created="Sun, 07 Apr 2024 13:44:34 GMT"/>
						<outline text="* https://developer.wordpress.com/docs/oauth2/" created="Sun, 27 Aug 2023 14:15:56 GMT"/>
						<outline text="* https://github.com/Automattic/node-wpcom-oauth" created="Wed, 30 Aug 2023 13:53:48 GMT"/>
						<outline text="* https://github.com/Automattic/wp-calypso/tree/trunk/packages/wpcom.js" created="Sun, 27 Aug 2023 14:15:36 GMT"/>
						<outline text="* https://github.com/Automattic/wp-calypso/tree/trunk/packages/wpcom.js/docs" created="Sun, 27 Aug 2023 15:41:19 GMT"/>
						<outline text="* https://github.com/Automattic/wpcom-connect-examples" created="Sat, 26 Aug 2023 16:18:22 GMT"/>
						<outline text="* https://github.com/Automattic/wp-calypso"/>
						</outline>
					</outline>
				<outline text="### Other pointers" created="Wed, 30 Aug 2023 13:58:06 GMT">
					<outline text="I am using this site for testing. https://scripting4.wordpress.com/" created="Wed, 30 Aug 2023 13:58:11 GMT"/>
					</outline>
				</outline>
			<outline text="client/api.js" isComment="true" created="Sun, 03 Sep 2023 15:11:56 GMT">
				<outline text="//9/4/23 by DW -- This code can be used in client apps to talk to a server. " created="Mon, 04 Sep 2023 13:24:40 GMT"/>
				<outline text="" created="Mon, 04 Sep 2023 13:25:13 GMT"/>
				<outline text="function base64UrlEncode (data) {">
					<outline text="let base64 = btoa (unescape (encodeURIComponent (data)));"/>
					<outline text="return base64.replace ('+', '-').replace ('/', '_').replace (/=+$/, '');"/>
					<outline text="}"/>
					</outline>
				<outline text="function base64UrlDecode (theData) {" created="Sat, 26 Aug 2023 17:46:35 GMT">
					<outline text="theData = theData.replace ('-', '+').replace ('_', '/');"/>
					<outline text="while (theData.length % 4) {">
						<outline text="theData += '=';"/>
						<outline text="}"/>
						</outline>
					<outline text="return (decodeURIComponent (escape (atob (theData))));"/>
					<outline text="}" created="Sat, 26 Aug 2023 17:46:55 GMT"/>
					</outline>
				<outline text="function httpRequest (url, timeout, headers, callback) { ">
					<outline text="Changes" isComment="true">
						<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
							<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
							</outline>
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
							<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
							<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 28 Mar 2024 15:27:03 GMT"/>
				<outline text="function wpServerPost (path, params, flAuthenticated, filedata, callback, urlServer=getServerAddress ()) { //3/24/24 by DW">
					<outline text="Changes" isComment="true">
						<outline text="11/1/23; 9:55:40 AM by DW" created="Wed, 01 Nov 2023 13:55:40 GMT">
							<outline text="Don't add oauth params (for twitter) if they are not defined. " created="Wed, 01 Nov 2023 13:55:40 GMT"/>
							</outline>
						<outline text="4/22/23; 1:24:18 PM by DW" created="Sat, 22 Apr 2023 17:24:17 GMT">
							<outline text="Change twBuildParamList call to buildParamList." created="Sat, 22 Apr 2023 17:24:19 GMT"/>
							</outline>
						<outline text="8/2/21; 2:19:56 PM by DW" created="Mon, 02 Aug 2021 18:19:55 GMT">
							<outline text="If filedata is not a PlainObject or a string, convert it to a string." created="Mon, 02 Aug 2021 18:19:58 GMT"/>
							</outline>
						<outline text="2/25/21; 1:01:58 PM by DW">
							<outline text="A special form of servercall for posts."/>
							</outline>
						</outline>
					<outline text="console.log (&quot;wpServerPost&quot;);" isComment="true" created="Sun, 24 Mar 2024 16:23:26 GMT"/>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (!$.isPlainObject (filedata) &amp;&amp; (typeof (filedata) != &quot;string&quot;)) { //8/2/21 by DW" created="Mon, 02 Aug 2021 18:36:54 GMT">
						<outline text="filedata = filedata.toString ();" created="Mon, 02 Aug 2021 18:38:49 GMT"/>
						<outline text="}" created="Mon, 02 Aug 2021 18:38:43 GMT"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) {">
						<outline text="params.token = base64UrlEncode (wordpressMemory.accessToken);" created="Sat, 26 Aug 2023 18:00:08 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
						<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
							<outline text="console.log (&quot;wpServerPost: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
							</outline>
						<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
							<outline text="var err = {">
								<outline text="code: status.status,"/>
								<outline text="message: JSON.parse (status.responseText).message"/>
								<outline text="};"/>
								</outline>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (err);"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
							</outline>
						<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
						</outline>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {" isComment="true">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); "/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function wpServerCall (path, params, flAuthenticated, callback, urlServer=getServerAddress ()) {">
					<outline text="Changes" isComment="true">
						<outline text="4/22/23; 1:24:18 PM by DW" created="Sat, 22 Apr 2023 17:24:17 GMT">
							<outline text="Change twBuildParamList call to buildParamList." created="Sat, 22 Apr 2023 17:24:19 GMT"/>
							</outline>
						<outline text="12/23/22; 10:30:22 PM by DW" created="Sat, 24 Dec 2022 03:30:22 GMT">
							<outline text="Support email params. Don't send oauth token if it's not defined." created="Sat, 24 Dec 2022 03:30:22 GMT"/>
							</outline>
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="console.log (&quot;wpServerCall&quot;);" isComment="true" created="Sun, 24 Mar 2024 16:23:26 GMT"/>
					<outline text="const whenstart = new Date ();"/>
					<outline text="var headers = undefined;" created="Sat, 26 Aug 2023 17:28:22 GMT"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) {">
						<outline text="params.token = base64UrlEncode (wordpressMemory.accessToken);" created="Sat, 26 Aug 2023 18:00:08 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="console.log (&quot;wpServerCall: url == &quot; + url);" isComment="true" created="Mon, 30 Jan 2023 17:35:43 GMT"/>
					<outline text="httpRequest (url, undefined, headers, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;wpServerCall: url == &quot; + url + &quot;, err.message == &quot; + err.message);" isComment="true"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;wpServerCall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getUserInfo (callback) { //8/26/23 by DW" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="wpServerCall (&quot;wordpressgetuserinfo&quot;, undefined, true, callback);"/>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function getUserSites (callback) { //8/26/23 by DW" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="wpServerCall (&quot;wordpressgetusersites&quot;, undefined, true, callback);"/>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function getSitePosts (idsite, callback) { //8/28/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="wpServerCall (&quot;wordpressgetsiteposts&quot;, {idsite}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getSiteUsers (idsite, callback) { //8/28/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="wpServerCall (&quot;wordpressgetsiteusers&quot;, {idsite}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getSiteInfo (idsite, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="wpServerCall (&quot;wordpressgetsiteinfo&quot;, {idsite}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getSiteMedialist (idsite, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="wpServerCall (&quot;wordpressgetsitemedialist&quot;, {idsite}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getPost (idsite, idpost, callback) { //8/28/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="wpServerCall (&quot;wordpressgetpost&quot;, {idsite, idpost}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function addPost (idsite, thepost, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="const jsontext = JSON.stringify (thepost);" created="Tue, 29 Aug 2023 16:54:12 GMT"/>
					<outline text="wpServerCall (&quot;wordpressaddpost&quot;, {idsite, jsontext}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function updatePost (idsite, idpost, thepost, callback) { //8/29/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="const jsontext = JSON.stringify (thepost);" created="Tue, 29 Aug 2023 16:54:12 GMT"/>
					<outline text="wpServerCall (&quot;wordpressupdatepost&quot;, {idsite, idpost, jsontext}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function deletePost (idsite, idpost, callback) { //9/4/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="wpServerCall (&quot;wordpressdeletepost&quot;, {idsite, idpost}, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="function getSubscriptions (callback) { //9/5/23 by DW" created="Mon, 28 Aug 2023 22:53:15 GMT">
					<outline text="wpServerCall (&quot;wordpressgetsubscriptions&quot;, undefined, true, callback);"/>
					<outline text="}" created="Mon, 28 Aug 2023 22:53:28 GMT"/>
					</outline>
				<outline text="" created="Sun, 24 Mar 2024 16:09:11 GMT"/>
				<outline text="function writeUserDataFile (relpath, filedata, type, flPrivate, callback, options) { //3/24/24 by DW" created="Sun, 24 Mar 2024 16:09:12 GMT">
					<outline text="Changes" isComment="true" created="Thu, 28 Mar 2024 15:36:55 GMT">
						<outline text="4/5/24; 12:19:47 PM by DW" created="Fri, 05 Apr 2024 16:19:47 GMT">
							<outline text="New optional param, options, comes after the callback. Sorry. It's a late addition." created="Fri, 05 Apr 2024 16:19:47 GMT"/>
							</outline>
						<outline text="3/28/24; 11:36:57 AM by DW" created="Thu, 28 Mar 2024 15:36:56 GMT">
							<outline text="I couldn't get anything back from the server via POST, so I'm trying GET. " created="Thu, 28 Mar 2024 15:36:58 GMT"/>
							<outline text="It worked. I've been over it on both ends, can't see any difference between it and daveappserver which is what we use in feedland and drummer. " created="Thu, 28 Mar 2024 15:42:21 GMT"/>
							<outline text="So I'm just going to continue with calling GET, and trust that the next person to pass this way will figure out what I did wrong. ;-)" created="Thu, 28 Mar 2024 15:42:46 GMT"/>
							</outline>
						</outline>
					<outline text="console.log (&quot;writeUserDataFile&quot;);" isComment="true" created="Sun, 24 Mar 2024 16:19:41 GMT"/>
					<outline text="const whenstart = new Date ();" created="Sun, 20 Aug 2023 18:32:23 GMT"/>
					<outline text="var params = {" created="Fri, 23 Dec 2022 20:01:02 GMT">
						<outline text="relpath, type, filedata" created="Fri, 23 Dec 2022 20:12:44 GMT"/>
						<outline text="}" created="Fri, 23 Dec 2022 20:12:46 GMT"/>
						</outline>
					<outline text="if (flPrivate) {" created="Fri, 23 Dec 2022 20:03:13 GMT">
						<outline text="params.flprivate = true;" created="Fri, 23 Dec 2022 20:03:33 GMT"/>
						<outline text="}" created="Fri, 23 Dec 2022 20:03:16 GMT"/>
						</outline>
					<outline text="" created="Fri, 05 Apr 2024 16:20:24 GMT"/>
					<outline text="if (options !== undefined) { //4/5/24 by DW" created="Fri, 05 Apr 2024 16:20:24 GMT">
						<outline text="for (var x in options) {" created="Fri, 05 Apr 2024 16:21:05 GMT">
							<outline text="if (options [x] !== undefined) {" created="Fri, 05 Apr 2024 16:21:29 GMT">
								<outline text="params [x] = options [x];" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
								<outline text="}" created="Fri, 05 Apr 2024 16:21:35 GMT"/>
								</outline>
							<outline text="}" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
							</outline>
						<outline text="}" created="Fri, 05 Apr 2024 16:20:31 GMT"/>
						</outline>
					<outline text="" created="Fri, 05 Apr 2024 16:20:24 GMT"/>
					<outline text="wpServerCall (&quot;writewholefile&quot;, params, true, callback);"/>
					<outline text="wpServerPost (&quot;writewholefile&quot;, params, true, filedata, function (err, data) {" isComment="true">
						<outline text="if (!err) {" created="Sun, 20 Aug 2023 18:32:07 GMT">
							<outline text="console.log (&quot;writeWholeFile: relpath == &quot; + relpath + &quot;, &quot; + secondsSince (whenstart) + &quot; secs.&quot;); //8/20/23 by DW" created="Sun, 20 Aug 2023 18:28:31 GMT"/>
							<outline text="}" created="Sun, 20 Aug 2023 18:32:14 GMT"/>
							</outline>
						<outline text="if (callback !== undefined) {" created="Sun, 20 Aug 2023 18:31:35 GMT">
							<outline text="callback (err, data);" created="Sun, 20 Aug 2023 18:31:52 GMT"/>
							<outline text="}" created="Sun, 20 Aug 2023 18:31:47 GMT"/>
							</outline>
						<outline text="});" created="Sun, 20 Aug 2023 18:31:27 GMT"/>
						</outline>
					<outline text="}" created="Sun, 24 Mar 2024 16:09:20 GMT"/>
					</outline>
				<outline text="function readUserDataFile (relpath, flPrivate, callback, options) { //3/25/24 by DW" created="Mon, 25 Mar 2024 14:11:16 GMT">
					<outline text="Changes" isComment="true" created="Fri, 05 Apr 2024 16:54:27 GMT">
						<outline text="4/5/24; 12:54:30 PM by DW" created="Fri, 05 Apr 2024 16:54:29 GMT">
							<outline text="New optional param, options, comes after the callback. Sorry. It's a late addition." created="Fri, 05 Apr 2024 16:19:47 GMT"/>
							</outline>
						</outline>
					<outline text="console.log (&quot;readUserDataFile&quot;);" created="Sun, 24 Mar 2024 16:19:41 GMT"/>
					<outline text="const whenstart = new Date ();" created="Sun, 20 Aug 2023 18:32:23 GMT"/>
					<outline text="var params = {" created="Fri, 23 Dec 2022 20:01:02 GMT">
						<outline text="relpath" created="Fri, 23 Dec 2022 20:12:44 GMT"/>
						<outline text="}" created="Fri, 23 Dec 2022 20:12:46 GMT"/>
						</outline>
					<outline text="if (flPrivate) {" created="Fri, 23 Dec 2022 20:03:13 GMT">
						<outline text="params.flprivate = true;" created="Fri, 23 Dec 2022 20:03:33 GMT"/>
						<outline text="}" created="Fri, 23 Dec 2022 20:03:16 GMT"/>
						</outline>
					<outline text="if (options !== undefined) { //4/5/24 by DW" created="Fri, 05 Apr 2024 16:20:24 GMT">
						<outline text="for (var x in options) {" created="Fri, 05 Apr 2024 16:21:05 GMT">
							<outline text="if (options [x] !== undefined) {" created="Fri, 05 Apr 2024 16:21:29 GMT">
								<outline text="params [x] = options [x];" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
								<outline text="}" created="Fri, 05 Apr 2024 16:21:35 GMT"/>
								</outline>
							<outline text="}" created="Fri, 05 Apr 2024 16:21:10 GMT"/>
							</outline>
						<outline text="}" created="Fri, 05 Apr 2024 16:20:31 GMT"/>
						</outline>
					<outline text="wpServerCall (&quot;readwholefile&quot;, params, true, callback);"/>
					<outline text="}" created="Mon, 25 Mar 2024 14:11:29 GMT"/>
					</outline>
				<outline text="function deleteUserDataFile (relpath, flPrivate, callback) { //3/26/24 by DW" created="Mon, 25 Mar 2024 14:11:16 GMT">
					<outline text="console.log (&quot;deleteUserDataFile&quot;);" created="Sun, 24 Mar 2024 16:19:41 GMT"/>
					<outline text="const whenstart = new Date ();" created="Sun, 20 Aug 2023 18:32:23 GMT"/>
					<outline text="var params = {" created="Fri, 23 Dec 2022 20:01:02 GMT">
						<outline text="relpath" created="Fri, 23 Dec 2022 20:12:44 GMT"/>
						<outline text="}" created="Fri, 23 Dec 2022 20:12:46 GMT"/>
						</outline>
					<outline text="if (flPrivate) {" created="Fri, 23 Dec 2022 20:03:13 GMT">
						<outline text="params.flprivate = true;" created="Fri, 23 Dec 2022 20:03:33 GMT"/>
						<outline text="}" created="Fri, 23 Dec 2022 20:03:16 GMT"/>
						</outline>
					<outline text="wpServerCall (&quot;deletefile&quot;, params, true, callback);"/>
					<outline text="}" created="Mon, 25 Mar 2024 14:11:29 GMT"/>
					</outline>
				<outline text="" created="Mon, 25 Mar 2024 14:11:16 GMT"/>
				<outline text="function testWriteUserDataFile () {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="function nowString () {" created="Fri, 24 Feb 2023 14:22:58 GMT">
						<outline text="return (new Date ().toLocaleTimeString ());" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
						<outline text="}" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
						</outline>
					<outline text="const slogan = getRandomSnarkySlogan (), whenstart = new Date ();" created="Tue, 26 Mar 2024 00:28:22 GMT"/>
					<outline text="writeUserDataFile (&quot;slogan.txt&quot;, slogan, &quot;text/plain&quot;, true, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (nowString () + &quot; - testWriteUserDataFile: err.message == &quot; + err.message);" created="Thu, 28 Mar 2024 16:19:36 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (nowString () + &quot; - testWriteUserDataFile: &quot; + secondsSince (whenstart) + &quot; secs. data == &quot; + jsonStringify (data));" created="Thu, 28 Mar 2024 16:19:36 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testWriteUserDataFileEveryMinute () {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="runEveryMinute (testWriteUserDataFile);" created="Thu, 28 Mar 2024 16:26:06 GMT"/>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testDeleteUserDataFile () {" created="Mon, 25 Mar 2024 14:11:16 GMT">
					<outline text="deleteUserDataFile (&quot;hello.json&quot;, true, function (err, data) {" created="Mon, 25 Mar 2024 14:17:12 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (data);" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Mon, 25 Mar 2024 14:17:30 GMT"/>
						</outline>
					<outline text="}" created="Tue, 26 Mar 2024 18:10:21 GMT"/>
					</outline>
				<outline text="function testWriteUserDataFile () {" isComment="true" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="runEveryMinute (function () {" created="Tue, 26 Mar 2024 00:26:52 GMT">
						<outline text="function nowString () {" created="Fri, 24 Feb 2023 14:22:58 GMT">
							<outline text="return (new Date ().toLocaleTimeString ());" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
							<outline text="}" created="Fri, 24 Feb 2023 14:23:04 GMT"/>
							</outline>
						<outline text="const slogan = getRandomSnarkySlogan ();" created="Tue, 26 Mar 2024 00:28:22 GMT"/>
						<outline text="console.log (nowstring () + &quot;: &quot; + slogan);" created="Sun, 11 Feb 2024 21:20:56 GMT"/>
						<outline text="writeUserDataFile (&quot;slogan.txt&quot;, slogan, &quot;text/plain&quot;, true, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
							<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
								<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
								<outline text="console.log (data);" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
								<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
								</outline>
							<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
							</outline>
						<outline text="});" created="Tue, 26 Mar 2024 00:27:01 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testReadUserDataFile () {" created="Mon, 04 Sep 2023 13:25:44 GMT">
					<outline text="readUserDataFile (&quot;draft.json&quot;, true, function (err, data) {" created="Mon, 25 Mar 2024 14:17:12 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (data);" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Mon, 25 Mar 2024 14:17:30 GMT"/>
						</outline>
					<outline text="}" created="Mon, 25 Mar 2024 14:17:08 GMT"/>
					</outline>
				<outline text="function testGetUserInfo () {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getUserInfo (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetUserSites () {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getUserSites (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetSitePosts (idsite) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getSitePosts (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetSiteUsers (idsite) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getSiteUsers (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetPost (idsite, idpost) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getPost (idsite, idpost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetSiteInfo (idsite, idpost) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getSiteInfo (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetSiteMedialist (idsite, idpost) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getSiteMedialist (idsite, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testAddPost (idsite) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="function getRandomContent () {" created="Tue, 29 Aug 2023 16:51:28 GMT">
						<outline text="var theContent = &quot;&quot;;" created="Tue, 29 Aug 2023 16:52:43 GMT"/>
						<outline text="for (var i = 1; i &lt;= 10; i++) {" created="Tue, 29 Aug 2023 16:52:22 GMT">
							<outline text="theContent += getRandomSnarkySlogan () + &quot;\n&quot;;" created="Tue, 29 Aug 2023 16:52:54 GMT"/>
							<outline text="}" created="Tue, 29 Aug 2023 16:52:35 GMT"/>
							</outline>
						<outline text="return (theContent);" created="Tue, 29 Aug 2023 16:53:21 GMT"/>
						<outline text="}" created="Tue, 29 Aug 2023 16:51:42 GMT"/>
						</outline>
					<outline text="const thePost = {" created="Tue, 29 Aug 2023 16:48:40 GMT">
						<outline text="title: &quot;Some random snarky slogans&quot;," created="Tue, 29 Aug 2023 16:49:19 GMT"/>
						<outline text="content: getRandomContent ()," created="Tue, 29 Aug 2023 16:49:28 GMT"/>
						<outline text="status: &quot;publish&quot;," created="Tue, 29 Aug 2023 16:49:42 GMT"/>
						<outline text="date: new Date ().toGMTString ()," created="Tue, 29 Aug 2023 16:49:59 GMT"/>
						<outline text="format: &quot;standard&quot;," created="Tue, 29 Aug 2023 16:50:27 GMT"/>
						<outline text="categories: [&quot;Testing&quot;, &quot;Nonsense&quot;, &quot;Snark&quot;, &quot;Slogans&quot;]," created="Tue, 29 Aug 2023 16:50:37 GMT"/>
						<outline text="comment_status: &quot;open&quot;" created="Tue, 29 Aug 2023 16:51:09 GMT"/>
						<outline text="};" created="Tue, 29 Aug 2023 16:48:44 GMT"/>
						</outline>
					<outline text="addPost (idsite, thePost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testUpdatePost (idsite, idpost) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="const thePost = {" created="Tue, 29 Aug 2023 16:48:40 GMT">
						<outline text="title: &quot;So you'd like a test post?&quot;," isComment="true" created="Tue, 29 Aug 2023 16:49:19 GMT"/>
						<outline text="content: getRandomContent ()," created="Tue, 29 Aug 2023 16:49:28 GMT"/>
						<outline text="status: &quot;publish&quot;," created="Tue, 29 Aug 2023 16:49:42 GMT"/>
						<outline text="date: new Date ().toGMTString ()," isComment="true" created="Tue, 29 Aug 2023 16:49:59 GMT"/>
						<outline text="format: &quot;standard&quot;," isComment="true" created="Tue, 29 Aug 2023 16:50:27 GMT"/>
						<outline text="categories: [&quot;Testing&quot;, &quot;Nonsense&quot;]," isComment="true" created="Tue, 29 Aug 2023 16:50:37 GMT"/>
						<outline text="comment_status: &quot;open&quot;" isComment="true" created="Tue, 29 Aug 2023 16:51:09 GMT"/>
						<outline text="};" created="Tue, 29 Aug 2023 16:48:44 GMT"/>
						</outline>
					<outline text="updatePost (idsite, idpost, thePost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testDeletePost (idsite, idpost) {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="deletePost (idsite, idpost, function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetSubscriptions () {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getSubscriptions (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Tue, 22 Aug 2023 14:23:58 GMT">
				<outline text="{" created="Tue, 22 Aug 2023 14:24:01 GMT">
					<outline text="{">
						<outline text="&quot;urlServer&quot;: &quot;https://myserver.org/&quot;,"/>
						<outline text="" created="Fri, 12 Apr 2024 16:31:40 GMT"/>
						<outline text="&quot;clientId&quot;: 12345,"/>
						<outline text="&quot;clientSecret&quot;: &quot;xxx&quot;,"/>
						<outline text="&quot;urlRedirect&quot;: &quot;https://myserver.org/callbackFromWordpress&quot;,"/>
						<outline text="&quot;scope&quot;: &quot;global&quot;,"/>
						<outline text="" created="Fri, 12 Apr 2024 16:31:42 GMT"/>
						<outline text="&quot;database&quot;: {">
							<outline text="&quot;host&quot;: &quot;databaseserver.org&quot;,"/>
							<outline text="&quot;port&quot;: 12345,"/>
							<outline text="&quot;user&quot;: &quot;dbadmin&quot;,"/>
							<outline text="&quot;password&quot;: &quot;xxx&quot;,"/>
							<outline text="&quot;charset&quot;: &quot;utf8mb4&quot;,"/>
							<outline text="&quot;connectionLimit&quot;: 15,"/>
							<outline text="&quot;database&quot;: &quot;wpidentity&quot;,"/>
							<outline text="&quot;debug&quot;: false,"/>
							<outline text="&quot;flLogQueries&quot;: false,"/>
							<outline text="&quot;flQueueAllRequests&quot;: false"/>
							<outline text=" }"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Tue, 22 Aug 2023 14:28:04 GMT">
			<outline text="nodeEditorSuite.utilities.buildWpIdentity ()" created="Wed, 26 Jul 2023 16:00:18 GMT"/>
			</outline>
		</body>
	</opml>
