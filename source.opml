<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sun, 27 Aug 2023 15:16:38 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: wordpressIdentity</title>
		<dateCreated>Tue, 22 Aug 2023 14:20:51 GMT</dateCreated>
		<dateModified>Sun, 27 Aug 2023 15:16:38 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 6, 7, 12, 19, 28, 56, 66, 70, 71, 75, 88</expansionState>
		<vertScrollState>46</vertScrollState>
		<windowTop>269</windowTop>
		<windowLeft>849</windowLeft>
		<windowBottom>1258</windowBottom>
		<windowRight>2249</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/wpidentity/">
			<outline text="worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="#### 8/27/23; 10:17:33 AM by DW" created="Sat, 26 Aug 2023 22:00:21 GMT">
					<outline text="Now I &lt;i&gt;really really&lt;/i&gt; have it working. :smile: " created="Sat, 26 Aug 2023 18:18:40 GMT"/>
					<outline text="After getting getUserInfo (token) to work, I thought let's quickly test getting a list of user sites, but that didn't work because i didn't get a powerful enough token. That led me back to the authentication docs, and i don't see anything there about scopes. So now I'm back to zero, I have to find docs. I consulted ChatGPT of course. " created="Sun, 27 Aug 2023 14:15:55 GMT"/>
					<outline text="And then I found these docs, which were *exactly* what I needed. If you're trying to figure out how the wordpress.com api works, this is the place to start. " created="Sun, 27 Aug 2023 14:15:55 GMT">
						<outline text="https://developer.wordpress.com/docs/oauth2/" created="Sun, 27 Aug 2023 14:15:56 GMT"/>
						</outline>
					<outline text="Added a new config value -- config.scopes, defaults to &quot;global&quot;. With that I was able to define the /getusersites endpoint. And it works. This is a big part of what I was trying to get to." created="Sun, 27 Aug 2023 14:55:24 GMT"/>
					<outline text="Run the example client and in the console enter: " created="Sun, 27 Aug 2023 14:57:32 GMT">
						<outline text="&lt;code&gt;testGetUserSites ()&lt;/code&gt;"/>
						</outline>
					</outline>
				<outline text="#### 8/26/23; 12:14:10 PM by DW" created="Sat, 26 Aug 2023 16:14:07 GMT">
					<outline text="Now I &lt;i&gt;really&lt;/i&gt; have it working. :smile: " created="Sat, 26 Aug 2023 18:18:40 GMT"/>
					<outline text="What I didn't know about the last version is that the accessToken was getting mangled by URL-encoding it. " created="Sat, 26 Aug 2023 18:18:49 GMT"/>
					<outline text="I hadn't actually used the accessToken until today and when I did, I got an error from wordpress.com saying that it wasn't a valid token. " created="Sat, 26 Aug 2023 18:19:40 GMT"/>
					<outline text="After some thought and working it out with ChatGPT (my virtual programming partner, &lt;a href=&quot;https://chat.openai.com/share/7ecef75d-7fb4-475c-940e-7834258da3e5&quot;&gt;transcript included&lt;/a&gt;) I send the token back and forth by base64-ing, and url-safing it, and only doing it via HTTPS. And it works. I got a nice structure of information about me back from the server. " created="Sat, 26 Aug 2023 18:20:11 GMT"/>
					<outline text="Next session I'm going to try getting a list of my blogs, and then a list of posts, etc. The model here is the davetwitter package I build all my apps on. Not going to go nearly as far, at least not at first, but enough so that I can do a nice little editor for WordPress writing. " created="Sat, 26 Aug 2023 18:21:44 GMT"/>
					<outline text="To test, go to the &lt;a href=&quot;http://scripting.com/code/wpidentity/client/&quot;&gt;client test page&lt;/a&gt;. Sign in, then open the JavaScript console and type: " created="Sat, 26 Aug 2023 18:23:08 GMT">
						<outline text="&lt;code&gt;testGetUserInfo ()&lt;/code&gt;"/>
						</outline>
					<outline text="If it worked you should see some info about yourself. If it didn't please report an &lt;a href=&quot;https://github.com/scripting/wordpressIdentity/issues&quot;&gt;issue&lt;/a&gt;. " created="Sat, 26 Aug 2023 18:24:12 GMT"/>
					</outline>
				<outline text="#### 8/22/23; 10:21:35 AM by DW" created="Sat, 12 Aug 2023 22:34:42 GMT">
					<outline text="Started." created="Sat, 12 Aug 2023 22:34:44 GMT"/>
					<outline text="A8C docs are here -- " created="Sat, 26 Aug 2023 16:14:11 GMT">
						<outline text="https://developer.wordpress.com/docs/wpcc/" created="Sat, 26 Aug 2023 16:14:25 GMT"/>
						</outline>
					<outline text="A8C examples --" created="Sat, 26 Aug 2023 16:18:18 GMT">
						<outline text="https://github.com/Automattic/wpcom-connect-examples" created="Sat, 26 Aug 2023 16:18:22 GMT"/>
						</outline>
					<outline text="WPCOM docs --" created="Sun, 27 Aug 2023 14:15:30 GMT">
						<outline text="https://github.com/Automattic/wp-calypso/tree/trunk/packages/wpcom.js" created="Sun, 27 Aug 2023 14:15:36 GMT"/>
						</outline>
					<outline text="Repo is here --" created="Sat, 26 Aug 2023 16:14:28 GMT">
						<outline text="https://github.com/scripting/wordpressIdentity" created="Sat, 26 Aug 2023 16:14:31 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;wpidentity&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Implements OAuth identity with wordpress.com for Node.js apps.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;main&quot;: &quot;wpidentity.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;wpcom&quot;: &quot;*&quot;," created="Sat, 26 Aug 2023 16:21:40 GMT"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;" created="Tue, 22 Aug 2023 15:21:53 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="wpidentity.js">
				<outline text="var myProductName = &quot;wpidentity&quot;, myVersion = &quot;0.4.0&quot;;"/>
				<outline text="" created="Sat, 12 Aug 2023 22:37:22 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;); "/>
				<outline text="const request = require (&quot;request&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const wpcom = require (&quot;wpcom&quot;); //8/26/23 by DW"/>
				<outline text="" created="Tue, 22 Aug 2023 15:11:42 GMT"/>
				<outline text="var config = { ">
					<outline text="port: process.env.PORT || 1408,"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="flAllowAccessFromAnywhere: true, //for davehttp"/>
					<outline text="" created="Tue, 22 Aug 2023 21:45:33 GMT"/>
					<outline text="myRandomNumber: utils.random (1, 1000000000)," created="Tue, 22 Aug 2023 21:45:33 GMT"/>
					<outline text="urlMyHomePage: &quot;http://scripting.com/code/wpidentity/client/&quot;," created="Tue, 22 Aug 2023 22:13:05 GMT"/>
					<outline text="" created="Tue, 22 Aug 2023 15:32:36 GMT"/>
					<outline text="urlRequestToken: &quot;https://public-api.wordpress.com/oauth2/token&quot;," created="Tue, 22 Aug 2023 15:32:36 GMT"/>
					<outline text="urlAuthorize: &quot;https://public-api.wordpress.com/oauth2/authorize&quot;," created="Tue, 22 Aug 2023 15:32:45 GMT"/>
					<outline text="urlAuthenticate: &quot;https://public-api.wordpress.com/oauth2/authenticate&quot;," created="Tue, 22 Aug 2023 15:33:00 GMT"/>
					<outline text="urlRedirect: &quot;http://localhost:1408/callbackFromWordpress&quot;," created="Tue, 22 Aug 2023 15:35:26 GMT"/>
					<outline text="" created="Sun, 27 Aug 2023 14:48:34 GMT"/>
					<outline text="scope: &quot;global&quot; //default -- 8/27/23 by DW" created="Sun, 27 Aug 2023 14:48:35 GMT"/>
					<outline text="};"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 17:45:27 GMT"/>
				<outline text="function base64UrlEncode (theData) {" created="Sat, 26 Aug 2023 17:45:27 GMT">
					<outline text="var base64 = Buffer.from (theData).toString ('base64');"/>
					<outline text="return (base64.replace ('+', '-').replace ('/', '_').replace (/=+$/, ''));"/>
					<outline text="}" created="Sat, 26 Aug 2023 17:45:41 GMT"/>
					</outline>
				<outline text="function base64UrlDecode (theData) {" created="Sat, 26 Aug 2023 17:46:35 GMT">
					<outline text="theData = theData.replace ('-', '+').replace ('_', '/');"/>
					<outline text="while (theData.length % 4) {">
						<outline text="theData += '=';"/>
						<outline text="}"/>
						</outline>
					<outline text="return (Buffer.from (theData, 'base64').toString ('utf-8'));"/>
					<outline text="}" created="Sat, 26 Aug 2023 17:46:55 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 17:45:27 GMT"/>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 16:30:01 GMT"/>
				<outline text="function getWordpressAuthorizeUrl () {" created="Tue, 22 Aug 2023 15:29:45 GMT">
					<outline text="var params = {">
						<outline text="client_id: config.clientId,"/>
						<outline text="redirect_uri: config.urlRedirect," created="Tue, 22 Aug 2023 15:35:04 GMT"/>
						<outline text="response_type: &quot;code&quot;," created="Tue, 22 Aug 2023 15:33:59 GMT"/>
						<outline text="scope: config.scope," created="Sat, 26 Aug 2023 22:23:40 GMT"/>
						<outline text="state: config.myRandomNumber" created="Tue, 22 Aug 2023 15:34:15 GMT"/>
						<outline text="};"/>
						</outline>
					<outline text="const url = config.urlAuthorize + &quot;?&quot; + utils.buildParamList (params);"/>
					<outline text="return (url);" created="Sun, 27 Aug 2023 14:32:01 GMT"/>
					<outline text="}" created="Tue, 22 Aug 2023 15:29:51 GMT"/>
					</outline>
				<outline text="function connectWithWordpress (callback) {" isComment="true" created="Tue, 22 Aug 2023 15:29:45 GMT">
					<outline text="var params = {">
						<outline text="client_id: config.clientId,"/>
						<outline text="redirect_uri: config.urlRedirect," created="Tue, 22 Aug 2023 15:35:04 GMT"/>
						<outline text="response_type: &quot;code&quot;," created="Tue, 22 Aug 2023 15:33:59 GMT"/>
						<outline text="scope: &quot;global,auth,user,read,posts,follow,activity,likes&quot;," created="Sat, 26 Aug 2023 22:23:40 GMT"/>
						<outline text="state: config.myRandomNumber" created="Tue, 22 Aug 2023 15:34:15 GMT"/>
						<outline text="};"/>
						</outline>
					<outline text="var apiUrl = config.urlAuthenticate + &quot;?&quot; + utils.buildParamList (params);"/>
					<outline text="request (apiUrl, function (err, response, body) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;connectWithWordpress: err.message == &quot; + err.message);"/>
							<outline text="callback (err);" created="Mon, 08 Nov 2021 17:33:37 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;connectWithWordpress: body == &quot; + body);" isComment="true"/>
							<outline text="callback (undefined, body);" created="Mon, 08 Nov 2021 17:38:59 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Tue, 22 Aug 2023 15:29:51 GMT"/>
					</outline>
				<outline text="function requestTokenFromWordpress (theCode, callback) {" created="Tue, 22 Aug 2023 16:24:37 GMT">
					<outline text="var theRequest = {">
						<outline text="method: &quot;POST&quot;,"/>
						<outline text="url: config.urlRequestToken," created="Tue, 22 Aug 2023 16:28:05 GMT"/>
						<outline text="form: {" created="Tue, 22 Aug 2023 16:35:36 GMT">
							<outline text="client_id: config.clientId,"/>
							<outline text="client_secret: config.clientSecret,"/>
							<outline text="redirect_uri: config.urlRedirect," created="Tue, 22 Aug 2023 15:35:04 GMT"/>
							<outline text="code: theCode," created="Tue, 22 Aug 2023 16:26:34 GMT"/>
							<outline text="scope: config.scope," isComment="true" created="Sat, 26 Aug 2023 22:23:40 GMT"/>
							<outline text="grant_type: &quot;authorization_code&quot;" created="Tue, 22 Aug 2023 15:33:59 GMT"/>
							<outline text="}" created="Tue, 22 Aug 2023 16:35:47 GMT"/>
							</outline>
						<outline text="};"/>
						</outline>
					<outline text="request (theRequest, function (err, response, body) {">
						<outline text="if (err) {">
							<outline text="callback (err);" created="Mon, 08 Nov 2021 17:33:37 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="try {" created="Tue, 22 Aug 2023 16:40:37 GMT">
								<outline text="const data = JSON.parse (body);" created="Tue, 22 Aug 2023 16:40:51 GMT"/>
								<outline text="callback (undefined, data);" created="Tue, 22 Aug 2023 16:41:07 GMT"/>
								<outline text="}" created="Tue, 22 Aug 2023 16:40:40 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Tue, 22 Aug 2023 16:40:41 GMT">
								<outline text="callback (err);" created="Tue, 22 Aug 2023 16:40:45 GMT"/>
								<outline text="}" created="Tue, 22 Aug 2023 16:40:48 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Tue, 22 Aug 2023 16:25:05 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 16:29:46 GMT"/>
				<outline text="function getUserInfo (accessToken, callback) { //8/26/23 by DW" created="Sat, 26 Aug 2023 16:23:29 GMT">
					<outline text="console.log (&quot;getUserInfo: accessToken == &quot; + accessToken);" created="Sat, 26 Aug 2023 16:53:38 GMT"/>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="wp.me ().get (callback);"/>
					<outline text="}" created="Sat, 26 Aug 2023 16:23:56 GMT"/>
					</outline>
				<outline text="function getUserSites (accessToken, callback) { //8/26/23 by DW" created="Sat, 26 Aug 2023 16:23:29 GMT">
					<outline text="console.log (&quot;getUserSites: accessToken == &quot; + accessToken);" created="Sat, 26 Aug 2023 16:53:38 GMT"/>
					<outline text="const wp = wpcom (accessToken);" created="Sat, 26 Aug 2023 16:24:49 GMT"/>
					<outline text="wp.me ().sites (callback);"/>
					<outline text="}" created="Sat, 26 Aug 2023 16:23:56 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 16:29:47 GMT"/>
				<outline text="function handleHttpRequest (theRequest) {" created="Tue, 22 Aug 2023 21:49:47 GMT">
					<outline text="const params = theRequest.params;" created="Tue, 22 Aug 2023 16:23:04 GMT"/>
					<outline text="const token = (params.token === undefined) ? undefined : base64UrlDecode (params.token);" created="Sat, 26 Aug 2023 22:04:27 GMT"/>
					<outline text="function returnRedirect (url, code) { //9/30/20 by DW">
						<outline text="var headers = {">
							<outline text="location: url"/>
							<outline text="};"/>
							</outline>
						<outline text="if (code === undefined) {">
							<outline text="code = 302;"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, headers);"/>
						<outline text="}"/>
						<outline text=""/>
						</outline>
					<outline text="function returnNotFound () {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnError (err) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="theRequest.httpReturn (503, &quot;text/plain&quot;, err.message);"/>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnData (jstruct) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="theRequest.httpReturn (200, &quot;application/javascript&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function httpReturn (err, data) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="if (err) {" created="Thu, 27 Jan 2022 16:15:45 GMT">
							<outline text="returnError (err);" created="Mon, 28 Feb 2022 14:42:42 GMT"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:48 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 27 Jan 2022 16:15:49 GMT">
							<outline text="returnData (data);" created="Thu, 27 Jan 2022 16:15:54 GMT"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:51 GMT"/>
							</outline>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function returnHtml (err, htmltext) {" created="Mon, 28 Feb 2022 14:38:48 GMT">
						<outline text="if (err) {" created="Thu, 27 Jan 2022 16:15:45 GMT">
							<outline text="returnError (err);" created="Mon, 28 Feb 2022 14:42:42 GMT"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:48 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 27 Jan 2022 16:15:49 GMT">
							<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext);"/>
							<outline text="}" created="Thu, 27 Jan 2022 16:15:51 GMT"/>
							</outline>
						<outline text="}" created="Mon, 28 Feb 2022 14:38:53 GMT"/>
						</outline>
					<outline text="function tokenRequired (callback) {" created="Sat, 26 Aug 2023 22:05:46 GMT">
						<outline text="if (token === undefined) {" created="Sat, 26 Aug 2023 22:06:00 GMT">
							<outline text="const message = &quot;Can't get the info because the user must be logged in.&quot;;" created="Sat, 26 Aug 2023 22:06:28 GMT"/>
							<outline text="returnError ({message});" created="Sat, 26 Aug 2023 22:06:21 GMT"/>
							<outline text="}" created="Sat, 26 Aug 2023 22:06:06 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 26 Aug 2023 22:06:06 GMT">
							<outline text="callback ();" created="Sat, 26 Aug 2023 22:06:09 GMT"/>
							<outline text="}" created="Sat, 26 Aug 2023 22:06:11 GMT"/>
							</outline>
						<outline text="}" created="Sat, 26 Aug 2023 22:05:55 GMT"/>
						</outline>
					<outline text="switch (theRequest.lowerpath) {">
						<outline text="case &quot;/now&quot;:">
							<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ().toUTCString ());"/>
							<outline text="return;"/>
							</outline>
						<outline text="case &quot;/connect&quot;: " created="Tue, 22 Aug 2023 15:28:53 GMT">
							<outline text="returnRedirect (getWordpressAuthorizeUrl ());" created="Tue, 22 Aug 2023 15:29:31 GMT"/>
							<outline text="connectWithWordpress (returnHtml);" isComment="true" created="Tue, 22 Aug 2023 15:29:31 GMT"/>
							<outline text="return;" created="Tue, 22 Aug 2023 15:29:08 GMT"/>
							</outline>
						<outline text="case &quot;/callbackfromwordpress&quot;:" created="Tue, 22 Aug 2023 16:19:15 GMT">
							<outline text="http://localhost:1408/callbackFromWordpress?code=UhRCafYhq8&amp;state=1204" isComment="true" created="Tue, 22 Aug 2023 16:23:29 GMT"/>
							<outline text="if (params.state != config.myRandomNumber) {" created="Tue, 22 Aug 2023 21:46:52 GMT">
								<outline text="const message = &quot;Can't connect the user because the secret code doesn't match the one we sent.&quot;;" created="Tue, 22 Aug 2023 21:47:36 GMT"/>
								<outline text="returnError ({message});" created="Tue, 22 Aug 2023 21:47:21 GMT"/>
								<outline text="}" created="Tue, 22 Aug 2023 21:47:06 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 22 Aug 2023 21:47:07 GMT">
								<outline text="requestTokenFromWordpress (params.code, function (err, tokenData) {" created="Tue, 22 Aug 2023 16:29:59 GMT">
									<outline text="if (err) {" created="Tue, 22 Aug 2023 16:41:24 GMT">
										<outline text="console.log (&quot;requestTokenFromWordpress: err.message == &quot; + err.message);"/>
										<outline text="returnError (err);" created="Tue, 22 Aug 2023 16:43:45 GMT"/>
										<outline text="}" created="Tue, 22 Aug 2023 16:41:32 GMT"/>
										</outline>
									<outline text="else {" created="Tue, 22 Aug 2023 16:41:38 GMT">
										<outline text="console.log (&quot;tokenData == &quot; + utils.jsonStringify (tokenData));" isComment="true" created="Tue, 22 Aug 2023 16:42:24 GMT"/>
										<outline text="const urlRedirect = config.urlMyHomePage + &quot;?accesstoken=&quot; + base64UrlEncode (tokenData.access_token);" created="Wed, 23 Aug 2023 12:12:04 GMT"/>
										<outline text="console.log (&quot;urlRedirect == &quot; + urlRedirect);" isComment="true" created="Wed, 23 Aug 2023 12:11:59 GMT"/>
										<outline text="returnRedirect (urlRedirect);" created="Tue, 22 Aug 2023 22:14:02 GMT"/>
										<outline text="}" created="Tue, 22 Aug 2023 16:41:40 GMT"/>
										</outline>
									<outline text="});" created="Tue, 22 Aug 2023 16:30:09 GMT"/>
									</outline>
								<outline text="}" created="Tue, 22 Aug 2023 21:47:09 GMT"/>
								</outline>
							<outline text="return;" created="Tue, 22 Aug 2023 16:19:22 GMT"/>
							</outline>
						<outline text="case &quot;/getuserinfo&quot;: //8/26/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
							<outline text="tokenRequired (function () {" created="Sat, 26 Aug 2023 22:05:23 GMT">
								<outline text="getUserInfo (token, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
								<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
								</outline>
							<outline text="return;" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
							</outline>
						<outline text="case &quot;/getusersites&quot;: //8/26/23 by DW" created="Sat, 21 Jun 2014 14:36:44 GMT" pgfnum="42364">
							<outline text="tokenRequired (function () {" created="Sat, 26 Aug 2023 22:05:23 GMT">
								<outline text="getUserSites (token, httpReturn);" created="Thu, 18 Mar 2021 17:34:53 GMT"/>
								<outline text="});" created="Sat, 26 Aug 2023 22:05:35 GMT"/>
								</outline>
							<outline text="return;" created="Sat, 21 Jun 2014 14:37:03 GMT" pgfnum="42365"/>
							</outline>
						<outline text="default:">
							<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
							<outline text="return;"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}" created="Tue, 22 Aug 2023 21:49:55 GMT"/>
					</outline>
				<outline text="" created="Tue, 22 Aug 2023 15:29:46 GMT"/>
				<outline text="readConfig (&quot;config.json&quot;, config, function ()  {" created="Sat, 12 Aug 2023 23:07:16 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Mon, 14 Aug 2023 14:26:45 GMT"/>
					<outline text="davehttp.start (config, handleHttpRequest);"/>
					<outline text="});" created="Sat, 12 Aug 2023 23:07:41 GMT"/>
					</outline>
				</outline>
			<outline text="client/styles.css" created="Wed, 23 Aug 2023 12:30:33 GMT">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 60%;"/>
					<outline text="margin-top: 150px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;" created="Fri, 11 Jun 2021 12:29:37 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divLogonButton {" created="Wed, 23 Aug 2023 12:38:42 GMT">
					<outline text="display: none;" created="Wed, 23 Aug 2023 12:38:55 GMT"/>
					<outline text="}" created="Wed, 23 Aug 2023 12:38:44 GMT"/>
					</outline>
				<outline text=".divLoggedInMessage {" created="Wed, 23 Aug 2023 12:38:42 GMT">
					<outline text="display: none;" created="Wed, 23 Aug 2023 12:38:55 GMT"/>
					<outline text="}" created="Wed, 23 Aug 2023 12:38:44 GMT"/>
					</outline>
				</outline>
			<outline text="client/code.js" created="Wed, 23 Aug 2023 12:21:15 GMT">
				<outline text="" created="Wed, 23 Aug 2023 12:22:06 GMT"/>
				<outline text="var wordpressMemory = {" created="Wed, 23 Aug 2023 12:22:06 GMT">
					<outline text="accessToken: undefined" created="Wed, 23 Aug 2023 12:22:51 GMT"/>
					<outline text="};" created="Wed, 23 Aug 2023 12:22:14 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 16:34:32 GMT"/>
				<outline text="const flUseLocalServer = false;" created="Sat, 26 Aug 2023 22:13:03 GMT"/>
				<outline text="" created="Sat, 26 Aug 2023 22:13:13 GMT"/>
				<outline text="function getServerAddress () {" created="Sat, 26 Aug 2023 16:34:33 GMT">
					<outline text="if (flUseLocalServer) {" created="Sat, 26 Aug 2023 22:13:16 GMT">
						<outline text="return (&quot;http://localhost:1408/&quot;);" created="Sat, 26 Aug 2023 16:43:46 GMT"/>
						<outline text="}" created="Sat, 26 Aug 2023 22:13:18 GMT"/>
						</outline>
					<outline text="else {" created="Sat, 26 Aug 2023 22:13:19 GMT">
						<outline text="return (&quot;https://wpidentity.scripting.com/&quot;);" created="Sat, 26 Aug 2023 16:43:46 GMT"/>
						<outline text="}" created="Sat, 26 Aug 2023 22:13:21 GMT"/>
						</outline>
					<outline text="}" created="Sat, 26 Aug 2023 16:43:36 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 17:55:46 GMT"/>
				<outline text="function base64UrlEncode (data) {">
					<outline text="let base64 = btoa (unescape (encodeURIComponent (data)));"/>
					<outline text="return base64.replace ('+', '-').replace ('/', '_').replace (/=+$/, '');"/>
					<outline text="}"/>
					</outline>
				<outline text="function base64UrlDecode (theData) {" created="Sat, 26 Aug 2023 17:46:35 GMT">
					<outline text="theData = theData.replace ('-', '+').replace ('_', '/');"/>
					<outline text="while (theData.length % 4) {">
						<outline text="theData += '=';"/>
						<outline text="}"/>
						</outline>
					<outline text="return (decodeURIComponent (escape (atob (theData))));"/>
					<outline text="}" created="Sat, 26 Aug 2023 17:46:55 GMT"/>
					</outline>
				<outline text="function httpRequest (url, timeout, headers, callback) { ">
					<outline text="Changes" isComment="true">
						<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
							<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
							</outline>
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
							<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
							<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function servercall (path, params, flAuthenticated, callback, urlServer=getServerAddress ()) {">
					<outline text="Changes" isComment="true">
						<outline text="4/22/23; 1:24:18 PM by DW" created="Sat, 22 Apr 2023 17:24:17 GMT">
							<outline text="Change twBuildParamList call to buildParamList." created="Sat, 22 Apr 2023 17:24:19 GMT"/>
							</outline>
						<outline text="12/23/22; 10:30:22 PM by DW" created="Sat, 24 Dec 2022 03:30:22 GMT">
							<outline text="Support email params. Don't send oauth token if it's not defined." created="Sat, 24 Dec 2022 03:30:22 GMT"/>
							</outline>
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="const whenstart = new Date ();"/>
					<outline text="var headers = undefined;" created="Sat, 26 Aug 2023 17:28:22 GMT"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) {">
						<outline text="params.token = base64UrlEncode (wordpressMemory.accessToken);" created="Sat, 26 Aug 2023 18:00:08 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="console.log (&quot;servercall: url == &quot; + url);" created="Mon, 30 Jan 2023 17:35:43 GMT"/>
					<outline text="httpRequest (url, undefined, headers, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getUserInfo (callback) { //8/26/23 by DW" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="servercall (&quot;getuserinfo&quot;, undefined, true, callback);"/>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function getUserSites (callback) { //8/26/23 by DW" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="servercall (&quot;getusersites&quot;, undefined, true, callback);"/>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function testGetUserInfo () {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getUserInfo (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="function testGetUserSites () {" created="Thu, 06 Oct 2022 17:45:27 GMT">
					<outline text="getUserSites (function (err, data) {" created="Fri, 23 Dec 2022 20:06:07 GMT">
						<outline text="if (err) {" created="Fri, 23 Dec 2022 20:06:30 GMT">
							<outline text="console.log (err.message);" created="Fri, 23 Dec 2022 20:06:45 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:33 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 23 Dec 2022 20:06:33 GMT">
							<outline text="console.log (jsonStringify (data));" created="Fri, 23 Dec 2022 20:06:52 GMT"/>
							<outline text="}" created="Fri, 23 Dec 2022 20:06:35 GMT"/>
							</outline>
						<outline text="});" created="Fri, 23 Dec 2022 20:06:24 GMT"/>
						</outline>
					<outline text="}" created="Fri, 23 Dec 2022 20:06:04 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Aug 2023 16:34:33 GMT"/>
				<outline text="function userIsLoggedIn () {" created="Wed, 23 Aug 2023 12:35:03 GMT">
					<outline text="return (wordpressMemory.accessToken !== undefined);" created="Wed, 23 Aug 2023 12:35:14 GMT"/>
					<outline text="}" created="Wed, 23 Aug 2023 12:35:12 GMT"/>
					</outline>
				<outline text="function connectWithWordpress () {" created="Tue, 22 Aug 2023 22:07:54 GMT">
					<outline text="location.href = getServerAddress () + &quot;connect&quot;;" isComment="true" created="Sat, 26 Aug 2023 16:44:18 GMT"/>
					<outline text="location.href = &quot;https://wpidentity.scripting.com/connect&quot;;" created="Tue, 22 Aug 2023 22:08:27 GMT"/>
					<outline text="location.href = &quot;http://localhost:1408/connect&quot;;" isComment="true" created="Tue, 22 Aug 2023 22:08:27 GMT"/>
					<outline text="}" created="Tue, 22 Aug 2023 22:07:57 GMT"/>
					</outline>
				<outline text="function logOffWordpress () {" created="Wed, 23 Aug 2023 12:41:35 GMT">
					<outline text="wordpressMemory.accessToken = undefined;" created="Wed, 23 Aug 2023 12:41:46 GMT"/>
					<outline text="localStorage.wordpressMemory = jsonStringify (wordpressMemory);" created="Wed, 23 Aug 2023 12:23:35 GMT"/>
					<outline text="location.href = location.href;" created="Wed, 23 Aug 2023 12:42:00 GMT"/>
					<outline text="}" created="Wed, 23 Aug 2023 12:41:39 GMT"/>
					</outline>
				<outline text="function startup () {" created="Tue, 22 Aug 2023 22:21:34 GMT">
					<outline text="console.log (&quot;startup&quot;);" created="Tue, 22 Aug 2023 22:22:11 GMT"/>
					<outline text="" created="Tue, 22 Aug 2023 22:25:53 GMT"/>
					<outline text="const accessToken = getURLParameter (&quot;accesstoken&quot;);"/>
					<outline text="" created="Wed, 23 Aug 2023 12:20:38 GMT"/>
					<outline text="if (accessToken != &quot;null&quot;) {" created="Wed, 23 Aug 2023 12:20:38 GMT">
						<outline text="wordpressMemory.accessToken = base64UrlDecode (accessToken);" created="Wed, 23 Aug 2023 12:20:54 GMT"/>
						<outline text="localStorage.wordpressMemory = jsonStringify (wordpressMemory);" created="Wed, 23 Aug 2023 12:23:35 GMT"/>
						<outline text="const newHref = stringNthField (location.href, &quot;?&quot;, 1);" created="Wed, 23 Aug 2023 12:20:54 GMT"/>
						<outline text="location.href = newHref;" created="Wed, 23 Aug 2023 12:25:44 GMT"/>
						<outline text="}" created="Wed, 23 Aug 2023 12:20:49 GMT"/>
						</outline>
					<outline text="" created="Wed, 23 Aug 2023 12:20:38 GMT"/>
					<outline text="if (localStorage.wordpressMemory !== undefined) {" created="Wed, 23 Aug 2023 12:26:00 GMT">
						<outline text="wordpressMemory = JSON.parse (localStorage.wordpressMemory);" created="Wed, 23 Aug 2023 12:26:16 GMT"/>
						<outline text="}" created="Wed, 23 Aug 2023 12:26:09 GMT"/>
						</outline>
					<outline text="" created="Wed, 23 Aug 2023 12:20:38 GMT"/>
					<outline text="console.log (&quot;wordpressMemory == &quot; + jsonStringify (wordpressMemory));" created="Wed, 23 Aug 2023 12:26:30 GMT"/>
					<outline text="" created="Wed, 23 Aug 2023 12:35:51 GMT"/>
					<outline text="if (userIsLoggedIn ()) {" created="Wed, 23 Aug 2023 12:35:51 GMT">
						<outline text="$(&quot;.divLogonButton&quot;).css (&quot;display&quot;, &quot;none&quot;);" created="Wed, 23 Aug 2023 12:36:07 GMT"/>
						<outline text="$(&quot;.divLoggedInMessage&quot;).css (&quot;display&quot;, &quot;block&quot;);" created="Wed, 23 Aug 2023 12:36:07 GMT"/>
						<outline text="}" created="Wed, 23 Aug 2023 12:35:59 GMT"/>
						</outline>
					<outline text="else {" created="Wed, 23 Aug 2023 12:36:00 GMT">
						<outline text="$(&quot;.divLogonButton&quot;).css (&quot;display&quot;, &quot;block&quot;);" created="Wed, 23 Aug 2023 12:36:07 GMT"/>
						<outline text="$(&quot;.divLoggedInMessage&quot;).css (&quot;display&quot;, &quot;none&quot;);" created="Wed, 23 Aug 2023 12:36:07 GMT"/>
						<outline text="}" created="Wed, 23 Aug 2023 12:36:02 GMT"/>
						</outline>
					<outline text="" created="Wed, 23 Aug 2023 12:35:51 GMT"/>
					<outline text="}" created="Tue, 22 Aug 2023 22:21:40 GMT"/>
					</outline>
				</outline>
			<outline text="client/index.html" created="Tue, 22 Aug 2023 22:01:38 GMT">
				<outline text="&lt;html&gt;" created="Tue, 22 Aug 2023 22:01:47 GMT">
					<outline text="&lt;head&gt;" created="Tue, 22 Aug 2023 22:05:38 GMT">
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot;&gt;"/>
						<outline text="&lt;/head&gt;" created="Tue, 22 Aug 2023 22:05:45 GMT"/>
						</outline>
					<outline text="&lt;body&gt;" created="Tue, 22 Aug 2023 22:01:56 GMT">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;" created="Tue, 22 Aug 2023 22:04:59 GMT">
							<outline text="&lt;div class=&quot;divLoggedOnStatus&quot;&gt;" created="Wed, 23 Aug 2023 12:37:56 GMT">
								<outline text="&lt;div class=&quot;divLogonButton&quot;&gt;" created="Wed, 23 Aug 2023 12:29:57 GMT">
									<outline text="&lt;center&gt;" created="Tue, 22 Aug 2023 22:06:48 GMT">
										<outline text="&lt;img alt=&quot;&quot; src=&quot;//s0.wp.com/i/wpcc-button.png&quot; width=&quot;231&quot; scale=&quot;0&quot; onclick=&quot;connectWithWordpress ()&quot;&gt;"/>
										<outline text="&lt;/center&gt;" created="Tue, 22 Aug 2023 22:06:50 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Wed, 23 Aug 2023 12:30:05 GMT"/>
									</outline>
								<outline text="&lt;div class=&quot;divLoggedInMessage&quot;&gt;" created="Wed, 23 Aug 2023 12:36:50 GMT">
									<outline text="&lt;center&gt;" created="Tue, 22 Aug 2023 22:06:48 GMT">
										<outline text="&lt;p&gt;You are now logged on with wordpress.com.&lt;/p&gt;" created="Wed, 23 Aug 2023 12:42:39 GMT"/>
										<outline text="&lt;p&gt;Click &lt;a onclick=&quot;logOffWordpress ()&quot; style=&quot;cursor: pointer&quot;&gt;here&lt;/a&gt; to log off wordpress.com.&lt;/p&gt;" created="Wed, 23 Aug 2023 12:37:06 GMT"/>
										<outline text="&lt;/center&gt;" created="Tue, 22 Aug 2023 22:06:50 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;" created="Wed, 23 Aug 2023 12:37:10 GMT"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Wed, 23 Aug 2023 12:37:58 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Tue, 22 Aug 2023 22:06:06 GMT"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;" created="Tue, 22 Aug 2023 22:01:59 GMT"/>
						</outline>
					<outline text="&lt;/html&gt;" created="Tue, 22 Aug 2023 22:01:51 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Tue, 22 Aug 2023 21:40:09 GMT">
				<outline text="# wordpressIdentity">
					<outline text="Implements &lt;a href=&quot;https://developer.wordpress.com/docs/wpcc/&quot;&gt;OAuth identity&lt;/a&gt; with wordpress.com for Node.js apps."/>
					</outline>
				<outline text="### It works" created="Wed, 23 Aug 2023 12:53:46 GMT">
					<outline text="You can try it out &lt;a href=&quot;http://scripting.com/code/wpidentity/client/&quot;&gt;here&lt;/a&gt;." created="Wed, 23 Aug 2023 12:53:51 GMT"/>
					<outline text="It doesn't do anything but log you on or off, for now. " created="Wed, 23 Aug 2023 12:53:55 GMT"/>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Tue, 22 Aug 2023 14:23:58 GMT">
				<outline text="{" created="Tue, 22 Aug 2023 14:24:01 GMT">
					<outline text="}" created="Tue, 22 Aug 2023 14:24:02 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Tue, 22 Aug 2023 14:28:04 GMT">
			<outline text="nodeEditorSuite.utilities.buildWpIdentity ()" created="Wed, 26 Jul 2023 16:00:18 GMT"/>
			</outline>
		</body>
	</opml>
